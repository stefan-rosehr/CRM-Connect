'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsHPCReweSKR04"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsHPCReweSKR04
    Inherits Global.System.Data.DataSet
    
    Private tableKHKBuchungserfassung As KHKBuchungserfassungDataTable
    
    Private tableKHKBuchungserfassungOp As KHKBuchungserfassungOpDataTable
    
    Private tableKHKBuchungByOp As KHKBuchungByOpDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("KHKBuchungserfassung")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungserfassungDataTable(ds.Tables("KHKBuchungserfassung")))
            End If
            If (Not (ds.Tables("KHKBuchungserfassungOp")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungserfassungOpDataTable(ds.Tables("KHKBuchungserfassungOp")))
            End If
            If (Not (ds.Tables("KHKBuchungByOp")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungByOpDataTable(ds.Tables("KHKBuchungByOp")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KHKBuchungserfassung() As KHKBuchungserfassungDataTable
        Get
            Return Me.tableKHKBuchungserfassung
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KHKBuchungserfassungOp() As KHKBuchungserfassungOpDataTable
        Get
            Return Me.tableKHKBuchungserfassungOp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KHKBuchungByOp() As KHKBuchungByOpDataTable
        Get
            Return Me.tableKHKBuchungByOp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsHPCReweSKR04 = CType(MyBase.Clone,dsHPCReweSKR04)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("KHKBuchungserfassung")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungserfassungDataTable(ds.Tables("KHKBuchungserfassung")))
            End If
            If (Not (ds.Tables("KHKBuchungserfassungOp")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungserfassungOpDataTable(ds.Tables("KHKBuchungserfassungOp")))
            End If
            If (Not (ds.Tables("KHKBuchungByOp")) Is Nothing) Then
                MyBase.Tables.Add(New KHKBuchungByOpDataTable(ds.Tables("KHKBuchungByOp")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableKHKBuchungserfassung = CType(MyBase.Tables("KHKBuchungserfassung"),KHKBuchungserfassungDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKHKBuchungserfassung) Is Nothing) Then
                Me.tableKHKBuchungserfassung.InitVars
            End If
        End If
        Me.tableKHKBuchungserfassungOp = CType(MyBase.Tables("KHKBuchungserfassungOp"),KHKBuchungserfassungOpDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKHKBuchungserfassungOp) Is Nothing) Then
                Me.tableKHKBuchungserfassungOp.InitVars
            End If
        End If
        Me.tableKHKBuchungByOp = CType(MyBase.Tables("KHKBuchungByOp"),KHKBuchungByOpDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKHKBuchungByOp) Is Nothing) Then
                Me.tableKHKBuchungByOp.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsHPCReweSKR04"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsHPCReweSKR04.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableKHKBuchungserfassung = New KHKBuchungserfassungDataTable()
        MyBase.Tables.Add(Me.tableKHKBuchungserfassung)
        Me.tableKHKBuchungserfassungOp = New KHKBuchungserfassungOpDataTable()
        MyBase.Tables.Add(Me.tableKHKBuchungserfassungOp)
        Me.tableKHKBuchungByOp = New KHKBuchungByOpDataTable()
        MyBase.Tables.Add(Me.tableKHKBuchungByOp)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeKHKBuchungserfassung() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeKHKBuchungserfassungOp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeKHKBuchungByOp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsHPCReweSKR04 = New dsHPCReweSKR04()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub KHKBuchungserfassungRowChangeEventHandler(ByVal sender As Object, ByVal e As KHKBuchungserfassungRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub KHKBuchungserfassungOpRowChangeEventHandler(ByVal sender As Object, ByVal e As KHKBuchungserfassungOpRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub KHKBuchungByOpRowChangeEventHandler(ByVal sender As Object, ByVal e As KHKBuchungByOpRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KHKBuchungserfassungDataTable
        Inherits Global.System.Data.TypedTableBase(Of KHKBuchungserfassungRow)
        
        Private columnTan As Global.System.Data.DataColumn
        
        Private columnMandant As Global.System.Data.DataColumn
        
        Private columnSitzung As Global.System.Data.DataColumn
        
        Private columnBenutzer As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnJournal As Global.System.Data.DataColumn
        
        Private columnPeriode As Global.System.Data.DataColumn
        
        Private columnBuchungsdatum As Global.System.Data.DataColumn
        
        Private columnKtoSoll As Global.System.Data.DataColumn
        
        Private columnKtoSollTyp As Global.System.Data.DataColumn
        
        Private columnKtoSollSammelkto As Global.System.Data.DataColumn
        
        Private columnKtoHaben As Global.System.Data.DataColumn
        
        Private columnKtoHabentyp As Global.System.Data.DataColumn
        
        Private columnKtoHabenSammelkto As Global.System.Data.DataColumn
        
        Private columnAnlagenbuchung As Global.System.Data.DataColumn
        
        Private columnBelegdatum As Global.System.Data.DataColumn
        
        Private columnBelegnummer As Global.System.Data.DataColumn
        
        Private columnBuchungstext As Global.System.Data.DataColumn
        
        Private columnBuchungsmemo As Global.System.Data.DataColumn
        
        Private columnBuchungsbetrag As Global.System.Data.DataColumn
        
        Private columnBuchungswaehrung As Global.System.Data.DataColumn
        
        Private columnEigenwaehrungsbetrag As Global.System.Data.DataColumn
        
        Private columnSteuerart As Global.System.Data.DataColumn
        
        Private columnSteuercode As Global.System.Data.DataColumn
        
        Private columnSteuerberechnung As Global.System.Data.DataColumn
        
        Private columnSteuersatz As Global.System.Data.DataColumn
        
        Private columnSteuerbetrag As Global.System.Data.DataColumn
        
        Private columnBuchungsschluessel As Global.System.Data.DataColumn
        
        Private columnAdresse As Global.System.Data.DataColumn
        
        Private columnPeriodik As Global.System.Data.DataColumn
        
        Private columnTimestamp As Global.System.Data.DataColumn
        
        Private columnBelegart As Global.System.Data.DataColumn
        
        Private columnGSMemo As Global.System.Data.DataColumn
        
        Private columnJournalAlt As Global.System.Data.DataColumn
        
        Private columnEULand As Global.System.Data.DataColumn
        
        Private columnEUUStID As Global.System.Data.DataColumn
        
        Private columnEUDreiecksgeschaeft As Global.System.Data.DataColumn
        
        Private columnAenderungsdatum As Global.System.Data.DataColumn
        
        Private columnGSSchluessel As Global.System.Data.DataColumn
        
        Private columnAbschluss As Global.System.Data.DataColumn
        
        Private columnSMKontoart As Global.System.Data.DataColumn
        
        Private columnSteuernummer As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KHKBuchungserfassung"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MandantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMandant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SitzungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitzung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BenutzerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBenutzer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property JournalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJournal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSoll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSollTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollSammelktoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSollSammelkto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHaben
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabentypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHabentyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabenSammelktoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHabenSammelkto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AnlagenbuchungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnlagenbuchung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungstextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungstext
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsmemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsmemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungswaehrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungswaehrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EigenwaehrungsbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEigenwaehrungsbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuercodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuercode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerberechnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerberechnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuersatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuersatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsschluesselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsschluessel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AdresseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdresse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GSMemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSMemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property JournalAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJournalAlt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EULandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEULand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EUUStIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEUUStID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EUDreiecksgeschaeftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEUDreiecksgeschaeft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AenderungsdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAenderungsdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GSSchluesselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSSchluessel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AbschlussColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbschluss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SMKontoartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSMKontoart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuernummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuernummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KHKBuchungserfassungRow
            Get
                Return CType(Me.Rows(index),KHKBuchungserfassungRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungRowChanging As KHKBuchungserfassungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungRowChanged As KHKBuchungserfassungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungRowDeleting As KHKBuchungserfassungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungRowDeleted As KHKBuchungserfassungRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddKHKBuchungserfassungRow(ByVal row As KHKBuchungserfassungRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddKHKBuchungserfassungRow( _
                    ByVal Tan As Integer,  _
                    ByVal Mandant As Short,  _
                    ByVal Sitzung As Integer,  _
                    ByVal Benutzer As String,  _
                    ByVal Status As Short,  _
                    ByVal Journal As Short,  _
                    ByVal Periode As Integer,  _
                    ByVal Buchungsdatum As Date,  _
                    ByVal KtoSoll As String,  _
                    ByVal KtoSollTyp As Short,  _
                    ByVal KtoSollSammelkto As Short,  _
                    ByVal KtoHaben As String,  _
                    ByVal KtoHabentyp As Short,  _
                    ByVal KtoHabenSammelkto As Short,  _
                    ByVal Anlagenbuchung As Short,  _
                    ByVal Belegdatum As Date,  _
                    ByVal Belegnummer As String,  _
                    ByVal Buchungstext As String,  _
                    ByVal Buchungsmemo As String,  _
                    ByVal Buchungsbetrag As Decimal,  _
                    ByVal Buchungswaehrung As String,  _
                    ByVal Eigenwaehrungsbetrag As Decimal,  _
                    ByVal Steuerart As String,  _
                    ByVal Steuercode As Short,  _
                    ByVal Steuerberechnung As Short,  _
                    ByVal Steuersatz As Decimal,  _
                    ByVal Steuerbetrag As Decimal,  _
                    ByVal Buchungsschluessel As Integer,  _
                    ByVal Adresse As Integer,  _
                    ByVal Periodik As Integer,  _
                    ByVal Timestamp() As Byte,  _
                    ByVal Belegart As String,  _
                    ByVal GSMemo As String,  _
                    ByVal JournalAlt As Short,  _
                    ByVal EULand As String,  _
                    ByVal EUUStID As String,  _
                    ByVal EUDreiecksgeschaeft As Short,  _
                    ByVal Aenderungsdatum As Date,  _
                    ByVal GSSchluessel As Integer,  _
                    ByVal Abschluss As Integer,  _
                    ByVal SMKontoart As String,  _
                    ByVal Steuernummer As String) As KHKBuchungserfassungRow
            Dim rowKHKBuchungserfassungRow As KHKBuchungserfassungRow = CType(Me.NewRow,KHKBuchungserfassungRow)
            Dim columnValuesArray() As Object = New Object() {Tan, Mandant, Sitzung, Benutzer, Status, Journal, Periode, Buchungsdatum, KtoSoll, KtoSollTyp, KtoSollSammelkto, KtoHaben, KtoHabentyp, KtoHabenSammelkto, Anlagenbuchung, Belegdatum, Belegnummer, Buchungstext, Buchungsmemo, Buchungsbetrag, Buchungswaehrung, Eigenwaehrungsbetrag, Steuerart, Steuercode, Steuerberechnung, Steuersatz, Steuerbetrag, Buchungsschluessel, Adresse, Periodik, Timestamp, Belegart, GSMemo, JournalAlt, EULand, EUUStID, EUDreiecksgeschaeft, Aenderungsdatum, GSSchluessel, Abschluss, SMKontoart, Steuernummer}
            rowKHKBuchungserfassungRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKHKBuchungserfassungRow)
            Return rowKHKBuchungserfassungRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByTanMandant(ByVal Tan As Integer, ByVal Mandant As Short) As KHKBuchungserfassungRow
            Return CType(Me.Rows.Find(New Object() {Tan, Mandant}),KHKBuchungserfassungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KHKBuchungserfassungDataTable = CType(MyBase.Clone,KHKBuchungserfassungDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KHKBuchungserfassungDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTan = MyBase.Columns("Tan")
            Me.columnMandant = MyBase.Columns("Mandant")
            Me.columnSitzung = MyBase.Columns("Sitzung")
            Me.columnBenutzer = MyBase.Columns("Benutzer")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnJournal = MyBase.Columns("Journal")
            Me.columnPeriode = MyBase.Columns("Periode")
            Me.columnBuchungsdatum = MyBase.Columns("Buchungsdatum")
            Me.columnKtoSoll = MyBase.Columns("KtoSoll")
            Me.columnKtoSollTyp = MyBase.Columns("KtoSollTyp")
            Me.columnKtoSollSammelkto = MyBase.Columns("KtoSollSammelkto")
            Me.columnKtoHaben = MyBase.Columns("KtoHaben")
            Me.columnKtoHabentyp = MyBase.Columns("KtoHabentyp")
            Me.columnKtoHabenSammelkto = MyBase.Columns("KtoHabenSammelkto")
            Me.columnAnlagenbuchung = MyBase.Columns("Anlagenbuchung")
            Me.columnBelegdatum = MyBase.Columns("Belegdatum")
            Me.columnBelegnummer = MyBase.Columns("Belegnummer")
            Me.columnBuchungstext = MyBase.Columns("Buchungstext")
            Me.columnBuchungsmemo = MyBase.Columns("Buchungsmemo")
            Me.columnBuchungsbetrag = MyBase.Columns("Buchungsbetrag")
            Me.columnBuchungswaehrung = MyBase.Columns("Buchungswaehrung")
            Me.columnEigenwaehrungsbetrag = MyBase.Columns("Eigenwaehrungsbetrag")
            Me.columnSteuerart = MyBase.Columns("Steuerart")
            Me.columnSteuercode = MyBase.Columns("Steuercode")
            Me.columnSteuerberechnung = MyBase.Columns("Steuerberechnung")
            Me.columnSteuersatz = MyBase.Columns("Steuersatz")
            Me.columnSteuerbetrag = MyBase.Columns("Steuerbetrag")
            Me.columnBuchungsschluessel = MyBase.Columns("Buchungsschluessel")
            Me.columnAdresse = MyBase.Columns("Adresse")
            Me.columnPeriodik = MyBase.Columns("Periodik")
            Me.columnTimestamp = MyBase.Columns("Timestamp")
            Me.columnBelegart = MyBase.Columns("Belegart")
            Me.columnGSMemo = MyBase.Columns("GSMemo")
            Me.columnJournalAlt = MyBase.Columns("JournalAlt")
            Me.columnEULand = MyBase.Columns("EULand")
            Me.columnEUUStID = MyBase.Columns("EUUStID")
            Me.columnEUDreiecksgeschaeft = MyBase.Columns("EUDreiecksgeschaeft")
            Me.columnAenderungsdatum = MyBase.Columns("Aenderungsdatum")
            Me.columnGSSchluessel = MyBase.Columns("GSSchluessel")
            Me.columnAbschluss = MyBase.Columns("Abschluss")
            Me.columnSMKontoart = MyBase.Columns("SMKontoart")
            Me.columnSteuernummer = MyBase.Columns("Steuernummer")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTan = New Global.System.Data.DataColumn("Tan", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTan)
            Me.columnMandant = New Global.System.Data.DataColumn("Mandant", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMandant)
            Me.columnSitzung = New Global.System.Data.DataColumn("Sitzung", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitzung)
            Me.columnBenutzer = New Global.System.Data.DataColumn("Benutzer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBenutzer)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnJournal = New Global.System.Data.DataColumn("Journal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJournal)
            Me.columnPeriode = New Global.System.Data.DataColumn("Periode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriode)
            Me.columnBuchungsdatum = New Global.System.Data.DataColumn("Buchungsdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsdatum)
            Me.columnKtoSoll = New Global.System.Data.DataColumn("KtoSoll", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSoll)
            Me.columnKtoSollTyp = New Global.System.Data.DataColumn("KtoSollTyp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSollTyp)
            Me.columnKtoSollSammelkto = New Global.System.Data.DataColumn("KtoSollSammelkto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSollSammelkto)
            Me.columnKtoHaben = New Global.System.Data.DataColumn("KtoHaben", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHaben)
            Me.columnKtoHabentyp = New Global.System.Data.DataColumn("KtoHabentyp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHabentyp)
            Me.columnKtoHabenSammelkto = New Global.System.Data.DataColumn("KtoHabenSammelkto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHabenSammelkto)
            Me.columnAnlagenbuchung = New Global.System.Data.DataColumn("Anlagenbuchung", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnlagenbuchung)
            Me.columnBelegdatum = New Global.System.Data.DataColumn("Belegdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegdatum)
            Me.columnBelegnummer = New Global.System.Data.DataColumn("Belegnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegnummer)
            Me.columnBuchungstext = New Global.System.Data.DataColumn("Buchungstext", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungstext)
            Me.columnBuchungsmemo = New Global.System.Data.DataColumn("Buchungsmemo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsmemo)
            Me.columnBuchungsbetrag = New Global.System.Data.DataColumn("Buchungsbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsbetrag)
            Me.columnBuchungswaehrung = New Global.System.Data.DataColumn("Buchungswaehrung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungswaehrung)
            Me.columnEigenwaehrungsbetrag = New Global.System.Data.DataColumn("Eigenwaehrungsbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEigenwaehrungsbetrag)
            Me.columnSteuerart = New Global.System.Data.DataColumn("Steuerart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerart)
            Me.columnSteuercode = New Global.System.Data.DataColumn("Steuercode", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuercode)
            Me.columnSteuerberechnung = New Global.System.Data.DataColumn("Steuerberechnung", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerberechnung)
            Me.columnSteuersatz = New Global.System.Data.DataColumn("Steuersatz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuersatz)
            Me.columnSteuerbetrag = New Global.System.Data.DataColumn("Steuerbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerbetrag)
            Me.columnBuchungsschluessel = New Global.System.Data.DataColumn("Buchungsschluessel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsschluessel)
            Me.columnAdresse = New Global.System.Data.DataColumn("Adresse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdresse)
            Me.columnPeriodik = New Global.System.Data.DataColumn("Periodik", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodik)
            Me.columnTimestamp = New Global.System.Data.DataColumn("Timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimestamp)
            Me.columnBelegart = New Global.System.Data.DataColumn("Belegart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegart)
            Me.columnGSMemo = New Global.System.Data.DataColumn("GSMemo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSMemo)
            Me.columnJournalAlt = New Global.System.Data.DataColumn("JournalAlt", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJournalAlt)
            Me.columnEULand = New Global.System.Data.DataColumn("EULand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEULand)
            Me.columnEUUStID = New Global.System.Data.DataColumn("EUUStID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEUUStID)
            Me.columnEUDreiecksgeschaeft = New Global.System.Data.DataColumn("EUDreiecksgeschaeft", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEUDreiecksgeschaeft)
            Me.columnAenderungsdatum = New Global.System.Data.DataColumn("Aenderungsdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAenderungsdatum)
            Me.columnGSSchluessel = New Global.System.Data.DataColumn("GSSchluessel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSSchluessel)
            Me.columnAbschluss = New Global.System.Data.DataColumn("Abschluss", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbschluss)
            Me.columnSMKontoart = New Global.System.Data.DataColumn("SMKontoart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSMKontoart)
            Me.columnSteuernummer = New Global.System.Data.DataColumn("Steuernummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuernummer)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTan, Me.columnMandant}, true))
            Me.columnTan.AllowDBNull = false
            Me.columnMandant.AllowDBNull = false
            Me.columnBenutzer.AllowDBNull = false
            Me.columnBenutzer.MaxLength = 128
            Me.columnKtoSoll.MaxLength = 20
            Me.columnKtoHaben.MaxLength = 20
            Me.columnBelegnummer.MaxLength = 20
            Me.columnBuchungstext.MaxLength = 255
            Me.columnBuchungsmemo.MaxLength = 2147483647
            Me.columnBuchungswaehrung.MaxLength = 3
            Me.columnSteuerart.MaxLength = 2
            Me.columnTimestamp.ReadOnly = true
            Me.columnBelegart.MaxLength = 20
            Me.columnGSMemo.MaxLength = 2147483647
            Me.columnEULand.MaxLength = 2
            Me.columnEUUStID.MaxLength = 15
            Me.columnEUDreiecksgeschaeft.AllowDBNull = false
            Me.columnSMKontoart.MaxLength = 2
            Me.columnSteuernummer.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewKHKBuchungserfassungRow() As KHKBuchungserfassungRow
            Return CType(Me.NewRow,KHKBuchungserfassungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KHKBuchungserfassungRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KHKBuchungserfassungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KHKBuchungserfassungRowChangedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungRowChanged(Me, New KHKBuchungserfassungRowChangeEvent(CType(e.Row,KHKBuchungserfassungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KHKBuchungserfassungRowChangingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungRowChanging(Me, New KHKBuchungserfassungRowChangeEvent(CType(e.Row,KHKBuchungserfassungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KHKBuchungserfassungRowDeletedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungRowDeleted(Me, New KHKBuchungserfassungRowChangeEvent(CType(e.Row,KHKBuchungserfassungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KHKBuchungserfassungRowDeletingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungRowDeleting(Me, New KHKBuchungserfassungRowChangeEvent(CType(e.Row,KHKBuchungserfassungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveKHKBuchungserfassungRow(ByVal row As KHKBuchungserfassungRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsHPCReweSKR04 = New dsHPCReweSKR04()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KHKBuchungserfassungDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KHKBuchungserfassungOpDataTable
        Inherits Global.System.Data.TypedTableBase(Of KHKBuchungserfassungOpRow)
        
        Private columnTan As Global.System.Data.DataColumn
        
        Private columnOpNr As Global.System.Data.DataColumn
        
        Private columnMandant As Global.System.Data.DataColumn
        
        Private columnOpDatum As Global.System.Data.DataColumn
        
        Private columnFaelligkeit As Global.System.Data.DataColumn
        
        Private columnSkontoFaelligkeit1 As Global.System.Data.DataColumn
        
        Private columnSkontoFaelligkeit2 As Global.System.Data.DataColumn
        
        Private columnZahlungskond As Global.System.Data.DataColumn
        
        Private columnInkassoart As Global.System.Data.DataColumn
        
        Private columnNettobedingung As Global.System.Data.DataColumn
        
        Private columnSkontobedingung1 As Global.System.Data.DataColumn
        
        Private columnSkontobedingung2 As Global.System.Data.DataColumn
        
        Private columnSkontoprozent1 As Global.System.Data.DataColumn
        
        Private columnSkontoprozent2 As Global.System.Data.DataColumn
        
        Private columnKKGesellschaft As Global.System.Data.DataColumn
        
        Private columnKKNummer As Global.System.Data.DataColumn
        
        Private columnKKGueltigkeit As Global.System.Data.DataColumn
        
        Private columnKKInhaber As Global.System.Data.DataColumn
        
        Private columnKKGenehmigung As Global.System.Data.DataColumn
        
        Private columnMahnstufe As Global.System.Data.DataColumn
        
        Private columnVertreter As Global.System.Data.DataColumn
        
        Private columnProvision As Global.System.Data.DataColumn
        
        Private columnBetrag As Global.System.Data.DataColumn
        
        Private columnSkonto As Global.System.Data.DataColumn
        
        Private columnAuszifferung As Global.System.Data.DataColumn
        
        Private columnMemo As Global.System.Data.DataColumn
        
        Private columnReferenz As Global.System.Data.DataColumn
        
        Private columnIstAnzahlung As Global.System.Data.DataColumn
        
        Private columnSteuercode As Global.System.Data.DataColumn
        
        Private columnZession As Global.System.Data.DataColumn
        
        Private columnZessionDatum As Global.System.Data.DataColumn
        
        Private columnZessionar As Global.System.Data.DataColumn
        
        Private columnTimestamp As Global.System.Data.DataColumn
        
        Private columnAzv As Global.System.Data.DataColumn
        
        Private columnVStVerguetung As Global.System.Data.DataColumn
        
        Private columnMandatsNummer As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KHKBuchungserfassungOp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OpNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MandantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMandant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OpDatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FaelligkeitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFaelligkeit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SkontoFaelligkeit1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontoFaelligkeit1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SkontoFaelligkeit2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontoFaelligkeit2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZahlungskondColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZahlungskond
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InkassoartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInkassoart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NettobedingungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNettobedingung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Skontobedingung1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontobedingung1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Skontobedingung2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontobedingung2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Skontoprozent1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontoprozent1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Skontoprozent2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkontoprozent2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KKGesellschaftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKKGesellschaft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KKNummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKKNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KKGueltigkeitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKKGueltigkeit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KKInhaberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKKInhaber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KKGenehmigungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKKGenehmigung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MahnstufeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMahnstufe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VertreterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVertreter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProvisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AuszifferungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuszifferung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReferenzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IstAnzahlungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIstAnzahlung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuercodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuercode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZessionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZession
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZessionDatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZessionDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZessionarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZessionar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AzvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAzv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VStVerguetungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVStVerguetung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MandatsNummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMandatsNummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KHKBuchungserfassungOpRow
            Get
                Return CType(Me.Rows(index),KHKBuchungserfassungOpRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungOpRowChanging As KHKBuchungserfassungOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungOpRowChanged As KHKBuchungserfassungOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungOpRowDeleting As KHKBuchungserfassungOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungserfassungOpRowDeleted As KHKBuchungserfassungOpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddKHKBuchungserfassungOpRow(ByVal row As KHKBuchungserfassungOpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddKHKBuchungserfassungOpRow( _
                    ByVal Tan As Integer,  _
                    ByVal OpNr As String,  _
                    ByVal Mandant As Short,  _
                    ByVal OpDatum As Date,  _
                    ByVal Faelligkeit As Date,  _
                    ByVal SkontoFaelligkeit1 As Date,  _
                    ByVal SkontoFaelligkeit2 As Date,  _
                    ByVal Zahlungskond As String,  _
                    ByVal Inkassoart As String,  _
                    ByVal Nettobedingung As String,  _
                    ByVal Skontobedingung1 As String,  _
                    ByVal Skontobedingung2 As String,  _
                    ByVal Skontoprozent1 As Decimal,  _
                    ByVal Skontoprozent2 As Decimal,  _
                    ByVal KKGesellschaft As String,  _
                    ByVal KKNummer As String,  _
                    ByVal KKGueltigkeit As Short,  _
                    ByVal KKInhaber As String,  _
                    ByVal KKGenehmigung As String,  _
                    ByVal Mahnstufe As Short,  _
                    ByVal Vertreter As String,  _
                    ByVal Provision As Decimal,  _
                    ByVal Betrag As Decimal,  _
                    ByVal Skonto As Decimal,  _
                    ByVal Auszifferung As String,  _
                    ByVal Memo As String,  _
                    ByVal Referenz As String,  _
                    ByVal IstAnzahlung As Short,  _
                    ByVal Steuercode As Short,  _
                    ByVal Zession As Short,  _
                    ByVal ZessionDatum As Date,  _
                    ByVal Zessionar As String,  _
                    ByVal Timestamp() As Byte,  _
                    ByVal Azv As String,  _
                    ByVal VStVerguetung As String,  _
                    ByVal MandatsNummer As String) As KHKBuchungserfassungOpRow
            Dim rowKHKBuchungserfassungOpRow As KHKBuchungserfassungOpRow = CType(Me.NewRow,KHKBuchungserfassungOpRow)
            Dim columnValuesArray() As Object = New Object() {Tan, OpNr, Mandant, OpDatum, Faelligkeit, SkontoFaelligkeit1, SkontoFaelligkeit2, Zahlungskond, Inkassoart, Nettobedingung, Skontobedingung1, Skontobedingung2, Skontoprozent1, Skontoprozent2, KKGesellschaft, KKNummer, KKGueltigkeit, KKInhaber, KKGenehmigung, Mahnstufe, Vertreter, Provision, Betrag, Skonto, Auszifferung, Memo, Referenz, IstAnzahlung, Steuercode, Zession, ZessionDatum, Zessionar, Timestamp, Azv, VStVerguetung, MandatsNummer}
            rowKHKBuchungserfassungOpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKHKBuchungserfassungOpRow)
            Return rowKHKBuchungserfassungOpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByTanOpNrMandant(ByVal Tan As Integer, ByVal OpNr As String, ByVal Mandant As Short) As KHKBuchungserfassungOpRow
            Return CType(Me.Rows.Find(New Object() {Tan, OpNr, Mandant}),KHKBuchungserfassungOpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KHKBuchungserfassungOpDataTable = CType(MyBase.Clone,KHKBuchungserfassungOpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KHKBuchungserfassungOpDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTan = MyBase.Columns("Tan")
            Me.columnOpNr = MyBase.Columns("OpNr")
            Me.columnMandant = MyBase.Columns("Mandant")
            Me.columnOpDatum = MyBase.Columns("OpDatum")
            Me.columnFaelligkeit = MyBase.Columns("Faelligkeit")
            Me.columnSkontoFaelligkeit1 = MyBase.Columns("SkontoFaelligkeit1")
            Me.columnSkontoFaelligkeit2 = MyBase.Columns("SkontoFaelligkeit2")
            Me.columnZahlungskond = MyBase.Columns("Zahlungskond")
            Me.columnInkassoart = MyBase.Columns("Inkassoart")
            Me.columnNettobedingung = MyBase.Columns("Nettobedingung")
            Me.columnSkontobedingung1 = MyBase.Columns("Skontobedingung1")
            Me.columnSkontobedingung2 = MyBase.Columns("Skontobedingung2")
            Me.columnSkontoprozent1 = MyBase.Columns("Skontoprozent1")
            Me.columnSkontoprozent2 = MyBase.Columns("Skontoprozent2")
            Me.columnKKGesellschaft = MyBase.Columns("KKGesellschaft")
            Me.columnKKNummer = MyBase.Columns("KKNummer")
            Me.columnKKGueltigkeit = MyBase.Columns("KKGueltigkeit")
            Me.columnKKInhaber = MyBase.Columns("KKInhaber")
            Me.columnKKGenehmigung = MyBase.Columns("KKGenehmigung")
            Me.columnMahnstufe = MyBase.Columns("Mahnstufe")
            Me.columnVertreter = MyBase.Columns("Vertreter")
            Me.columnProvision = MyBase.Columns("Provision")
            Me.columnBetrag = MyBase.Columns("Betrag")
            Me.columnSkonto = MyBase.Columns("Skonto")
            Me.columnAuszifferung = MyBase.Columns("Auszifferung")
            Me.columnMemo = MyBase.Columns("Memo")
            Me.columnReferenz = MyBase.Columns("Referenz")
            Me.columnIstAnzahlung = MyBase.Columns("IstAnzahlung")
            Me.columnSteuercode = MyBase.Columns("Steuercode")
            Me.columnZession = MyBase.Columns("Zession")
            Me.columnZessionDatum = MyBase.Columns("ZessionDatum")
            Me.columnZessionar = MyBase.Columns("Zessionar")
            Me.columnTimestamp = MyBase.Columns("Timestamp")
            Me.columnAzv = MyBase.Columns("Azv")
            Me.columnVStVerguetung = MyBase.Columns("VStVerguetung")
            Me.columnMandatsNummer = MyBase.Columns("MandatsNummer")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTan = New Global.System.Data.DataColumn("Tan", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTan)
            Me.columnOpNr = New Global.System.Data.DataColumn("OpNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpNr)
            Me.columnMandant = New Global.System.Data.DataColumn("Mandant", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMandant)
            Me.columnOpDatum = New Global.System.Data.DataColumn("OpDatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpDatum)
            Me.columnFaelligkeit = New Global.System.Data.DataColumn("Faelligkeit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFaelligkeit)
            Me.columnSkontoFaelligkeit1 = New Global.System.Data.DataColumn("SkontoFaelligkeit1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontoFaelligkeit1)
            Me.columnSkontoFaelligkeit2 = New Global.System.Data.DataColumn("SkontoFaelligkeit2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontoFaelligkeit2)
            Me.columnZahlungskond = New Global.System.Data.DataColumn("Zahlungskond", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZahlungskond)
            Me.columnInkassoart = New Global.System.Data.DataColumn("Inkassoart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInkassoart)
            Me.columnNettobedingung = New Global.System.Data.DataColumn("Nettobedingung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNettobedingung)
            Me.columnSkontobedingung1 = New Global.System.Data.DataColumn("Skontobedingung1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontobedingung1)
            Me.columnSkontobedingung2 = New Global.System.Data.DataColumn("Skontobedingung2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontobedingung2)
            Me.columnSkontoprozent1 = New Global.System.Data.DataColumn("Skontoprozent1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontoprozent1)
            Me.columnSkontoprozent2 = New Global.System.Data.DataColumn("Skontoprozent2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkontoprozent2)
            Me.columnKKGesellschaft = New Global.System.Data.DataColumn("KKGesellschaft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKKGesellschaft)
            Me.columnKKNummer = New Global.System.Data.DataColumn("KKNummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKKNummer)
            Me.columnKKGueltigkeit = New Global.System.Data.DataColumn("KKGueltigkeit", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKKGueltigkeit)
            Me.columnKKInhaber = New Global.System.Data.DataColumn("KKInhaber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKKInhaber)
            Me.columnKKGenehmigung = New Global.System.Data.DataColumn("KKGenehmigung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKKGenehmigung)
            Me.columnMahnstufe = New Global.System.Data.DataColumn("Mahnstufe", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMahnstufe)
            Me.columnVertreter = New Global.System.Data.DataColumn("Vertreter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVertreter)
            Me.columnProvision = New Global.System.Data.DataColumn("Provision", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvision)
            Me.columnBetrag = New Global.System.Data.DataColumn("Betrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetrag)
            Me.columnSkonto = New Global.System.Data.DataColumn("Skonto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkonto)
            Me.columnAuszifferung = New Global.System.Data.DataColumn("Auszifferung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuszifferung)
            Me.columnMemo = New Global.System.Data.DataColumn("Memo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemo)
            Me.columnReferenz = New Global.System.Data.DataColumn("Referenz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenz)
            Me.columnIstAnzahlung = New Global.System.Data.DataColumn("IstAnzahlung", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIstAnzahlung)
            Me.columnSteuercode = New Global.System.Data.DataColumn("Steuercode", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuercode)
            Me.columnZession = New Global.System.Data.DataColumn("Zession", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZession)
            Me.columnZessionDatum = New Global.System.Data.DataColumn("ZessionDatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZessionDatum)
            Me.columnZessionar = New Global.System.Data.DataColumn("Zessionar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZessionar)
            Me.columnTimestamp = New Global.System.Data.DataColumn("Timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimestamp)
            Me.columnAzv = New Global.System.Data.DataColumn("Azv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAzv)
            Me.columnVStVerguetung = New Global.System.Data.DataColumn("VStVerguetung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVStVerguetung)
            Me.columnMandatsNummer = New Global.System.Data.DataColumn("MandatsNummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMandatsNummer)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTan, Me.columnOpNr, Me.columnMandant}, true))
            Me.columnTan.AllowDBNull = false
            Me.columnOpNr.AllowDBNull = false
            Me.columnOpNr.MaxLength = 20
            Me.columnMandant.AllowDBNull = false
            Me.columnZahlungskond.MaxLength = 10
            Me.columnInkassoart.MaxLength = 10
            Me.columnNettobedingung.MaxLength = 255
            Me.columnSkontobedingung1.MaxLength = 255
            Me.columnSkontobedingung2.MaxLength = 255
            Me.columnKKGesellschaft.MaxLength = 50
            Me.columnKKNummer.MaxLength = 20
            Me.columnKKInhaber.MaxLength = 50
            Me.columnKKGenehmigung.MaxLength = 20
            Me.columnVertreter.MaxLength = 10
            Me.columnAuszifferung.MaxLength = 125
            Me.columnMemo.MaxLength = 2147483647
            Me.columnReferenz.MaxLength = 27
            Me.columnIstAnzahlung.AllowDBNull = false
            Me.columnZession.AllowDBNull = false
            Me.columnZessionar.MaxLength = 50
            Me.columnTimestamp.ReadOnly = true
            Me.columnAzv.MaxLength = 1400
            Me.columnVStVerguetung.MaxLength = 1700
            Me.columnMandatsNummer.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewKHKBuchungserfassungOpRow() As KHKBuchungserfassungOpRow
            Return CType(Me.NewRow,KHKBuchungserfassungOpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KHKBuchungserfassungOpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KHKBuchungserfassungOpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KHKBuchungserfassungOpRowChangedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungOpRowChanged(Me, New KHKBuchungserfassungOpRowChangeEvent(CType(e.Row,KHKBuchungserfassungOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KHKBuchungserfassungOpRowChangingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungOpRowChanging(Me, New KHKBuchungserfassungOpRowChangeEvent(CType(e.Row,KHKBuchungserfassungOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KHKBuchungserfassungOpRowDeletedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungOpRowDeleted(Me, New KHKBuchungserfassungOpRowChangeEvent(CType(e.Row,KHKBuchungserfassungOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KHKBuchungserfassungOpRowDeletingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungserfassungOpRowDeleting(Me, New KHKBuchungserfassungOpRowChangeEvent(CType(e.Row,KHKBuchungserfassungOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveKHKBuchungserfassungOpRow(ByVal row As KHKBuchungserfassungOpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsHPCReweSKR04 = New dsHPCReweSKR04()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KHKBuchungserfassungOpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KHKBuchungByOpDataTable
        Inherits Global.System.Data.TypedTableBase(Of KHKBuchungByOpRow)
        
        Private columnTan As Global.System.Data.DataColumn
        
        Private columnMandant As Global.System.Data.DataColumn
        
        Private columnJournal As Global.System.Data.DataColumn
        
        Private columnPeriode As Global.System.Data.DataColumn
        
        Private columnBuchungsdatum As Global.System.Data.DataColumn
        
        Private columnKtoSoll As Global.System.Data.DataColumn
        
        Private columnKtoSollTyp As Global.System.Data.DataColumn
        
        Private columnKtoSollSammelkto As Global.System.Data.DataColumn
        
        Private columnKtoHaben As Global.System.Data.DataColumn
        
        Private columnKtoHabentyp As Global.System.Data.DataColumn
        
        Private columnKtoHabenSammelkto As Global.System.Data.DataColumn
        
        Private columnAnlagenbuchung As Global.System.Data.DataColumn
        
        Private columnBelegdatum As Global.System.Data.DataColumn
        
        Private columnBelegnummer As Global.System.Data.DataColumn
        
        Private columnBuchungstext As Global.System.Data.DataColumn
        
        Private columnBuchungsmemo As Global.System.Data.DataColumn
        
        Private columnBuchungsbetrag As Global.System.Data.DataColumn
        
        Private columnOpNr As Global.System.Data.DataColumn
        
        Private columnOpDatum As Global.System.Data.DataColumn
        
        Private columnFaelligkeit As Global.System.Data.DataColumn
        
        Private columnZahlungskond As Global.System.Data.DataColumn
        
        Private columnMahnstufe As Global.System.Data.DataColumn
        
        Private columnBetrag As Global.System.Data.DataColumn
        
        Private columnSteuercode As Global.System.Data.DataColumn
        
        Private columnSkonto As Global.System.Data.DataColumn
        
        Private columnMemo As Global.System.Data.DataColumn
        
        Private columnBuchungswaehrung As Global.System.Data.DataColumn
        
        Private columnEigenwaehrungsbetrag As Global.System.Data.DataColumn
        
        Private columnSitzung As Global.System.Data.DataColumn
        
        Private columnBenutzer As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnSteuerart As Global.System.Data.DataColumn
        
        Private columnSteuerberechnung As Global.System.Data.DataColumn
        
        Private columnSteuersatz As Global.System.Data.DataColumn
        
        Private columnSteuerbetrag As Global.System.Data.DataColumn
        
        Private columnBuchungsschluessel As Global.System.Data.DataColumn
        
        Private columnAdresse As Global.System.Data.DataColumn
        
        Private columnPeriodik As Global.System.Data.DataColumn
        
        Private columnTimestamp As Global.System.Data.DataColumn
        
        Private columnBelegart As Global.System.Data.DataColumn
        
        Private columnGSMemo As Global.System.Data.DataColumn
        
        Private columnJournalAlt As Global.System.Data.DataColumn
        
        Private columnEULand As Global.System.Data.DataColumn
        
        Private columnEUUStID As Global.System.Data.DataColumn
        
        Private columnEUDreiecksgeschaeft As Global.System.Data.DataColumn
        
        Private columnAenderungsdatum As Global.System.Data.DataColumn
        
        Private columnGSSchluessel As Global.System.Data.DataColumn
        
        Private columnAbschluss As Global.System.Data.DataColumn
        
        Private columnSMKontoart As Global.System.Data.DataColumn
        
        Private columnSteuernummer As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KHKBuchungByOp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MandantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMandant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property JournalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJournal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSoll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollTypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSollTyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoSollSammelktoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoSollSammelkto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHaben
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabentypColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHabentyp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KtoHabenSammelktoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKtoHabenSammelkto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AnlagenbuchungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnlagenbuchung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungstextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungstext
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsmemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsmemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OpNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OpDatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOpDatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FaelligkeitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFaelligkeit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZahlungskondColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZahlungskond
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MahnstufeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMahnstufe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuercodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuercode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SkontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungswaehrungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungswaehrung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EigenwaehrungsbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEigenwaehrungsbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SitzungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSitzung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BenutzerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBenutzer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerberechnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerberechnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuersatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuersatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuerbetragColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuerbetrag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuchungsschluesselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuchungsschluessel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AdresseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdresse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodikColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodik
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BelegartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBelegart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GSMemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSMemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property JournalAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJournalAlt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EULandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEULand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EUUStIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEUUStID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EUDreiecksgeschaeftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEUDreiecksgeschaeft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AenderungsdatumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAenderungsdatum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GSSchluesselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSSchluessel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AbschlussColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbschluss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SMKontoartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSMKontoart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SteuernummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSteuernummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KHKBuchungByOpRow
            Get
                Return CType(Me.Rows(index),KHKBuchungByOpRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungByOpRowChanging As KHKBuchungByOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungByOpRowChanged As KHKBuchungByOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungByOpRowDeleting As KHKBuchungByOpRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event KHKBuchungByOpRowDeleted As KHKBuchungByOpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddKHKBuchungByOpRow(ByVal row As KHKBuchungByOpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddKHKBuchungByOpRow( _
                    ByVal Tan As Integer,  _
                    ByVal Mandant As Short,  _
                    ByVal Journal As Short,  _
                    ByVal Periode As Integer,  _
                    ByVal Buchungsdatum As Date,  _
                    ByVal KtoSoll As String,  _
                    ByVal KtoSollTyp As Short,  _
                    ByVal KtoSollSammelkto As Short,  _
                    ByVal KtoHaben As String,  _
                    ByVal KtoHabentyp As Short,  _
                    ByVal KtoHabenSammelkto As Short,  _
                    ByVal Anlagenbuchung As Short,  _
                    ByVal Belegdatum As Date,  _
                    ByVal Belegnummer As String,  _
                    ByVal Buchungstext As String,  _
                    ByVal Buchungsmemo As String,  _
                    ByVal Buchungsbetrag As Decimal,  _
                    ByVal OpNr As String,  _
                    ByVal OpDatum As Date,  _
                    ByVal Faelligkeit As Date,  _
                    ByVal Zahlungskond As String,  _
                    ByVal Mahnstufe As Short,  _
                    ByVal Betrag As Decimal,  _
                    ByVal Steuercode As Short,  _
                    ByVal Skonto As Decimal,  _
                    ByVal Memo As String,  _
                    ByVal Buchungswaehrung As String,  _
                    ByVal Eigenwaehrungsbetrag As Decimal,  _
                    ByVal Sitzung As Integer,  _
                    ByVal Benutzer As String,  _
                    ByVal Status As Short,  _
                    ByVal Steuerart As String,  _
                    ByVal Steuerberechnung As Short,  _
                    ByVal Steuersatz As Decimal,  _
                    ByVal Steuerbetrag As Decimal,  _
                    ByVal Buchungsschluessel As Integer,  _
                    ByVal Adresse As Integer,  _
                    ByVal Periodik As Integer,  _
                    ByVal Timestamp() As Byte,  _
                    ByVal Belegart As String,  _
                    ByVal GSMemo As String,  _
                    ByVal JournalAlt As Short,  _
                    ByVal EULand As String,  _
                    ByVal EUUStID As String,  _
                    ByVal EUDreiecksgeschaeft As Short,  _
                    ByVal Aenderungsdatum As Date,  _
                    ByVal GSSchluessel As Integer,  _
                    ByVal Abschluss As Integer,  _
                    ByVal SMKontoart As String,  _
                    ByVal Steuernummer As String) As KHKBuchungByOpRow
            Dim rowKHKBuchungByOpRow As KHKBuchungByOpRow = CType(Me.NewRow,KHKBuchungByOpRow)
            Dim columnValuesArray() As Object = New Object() {Tan, Mandant, Journal, Periode, Buchungsdatum, KtoSoll, KtoSollTyp, KtoSollSammelkto, KtoHaben, KtoHabentyp, KtoHabenSammelkto, Anlagenbuchung, Belegdatum, Belegnummer, Buchungstext, Buchungsmemo, Buchungsbetrag, OpNr, OpDatum, Faelligkeit, Zahlungskond, Mahnstufe, Betrag, Steuercode, Skonto, Memo, Buchungswaehrung, Eigenwaehrungsbetrag, Sitzung, Benutzer, Status, Steuerart, Steuerberechnung, Steuersatz, Steuerbetrag, Buchungsschluessel, Adresse, Periodik, Timestamp, Belegart, GSMemo, JournalAlt, EULand, EUUStID, EUDreiecksgeschaeft, Aenderungsdatum, GSSchluessel, Abschluss, SMKontoart, Steuernummer}
            rowKHKBuchungByOpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKHKBuchungByOpRow)
            Return rowKHKBuchungByOpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KHKBuchungByOpDataTable = CType(MyBase.Clone,KHKBuchungByOpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KHKBuchungByOpDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTan = MyBase.Columns("Tan")
            Me.columnMandant = MyBase.Columns("Mandant")
            Me.columnJournal = MyBase.Columns("Journal")
            Me.columnPeriode = MyBase.Columns("Periode")
            Me.columnBuchungsdatum = MyBase.Columns("Buchungsdatum")
            Me.columnKtoSoll = MyBase.Columns("KtoSoll")
            Me.columnKtoSollTyp = MyBase.Columns("KtoSollTyp")
            Me.columnKtoSollSammelkto = MyBase.Columns("KtoSollSammelkto")
            Me.columnKtoHaben = MyBase.Columns("KtoHaben")
            Me.columnKtoHabentyp = MyBase.Columns("KtoHabentyp")
            Me.columnKtoHabenSammelkto = MyBase.Columns("KtoHabenSammelkto")
            Me.columnAnlagenbuchung = MyBase.Columns("Anlagenbuchung")
            Me.columnBelegdatum = MyBase.Columns("Belegdatum")
            Me.columnBelegnummer = MyBase.Columns("Belegnummer")
            Me.columnBuchungstext = MyBase.Columns("Buchungstext")
            Me.columnBuchungsmemo = MyBase.Columns("Buchungsmemo")
            Me.columnBuchungsbetrag = MyBase.Columns("Buchungsbetrag")
            Me.columnOpNr = MyBase.Columns("OpNr")
            Me.columnOpDatum = MyBase.Columns("OpDatum")
            Me.columnFaelligkeit = MyBase.Columns("Faelligkeit")
            Me.columnZahlungskond = MyBase.Columns("Zahlungskond")
            Me.columnMahnstufe = MyBase.Columns("Mahnstufe")
            Me.columnBetrag = MyBase.Columns("Betrag")
            Me.columnSteuercode = MyBase.Columns("Steuercode")
            Me.columnSkonto = MyBase.Columns("Skonto")
            Me.columnMemo = MyBase.Columns("Memo")
            Me.columnBuchungswaehrung = MyBase.Columns("Buchungswaehrung")
            Me.columnEigenwaehrungsbetrag = MyBase.Columns("Eigenwaehrungsbetrag")
            Me.columnSitzung = MyBase.Columns("Sitzung")
            Me.columnBenutzer = MyBase.Columns("Benutzer")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnSteuerart = MyBase.Columns("Steuerart")
            Me.columnSteuerberechnung = MyBase.Columns("Steuerberechnung")
            Me.columnSteuersatz = MyBase.Columns("Steuersatz")
            Me.columnSteuerbetrag = MyBase.Columns("Steuerbetrag")
            Me.columnBuchungsschluessel = MyBase.Columns("Buchungsschluessel")
            Me.columnAdresse = MyBase.Columns("Adresse")
            Me.columnPeriodik = MyBase.Columns("Periodik")
            Me.columnTimestamp = MyBase.Columns("Timestamp")
            Me.columnBelegart = MyBase.Columns("Belegart")
            Me.columnGSMemo = MyBase.Columns("GSMemo")
            Me.columnJournalAlt = MyBase.Columns("JournalAlt")
            Me.columnEULand = MyBase.Columns("EULand")
            Me.columnEUUStID = MyBase.Columns("EUUStID")
            Me.columnEUDreiecksgeschaeft = MyBase.Columns("EUDreiecksgeschaeft")
            Me.columnAenderungsdatum = MyBase.Columns("Aenderungsdatum")
            Me.columnGSSchluessel = MyBase.Columns("GSSchluessel")
            Me.columnAbschluss = MyBase.Columns("Abschluss")
            Me.columnSMKontoart = MyBase.Columns("SMKontoart")
            Me.columnSteuernummer = MyBase.Columns("Steuernummer")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTan = New Global.System.Data.DataColumn("Tan", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTan)
            Me.columnMandant = New Global.System.Data.DataColumn("Mandant", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMandant)
            Me.columnJournal = New Global.System.Data.DataColumn("Journal", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJournal)
            Me.columnPeriode = New Global.System.Data.DataColumn("Periode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriode)
            Me.columnBuchungsdatum = New Global.System.Data.DataColumn("Buchungsdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsdatum)
            Me.columnKtoSoll = New Global.System.Data.DataColumn("KtoSoll", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSoll)
            Me.columnKtoSollTyp = New Global.System.Data.DataColumn("KtoSollTyp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSollTyp)
            Me.columnKtoSollSammelkto = New Global.System.Data.DataColumn("KtoSollSammelkto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoSollSammelkto)
            Me.columnKtoHaben = New Global.System.Data.DataColumn("KtoHaben", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHaben)
            Me.columnKtoHabentyp = New Global.System.Data.DataColumn("KtoHabentyp", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHabentyp)
            Me.columnKtoHabenSammelkto = New Global.System.Data.DataColumn("KtoHabenSammelkto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKtoHabenSammelkto)
            Me.columnAnlagenbuchung = New Global.System.Data.DataColumn("Anlagenbuchung", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnlagenbuchung)
            Me.columnBelegdatum = New Global.System.Data.DataColumn("Belegdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegdatum)
            Me.columnBelegnummer = New Global.System.Data.DataColumn("Belegnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegnummer)
            Me.columnBuchungstext = New Global.System.Data.DataColumn("Buchungstext", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungstext)
            Me.columnBuchungsmemo = New Global.System.Data.DataColumn("Buchungsmemo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsmemo)
            Me.columnBuchungsbetrag = New Global.System.Data.DataColumn("Buchungsbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsbetrag)
            Me.columnOpNr = New Global.System.Data.DataColumn("OpNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpNr)
            Me.columnOpDatum = New Global.System.Data.DataColumn("OpDatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOpDatum)
            Me.columnFaelligkeit = New Global.System.Data.DataColumn("Faelligkeit", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFaelligkeit)
            Me.columnZahlungskond = New Global.System.Data.DataColumn("Zahlungskond", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZahlungskond)
            Me.columnMahnstufe = New Global.System.Data.DataColumn("Mahnstufe", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMahnstufe)
            Me.columnBetrag = New Global.System.Data.DataColumn("Betrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBetrag)
            Me.columnSteuercode = New Global.System.Data.DataColumn("Steuercode", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuercode)
            Me.columnSkonto = New Global.System.Data.DataColumn("Skonto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkonto)
            Me.columnMemo = New Global.System.Data.DataColumn("Memo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemo)
            Me.columnBuchungswaehrung = New Global.System.Data.DataColumn("Buchungswaehrung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungswaehrung)
            Me.columnEigenwaehrungsbetrag = New Global.System.Data.DataColumn("Eigenwaehrungsbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEigenwaehrungsbetrag)
            Me.columnSitzung = New Global.System.Data.DataColumn("Sitzung", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSitzung)
            Me.columnBenutzer = New Global.System.Data.DataColumn("Benutzer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBenutzer)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnSteuerart = New Global.System.Data.DataColumn("Steuerart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerart)
            Me.columnSteuerberechnung = New Global.System.Data.DataColumn("Steuerberechnung", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerberechnung)
            Me.columnSteuersatz = New Global.System.Data.DataColumn("Steuersatz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuersatz)
            Me.columnSteuerbetrag = New Global.System.Data.DataColumn("Steuerbetrag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuerbetrag)
            Me.columnBuchungsschluessel = New Global.System.Data.DataColumn("Buchungsschluessel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuchungsschluessel)
            Me.columnAdresse = New Global.System.Data.DataColumn("Adresse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdresse)
            Me.columnPeriodik = New Global.System.Data.DataColumn("Periodik", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodik)
            Me.columnTimestamp = New Global.System.Data.DataColumn("Timestamp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimestamp)
            Me.columnBelegart = New Global.System.Data.DataColumn("Belegart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBelegart)
            Me.columnGSMemo = New Global.System.Data.DataColumn("GSMemo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSMemo)
            Me.columnJournalAlt = New Global.System.Data.DataColumn("JournalAlt", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJournalAlt)
            Me.columnEULand = New Global.System.Data.DataColumn("EULand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEULand)
            Me.columnEUUStID = New Global.System.Data.DataColumn("EUUStID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEUUStID)
            Me.columnEUDreiecksgeschaeft = New Global.System.Data.DataColumn("EUDreiecksgeschaeft", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEUDreiecksgeschaeft)
            Me.columnAenderungsdatum = New Global.System.Data.DataColumn("Aenderungsdatum", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAenderungsdatum)
            Me.columnGSSchluessel = New Global.System.Data.DataColumn("GSSchluessel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSSchluessel)
            Me.columnAbschluss = New Global.System.Data.DataColumn("Abschluss", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbschluss)
            Me.columnSMKontoart = New Global.System.Data.DataColumn("SMKontoart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSMKontoart)
            Me.columnSteuernummer = New Global.System.Data.DataColumn("Steuernummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSteuernummer)
            Me.columnTan.AllowDBNull = false
            Me.columnMandant.AllowDBNull = false
            Me.columnKtoSoll.MaxLength = 20
            Me.columnKtoHaben.MaxLength = 20
            Me.columnBelegnummer.MaxLength = 20
            Me.columnBuchungstext.MaxLength = 255
            Me.columnBuchungsmemo.MaxLength = 2147483647
            Me.columnOpNr.AllowDBNull = false
            Me.columnOpNr.MaxLength = 20
            Me.columnZahlungskond.MaxLength = 10
            Me.columnMemo.MaxLength = 2147483647
            Me.columnBuchungswaehrung.MaxLength = 3
            Me.columnBenutzer.AllowDBNull = false
            Me.columnBenutzer.MaxLength = 128
            Me.columnSteuerart.MaxLength = 2
            Me.columnTimestamp.ReadOnly = true
            Me.columnBelegart.MaxLength = 20
            Me.columnGSMemo.MaxLength = 2147483647
            Me.columnEULand.MaxLength = 2
            Me.columnEUUStID.MaxLength = 15
            Me.columnEUDreiecksgeschaeft.AllowDBNull = false
            Me.columnSMKontoart.MaxLength = 2
            Me.columnSteuernummer.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewKHKBuchungByOpRow() As KHKBuchungByOpRow
            Return CType(Me.NewRow,KHKBuchungByOpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KHKBuchungByOpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KHKBuchungByOpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KHKBuchungByOpRowChangedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungByOpRowChanged(Me, New KHKBuchungByOpRowChangeEvent(CType(e.Row,KHKBuchungByOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KHKBuchungByOpRowChangingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungByOpRowChanging(Me, New KHKBuchungByOpRowChangeEvent(CType(e.Row,KHKBuchungByOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KHKBuchungByOpRowDeletedEvent) Is Nothing) Then
                RaiseEvent KHKBuchungByOpRowDeleted(Me, New KHKBuchungByOpRowChangeEvent(CType(e.Row,KHKBuchungByOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KHKBuchungByOpRowDeletingEvent) Is Nothing) Then
                RaiseEvent KHKBuchungByOpRowDeleting(Me, New KHKBuchungByOpRowChangeEvent(CType(e.Row,KHKBuchungByOpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveKHKBuchungByOpRow(ByVal row As KHKBuchungByOpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsHPCReweSKR04 = New dsHPCReweSKR04()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KHKBuchungByOpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KHKBuchungserfassungRow
        Inherits Global.System.Data.DataRow
        
        Private tableKHKBuchungserfassung As KHKBuchungserfassungDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKHKBuchungserfassung = CType(Me.Table,KHKBuchungserfassungDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Tan() As Integer
            Get
                Return CType(Me(Me.tableKHKBuchungserfassung.TanColumn),Integer)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.TanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mandant() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungserfassung.MandantColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.MandantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sitzung() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SitzungColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Sitzung in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SitzungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Benutzer() As String
            Get
                Return CType(Me(Me.tableKHKBuchungserfassung.BenutzerColumn),String)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BenutzerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.StatusColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Status in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Journal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.JournalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Journal in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.JournalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Periode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.PeriodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Periode in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.PeriodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungsdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsdatum in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungsdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSoll() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoSollColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSoll in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoSollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSollTyp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoSollTypColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSollTyp in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoSollTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSollSammelkto() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoSollSammelktoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSollSammelkto in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoSollSammelktoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHaben() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoHabenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHaben in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoHabenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHabentyp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoHabentypColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHabentyp in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoHabentypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHabenSammelkto() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.KtoHabenSammelktoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHabenSammelkto in Tabelle KHKBuchungserfassung ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.KtoHabenSammelktoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Anlagenbuchung() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.AnlagenbuchungColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Anlagenbuchung in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.AnlagenbuchungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BelegdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegdatum in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BelegdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegnummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BelegnummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegnummer in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BelegnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungstext() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungstextColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungstext in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungstextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsmemo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungsmemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsmemo in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungsmemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungsbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsbetrag in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungsbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungswaehrung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungswaehrungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungswaehrung in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungswaehrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Eigenwaehrungsbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.EigenwaehrungsbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Eigenwaehrungsbetrag in Tabelle KHKBuchungserfassung ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.EigenwaehrungsbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuerartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerart in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuerartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuercode() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuercodeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuercode in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuercodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerberechnung() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuerberechnungColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerberechnung in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuerberechnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuersatz() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuersatzColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuersatz in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuersatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuerbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerbetrag in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuerbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsschluessel() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BuchungsschluesselColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsschluessel in Tabelle KHKBuchungserfassung ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BuchungsschluesselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Adresse() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.AdresseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Adresse in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.AdresseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Periodik() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.PeriodikColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Periodik in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.PeriodikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.TimestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Timestamp in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.TimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.BelegartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegart in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.BelegartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSMemo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.GSMemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GSMemo in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.GSMemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property JournalAlt() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.JournalAltColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte JournalAlt in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.JournalAltColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EULand() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.EULandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EULand in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.EULandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EUUStID() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.EUUStIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EUUStID in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.EUUStIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EUDreiecksgeschaeft() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungserfassung.EUDreiecksgeschaeftColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.EUDreiecksgeschaeftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Aenderungsdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.AenderungsdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Aenderungsdatum in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.AenderungsdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSSchluessel() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.GSSchluesselColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GSSchluessel in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.GSSchluesselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Abschluss() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.AbschlussColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Abschluss in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.AbschlussColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SMKontoart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SMKontoartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SMKontoart in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SMKontoartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuernummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassung.SteuernummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuernummer in Tabelle KHKBuchungserfassung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassung.SteuernummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSitzungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SitzungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSitzungNull()
            Me(Me.tableKHKBuchungserfassung.SitzungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableKHKBuchungserfassung.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsJournalNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.JournalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetJournalNull()
            Me(Me.tableKHKBuchungserfassung.JournalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.PeriodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodeNull()
            Me(Me.tableKHKBuchungserfassung.PeriodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungsdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsdatumNull()
            Me(Me.tableKHKBuchungserfassung.BuchungsdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoSollColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollNull()
            Me(Me.tableKHKBuchungserfassung.KtoSollColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollTypNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoSollTypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollTypNull()
            Me(Me.tableKHKBuchungserfassung.KtoSollTypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollSammelktoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoSollSammelktoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollSammelktoNull()
            Me(Me.tableKHKBuchungserfassung.KtoSollSammelktoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabenNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoHabenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabenNull()
            Me(Me.tableKHKBuchungserfassung.KtoHabenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabentypNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoHabentypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabentypNull()
            Me(Me.tableKHKBuchungserfassung.KtoHabentypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabenSammelktoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.KtoHabenSammelktoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabenSammelktoNull()
            Me(Me.tableKHKBuchungserfassung.KtoHabenSammelktoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAnlagenbuchungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.AnlagenbuchungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAnlagenbuchungNull()
            Me(Me.tableKHKBuchungserfassung.AnlagenbuchungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BelegdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegdatumNull()
            Me(Me.tableKHKBuchungserfassung.BelegdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegnummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BelegnummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegnummerNull()
            Me(Me.tableKHKBuchungserfassung.BelegnummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungstextNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungstextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungstextNull()
            Me(Me.tableKHKBuchungserfassung.BuchungstextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsmemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungsmemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsmemoNull()
            Me(Me.tableKHKBuchungserfassung.BuchungsmemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungsbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsbetragNull()
            Me(Me.tableKHKBuchungserfassung.BuchungsbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungswaehrungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungswaehrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungswaehrungNull()
            Me(Me.tableKHKBuchungserfassung.BuchungswaehrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEigenwaehrungsbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.EigenwaehrungsbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEigenwaehrungsbetragNull()
            Me(Me.tableKHKBuchungserfassung.EigenwaehrungsbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuerartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerartNull()
            Me(Me.tableKHKBuchungserfassung.SteuerartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuercodeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuercodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuercodeNull()
            Me(Me.tableKHKBuchungserfassung.SteuercodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerberechnungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuerberechnungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerberechnungNull()
            Me(Me.tableKHKBuchungserfassung.SteuerberechnungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuersatzNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuersatzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuersatzNull()
            Me(Me.tableKHKBuchungserfassung.SteuersatzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuerbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerbetragNull()
            Me(Me.tableKHKBuchungserfassung.SteuerbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsschluesselNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BuchungsschluesselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsschluesselNull()
            Me(Me.tableKHKBuchungserfassung.BuchungsschluesselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAdresseNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.AdresseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAdresseNull()
            Me(Me.tableKHKBuchungserfassung.AdresseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodikNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.PeriodikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodikNull()
            Me(Me.tableKHKBuchungserfassung.PeriodikColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTimestampNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.TimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTimestampNull()
            Me(Me.tableKHKBuchungserfassung.TimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.BelegartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegartNull()
            Me(Me.tableKHKBuchungserfassung.BelegartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGSMemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.GSMemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGSMemoNull()
            Me(Me.tableKHKBuchungserfassung.GSMemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsJournalAltNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.JournalAltColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetJournalAltNull()
            Me(Me.tableKHKBuchungserfassung.JournalAltColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEULandNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.EULandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEULandNull()
            Me(Me.tableKHKBuchungserfassung.EULandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEUUStIDNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.EUUStIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEUUStIDNull()
            Me(Me.tableKHKBuchungserfassung.EUUStIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAenderungsdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.AenderungsdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAenderungsdatumNull()
            Me(Me.tableKHKBuchungserfassung.AenderungsdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGSSchluesselNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.GSSchluesselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGSSchluesselNull()
            Me(Me.tableKHKBuchungserfassung.GSSchluesselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAbschlussNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.AbschlussColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAbschlussNull()
            Me(Me.tableKHKBuchungserfassung.AbschlussColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSMKontoartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SMKontoartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSMKontoartNull()
            Me(Me.tableKHKBuchungserfassung.SMKontoartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuernummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassung.SteuernummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuernummerNull()
            Me(Me.tableKHKBuchungserfassung.SteuernummerColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KHKBuchungserfassungOpRow
        Inherits Global.System.Data.DataRow
        
        Private tableKHKBuchungserfassungOp As KHKBuchungserfassungOpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKHKBuchungserfassungOp = CType(Me.Table,KHKBuchungserfassungOpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Tan() As Integer
            Get
                Return CType(Me(Me.tableKHKBuchungserfassungOp.TanColumn),Integer)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.TanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OpNr() As String
            Get
                Return CType(Me(Me.tableKHKBuchungserfassungOp.OpNrColumn),String)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.OpNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mandant() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungserfassungOp.MandantColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.MandantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OpDatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.OpDatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte OpDatum in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.OpDatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Faelligkeit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.FaelligkeitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Faelligkeit in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.FaelligkeitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SkontoFaelligkeit1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SkontoFaelligkeit1 in Tabelle KHKBuchungserfassungOp ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SkontoFaelligkeit2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SkontoFaelligkeit2 in Tabelle KHKBuchungserfassungOp ist DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Zahlungskond() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.ZahlungskondColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zahlungskond in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ZahlungskondColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inkassoart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.InkassoartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Inkassoart in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.InkassoartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Nettobedingung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.NettobedingungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Nettobedingung in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.NettobedingungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skontobedingung1() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.Skontobedingung1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skontobedingung1 in Tabelle KHKBuchungserfassungOp ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.Skontobedingung1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skontobedingung2() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.Skontobedingung2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skontobedingung2 in Tabelle KHKBuchungserfassungOp ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.Skontobedingung2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skontoprozent1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.Skontoprozent1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skontoprozent1 in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.Skontoprozent1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skontoprozent2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.Skontoprozent2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skontoprozent2 in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.Skontoprozent2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KKGesellschaft() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.KKGesellschaftColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KKGesellschaft in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.KKGesellschaftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KKNummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.KKNummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KKNummer in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.KKNummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KKGueltigkeit() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.KKGueltigkeitColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KKGueltigkeit in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.KKGueltigkeitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KKInhaber() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.KKInhaberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KKInhaber in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.KKInhaberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KKGenehmigung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.KKGenehmigungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KKGenehmigung in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.KKGenehmigungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mahnstufe() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.MahnstufeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Mahnstufe in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.MahnstufeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Vertreter() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.VertreterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Vertreter in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.VertreterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Provision() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.ProvisionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Provision in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ProvisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Betrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.BetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Betrag in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.BetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skonto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.SkontoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skonto in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.SkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Auszifferung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.AuszifferungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Auszifferung in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.AuszifferungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Memo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.MemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Memo in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.MemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Referenz() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.ReferenzColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Referenz in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ReferenzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IstAnzahlung() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungserfassungOp.IstAnzahlungColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.IstAnzahlungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuercode() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.SteuercodeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuercode in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.SteuercodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Zession() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungserfassungOp.ZessionColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ZessionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZessionDatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.ZessionDatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ZessionDatum in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ZessionDatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Zessionar() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.ZessionarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zessionar in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.ZessionarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.TimestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Timestamp in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.TimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Azv() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.AzvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Azv in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.AzvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VStVerguetung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.VStVerguetungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte VStVerguetung in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.VStVerguetungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MandatsNummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungserfassungOp.MandatsNummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte MandatsNummer in Tabelle KHKBuchungserfassungOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungserfassungOp.MandatsNummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOpDatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.OpDatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOpDatumNull()
            Me(Me.tableKHKBuchungserfassungOp.OpDatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFaelligkeitNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.FaelligkeitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFaelligkeitNull()
            Me(Me.tableKHKBuchungserfassungOp.FaelligkeitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoFaelligkeit1Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoFaelligkeit1Null()
            Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoFaelligkeit2Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoFaelligkeit2Null()
            Me(Me.tableKHKBuchungserfassungOp.SkontoFaelligkeit2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZahlungskondNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.ZahlungskondColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZahlungskondNull()
            Me(Me.tableKHKBuchungserfassungOp.ZahlungskondColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInkassoartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.InkassoartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInkassoartNull()
            Me(Me.tableKHKBuchungserfassungOp.InkassoartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNettobedingungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.NettobedingungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNettobedingungNull()
            Me(Me.tableKHKBuchungserfassungOp.NettobedingungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontobedingung1Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.Skontobedingung1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontobedingung1Null()
            Me(Me.tableKHKBuchungserfassungOp.Skontobedingung1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontobedingung2Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.Skontobedingung2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontobedingung2Null()
            Me(Me.tableKHKBuchungserfassungOp.Skontobedingung2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoprozent1Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.Skontoprozent1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoprozent1Null()
            Me(Me.tableKHKBuchungserfassungOp.Skontoprozent1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoprozent2Null() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.Skontoprozent2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoprozent2Null()
            Me(Me.tableKHKBuchungserfassungOp.Skontoprozent2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKKGesellschaftNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.KKGesellschaftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKKGesellschaftNull()
            Me(Me.tableKHKBuchungserfassungOp.KKGesellschaftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKKNummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.KKNummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKKNummerNull()
            Me(Me.tableKHKBuchungserfassungOp.KKNummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKKGueltigkeitNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.KKGueltigkeitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKKGueltigkeitNull()
            Me(Me.tableKHKBuchungserfassungOp.KKGueltigkeitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKKInhaberNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.KKInhaberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKKInhaberNull()
            Me(Me.tableKHKBuchungserfassungOp.KKInhaberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKKGenehmigungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.KKGenehmigungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKKGenehmigungNull()
            Me(Me.tableKHKBuchungserfassungOp.KKGenehmigungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMahnstufeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.MahnstufeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMahnstufeNull()
            Me(Me.tableKHKBuchungserfassungOp.MahnstufeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVertreterNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.VertreterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVertreterNull()
            Me(Me.tableKHKBuchungserfassungOp.VertreterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProvisionNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.ProvisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProvisionNull()
            Me(Me.tableKHKBuchungserfassungOp.ProvisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.BetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBetragNull()
            Me(Me.tableKHKBuchungserfassungOp.BetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.SkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoNull()
            Me(Me.tableKHKBuchungserfassungOp.SkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAuszifferungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.AuszifferungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAuszifferungNull()
            Me(Me.tableKHKBuchungserfassungOp.AuszifferungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.MemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMemoNull()
            Me(Me.tableKHKBuchungserfassungOp.MemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReferenzNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.ReferenzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReferenzNull()
            Me(Me.tableKHKBuchungserfassungOp.ReferenzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuercodeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.SteuercodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuercodeNull()
            Me(Me.tableKHKBuchungserfassungOp.SteuercodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZessionDatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.ZessionDatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZessionDatumNull()
            Me(Me.tableKHKBuchungserfassungOp.ZessionDatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZessionarNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.ZessionarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZessionarNull()
            Me(Me.tableKHKBuchungserfassungOp.ZessionarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTimestampNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.TimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTimestampNull()
            Me(Me.tableKHKBuchungserfassungOp.TimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAzvNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.AzvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAzvNull()
            Me(Me.tableKHKBuchungserfassungOp.AzvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVStVerguetungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.VStVerguetungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVStVerguetungNull()
            Me(Me.tableKHKBuchungserfassungOp.VStVerguetungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMandatsNummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungserfassungOp.MandatsNummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMandatsNummerNull()
            Me(Me.tableKHKBuchungserfassungOp.MandatsNummerColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KHKBuchungByOpRow
        Inherits Global.System.Data.DataRow
        
        Private tableKHKBuchungByOp As KHKBuchungByOpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKHKBuchungByOp = CType(Me.Table,KHKBuchungByOpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Tan() As Integer
            Get
                Return CType(Me(Me.tableKHKBuchungByOp.TanColumn),Integer)
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.TanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mandant() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungByOp.MandantColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.MandantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Journal() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.JournalColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Journal in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.JournalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Periode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.PeriodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Periode in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.PeriodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungsdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsdatum in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungsdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSoll() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoSollColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSoll in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoSollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSollTyp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoSollTypColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSollTyp in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoSollTypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoSollSammelkto() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoSollSammelktoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoSollSammelkto in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoSollSammelktoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHaben() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoHabenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHaben in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoHabenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHabentyp() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoHabentypColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHabentyp in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoHabentypColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KtoHabenSammelkto() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.KtoHabenSammelktoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KtoHabenSammelkto in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.KtoHabenSammelktoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Anlagenbuchung() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.AnlagenbuchungColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Anlagenbuchung in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.AnlagenbuchungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BelegdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegdatum in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BelegdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegnummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BelegnummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegnummer in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BelegnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungstext() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungstextColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungstext in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungstextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsmemo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungsmemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsmemo in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungsmemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungsbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsbetrag in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungsbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OpNr() As String
            Get
                Return CType(Me(Me.tableKHKBuchungByOp.OpNrColumn),String)
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.OpNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OpDatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.OpDatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte OpDatum in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.OpDatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Faelligkeit() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.FaelligkeitColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Faelligkeit in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.FaelligkeitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Zahlungskond() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.ZahlungskondColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zahlungskond in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.ZahlungskondColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Mahnstufe() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.MahnstufeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Mahnstufe in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.MahnstufeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Betrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Betrag in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuercode() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuercodeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuercode in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuercodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Skonto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SkontoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Skonto in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SkontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Memo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.MemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Memo in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.MemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungswaehrung() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungswaehrungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungswaehrung in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungswaehrungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Eigenwaehrungsbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.EigenwaehrungsbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Eigenwaehrungsbetrag in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.EigenwaehrungsbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sitzung() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SitzungColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Sitzung in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SitzungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Benutzer() As String
            Get
                Return CType(Me(Me.tableKHKBuchungByOp.BenutzerColumn),String)
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BenutzerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.StatusColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Status in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuerartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerart in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuerartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerberechnung() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuerberechnungColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerberechnung in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuerberechnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuersatz() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuersatzColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuersatz in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuersatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuerbetrag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuerbetragColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuerbetrag in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuerbetragColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Buchungsschluessel() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BuchungsschluesselColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Buchungsschluessel in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BuchungsschluesselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Adresse() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.AdresseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Adresse in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.AdresseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Periodik() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.PeriodikColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Periodik in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.PeriodikColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Timestamp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.TimestampColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Timestamp in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.TimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Belegart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.BelegartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Belegart in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.BelegartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSMemo() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.GSMemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GSMemo in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.GSMemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property JournalAlt() As Short
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.JournalAltColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte JournalAlt in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.JournalAltColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EULand() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.EULandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EULand in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.EULandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EUUStID() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.EUUStIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EUUStID in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.EUUStIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EUDreiecksgeschaeft() As Short
            Get
                Return CType(Me(Me.tableKHKBuchungByOp.EUDreiecksgeschaeftColumn),Short)
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.EUDreiecksgeschaeftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Aenderungsdatum() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.AenderungsdatumColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Aenderungsdatum in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.AenderungsdatumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSSchluessel() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.GSSchluesselColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GSSchluessel in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.GSSchluesselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Abschluss() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.AbschlussColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Abschluss in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.AbschlussColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SMKontoart() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SMKontoartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SMKontoart in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SMKontoartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Steuernummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableKHKBuchungByOp.SteuernummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Steuernummer in Tabelle KHKBuchungByOp ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKHKBuchungByOp.SteuernummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsJournalNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.JournalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetJournalNull()
            Me(Me.tableKHKBuchungByOp.JournalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.PeriodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodeNull()
            Me(Me.tableKHKBuchungByOp.PeriodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungsdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsdatumNull()
            Me(Me.tableKHKBuchungByOp.BuchungsdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoSollColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollNull()
            Me(Me.tableKHKBuchungByOp.KtoSollColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollTypNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoSollTypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollTypNull()
            Me(Me.tableKHKBuchungByOp.KtoSollTypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoSollSammelktoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoSollSammelktoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoSollSammelktoNull()
            Me(Me.tableKHKBuchungByOp.KtoSollSammelktoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabenNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoHabenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabenNull()
            Me(Me.tableKHKBuchungByOp.KtoHabenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabentypNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoHabentypColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabentypNull()
            Me(Me.tableKHKBuchungByOp.KtoHabentypColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKtoHabenSammelktoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.KtoHabenSammelktoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKtoHabenSammelktoNull()
            Me(Me.tableKHKBuchungByOp.KtoHabenSammelktoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAnlagenbuchungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.AnlagenbuchungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAnlagenbuchungNull()
            Me(Me.tableKHKBuchungByOp.AnlagenbuchungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BelegdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegdatumNull()
            Me(Me.tableKHKBuchungByOp.BelegdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegnummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BelegnummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegnummerNull()
            Me(Me.tableKHKBuchungByOp.BelegnummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungstextNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungstextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungstextNull()
            Me(Me.tableKHKBuchungByOp.BuchungstextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsmemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungsmemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsmemoNull()
            Me(Me.tableKHKBuchungByOp.BuchungsmemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungsbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsbetragNull()
            Me(Me.tableKHKBuchungByOp.BuchungsbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOpDatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.OpDatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOpDatumNull()
            Me(Me.tableKHKBuchungByOp.OpDatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFaelligkeitNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.FaelligkeitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFaelligkeitNull()
            Me(Me.tableKHKBuchungByOp.FaelligkeitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZahlungskondNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.ZahlungskondColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZahlungskondNull()
            Me(Me.tableKHKBuchungByOp.ZahlungskondColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMahnstufeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.MahnstufeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMahnstufeNull()
            Me(Me.tableKHKBuchungByOp.MahnstufeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBetragNull()
            Me(Me.tableKHKBuchungByOp.BetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuercodeNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuercodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuercodeNull()
            Me(Me.tableKHKBuchungByOp.SteuercodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSkontoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SkontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSkontoNull()
            Me(Me.tableKHKBuchungByOp.SkontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.MemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMemoNull()
            Me(Me.tableKHKBuchungByOp.MemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungswaehrungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungswaehrungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungswaehrungNull()
            Me(Me.tableKHKBuchungByOp.BuchungswaehrungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEigenwaehrungsbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.EigenwaehrungsbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEigenwaehrungsbetragNull()
            Me(Me.tableKHKBuchungByOp.EigenwaehrungsbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSitzungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SitzungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSitzungNull()
            Me(Me.tableKHKBuchungByOp.SitzungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableKHKBuchungByOp.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuerartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerartNull()
            Me(Me.tableKHKBuchungByOp.SteuerartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerberechnungNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuerberechnungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerberechnungNull()
            Me(Me.tableKHKBuchungByOp.SteuerberechnungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuersatzNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuersatzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuersatzNull()
            Me(Me.tableKHKBuchungByOp.SteuersatzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuerbetragNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuerbetragColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuerbetragNull()
            Me(Me.tableKHKBuchungByOp.SteuerbetragColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuchungsschluesselNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BuchungsschluesselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuchungsschluesselNull()
            Me(Me.tableKHKBuchungByOp.BuchungsschluesselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAdresseNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.AdresseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAdresseNull()
            Me(Me.tableKHKBuchungByOp.AdresseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodikNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.PeriodikColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodikNull()
            Me(Me.tableKHKBuchungByOp.PeriodikColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTimestampNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.TimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTimestampNull()
            Me(Me.tableKHKBuchungByOp.TimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBelegartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.BelegartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBelegartNull()
            Me(Me.tableKHKBuchungByOp.BelegartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGSMemoNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.GSMemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGSMemoNull()
            Me(Me.tableKHKBuchungByOp.GSMemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsJournalAltNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.JournalAltColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetJournalAltNull()
            Me(Me.tableKHKBuchungByOp.JournalAltColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEULandNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.EULandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEULandNull()
            Me(Me.tableKHKBuchungByOp.EULandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEUUStIDNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.EUUStIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEUUStIDNull()
            Me(Me.tableKHKBuchungByOp.EUUStIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAenderungsdatumNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.AenderungsdatumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAenderungsdatumNull()
            Me(Me.tableKHKBuchungByOp.AenderungsdatumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGSSchluesselNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.GSSchluesselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGSSchluesselNull()
            Me(Me.tableKHKBuchungByOp.GSSchluesselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAbschlussNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.AbschlussColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAbschlussNull()
            Me(Me.tableKHKBuchungByOp.AbschlussColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSMKontoartNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SMKontoartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSMKontoartNull()
            Me(Me.tableKHKBuchungByOp.SMKontoartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSteuernummerNull() As Boolean
            Return Me.IsNull(Me.tableKHKBuchungByOp.SteuernummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSteuernummerNull()
            Me(Me.tableKHKBuchungByOp.SteuernummerColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class KHKBuchungserfassungRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KHKBuchungserfassungRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As KHKBuchungserfassungRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As KHKBuchungserfassungRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class KHKBuchungserfassungOpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KHKBuchungserfassungOpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As KHKBuchungserfassungOpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As KHKBuchungserfassungOpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class KHKBuchungByOpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KHKBuchungByOpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As KHKBuchungByOpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As KHKBuchungByOpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsHPCReweSKR04TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class KHKBuchungserfassungTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "KHKBuchungserfassung"
            tableMapping.ColumnMappings.Add("Tan", "Tan")
            tableMapping.ColumnMappings.Add("Mandant", "Mandant")
            tableMapping.ColumnMappings.Add("Sitzung", "Sitzung")
            tableMapping.ColumnMappings.Add("Benutzer", "Benutzer")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("Journal", "Journal")
            tableMapping.ColumnMappings.Add("Periode", "Periode")
            tableMapping.ColumnMappings.Add("Buchungsdatum", "Buchungsdatum")
            tableMapping.ColumnMappings.Add("KtoSoll", "KtoSoll")
            tableMapping.ColumnMappings.Add("KtoSollTyp", "KtoSollTyp")
            tableMapping.ColumnMappings.Add("KtoSollSammelkto", "KtoSollSammelkto")
            tableMapping.ColumnMappings.Add("KtoHaben", "KtoHaben")
            tableMapping.ColumnMappings.Add("KtoHabentyp", "KtoHabentyp")
            tableMapping.ColumnMappings.Add("KtoHabenSammelkto", "KtoHabenSammelkto")
            tableMapping.ColumnMappings.Add("Anlagenbuchung", "Anlagenbuchung")
            tableMapping.ColumnMappings.Add("Belegdatum", "Belegdatum")
            tableMapping.ColumnMappings.Add("Belegnummer", "Belegnummer")
            tableMapping.ColumnMappings.Add("Buchungstext", "Buchungstext")
            tableMapping.ColumnMappings.Add("Buchungsmemo", "Buchungsmemo")
            tableMapping.ColumnMappings.Add("Buchungsbetrag", "Buchungsbetrag")
            tableMapping.ColumnMappings.Add("Buchungswaehrung", "Buchungswaehrung")
            tableMapping.ColumnMappings.Add("Eigenwaehrungsbetrag", "Eigenwaehrungsbetrag")
            tableMapping.ColumnMappings.Add("Steuerart", "Steuerart")
            tableMapping.ColumnMappings.Add("Steuercode", "Steuercode")
            tableMapping.ColumnMappings.Add("Steuerberechnung", "Steuerberechnung")
            tableMapping.ColumnMappings.Add("Steuersatz", "Steuersatz")
            tableMapping.ColumnMappings.Add("Steuerbetrag", "Steuerbetrag")
            tableMapping.ColumnMappings.Add("Buchungsschluessel", "Buchungsschluessel")
            tableMapping.ColumnMappings.Add("Adresse", "Adresse")
            tableMapping.ColumnMappings.Add("Periodik", "Periodik")
            tableMapping.ColumnMappings.Add("Timestamp", "Timestamp")
            tableMapping.ColumnMappings.Add("Belegart", "Belegart")
            tableMapping.ColumnMappings.Add("GSMemo", "GSMemo")
            tableMapping.ColumnMappings.Add("JournalAlt", "JournalAlt")
            tableMapping.ColumnMappings.Add("EULand", "EULand")
            tableMapping.ColumnMappings.Add("EUUStID", "EUUStID")
            tableMapping.ColumnMappings.Add("EUDreiecksgeschaeft", "EUDreiecksgeschaeft")
            tableMapping.ColumnMappings.Add("Aenderungsdatum", "Aenderungsdatum")
            tableMapping.ColumnMappings.Add("GSSchluessel", "GSSchluessel")
            tableMapping.ColumnMappings.Add("Abschluss", "Abschluss")
            tableMapping.ColumnMappings.Add("SMKontoart", "SMKontoart")
            tableMapping.ColumnMappings.Add("Steuernummer", "Steuernummer")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KHKBuchungserfassung] WHERE (([Tan] = @Original_Tan) AND ([Man"& _ 
                "dant] = @Original_Mandant) AND ((@IsNull_Timestamp = 1 AND [Timestamp] IS NULL) "& _ 
                "OR ([Timestamp] = @Original_Timestamp)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KHKBuchungserfassung] ([Tan], [Mandant], [Sitzung], [Benutzer]"& _ 
                ", [Status], [Journal], [Periode], [Buchungsdatum], [KtoSoll], [KtoSollTyp], [Kto"& _ 
                "SollSammelkto], [KtoHaben], [KtoHabentyp], [KtoHabenSammelkto], [Anlagenbuchung]"& _ 
                ", [Belegdatum], [Belegnummer], [Buchungstext], [Buchungsmemo], [Buchungsbetrag],"& _ 
                " [Buchungswaehrung], [Eigenwaehrungsbetrag], [Steuerart], [Steuercode], [Steuerb"& _ 
                "erechnung], [Steuersatz], [Steuerbetrag], [Buchungsschluessel], [Adresse], [Peri"& _ 
                "odik], [Belegart], [GSMemo], [JournalAlt], [EULand], [EUUStID], [EUDreiecksgesch"& _ 
                "aeft], [Aenderungsdatum], [GSSchluessel], [Abschluss], [SMKontoart], [Steuernumm"& _ 
                "er]) VALUES (@Tan, @Mandant, @Sitzung, @Benutzer, @Status, @Journal, @Periode, @"& _ 
                "Buchungsdatum, @KtoSoll, @KtoSollTyp, @KtoSollSammelkto, @KtoHaben, @KtoHabentyp"& _ 
                ", @KtoHabenSammelkto, @Anlagenbuchung, @Belegdatum, @Belegnummer, @Buchungstext,"& _ 
                " @Buchungsmemo, @Buchungsbetrag, @Buchungswaehrung, @Eigenwaehrungsbetrag, @Steu"& _ 
                "erart, @Steuercode, @Steuerberechnung, @Steuersatz, @Steuerbetrag, @Buchungsschl"& _ 
                "uessel, @Adresse, @Periodik, @Belegart, @GSMemo, @JournalAlt, @EULand, @EUUStID,"& _ 
                " @EUDreiecksgeschaeft, @Aenderungsdatum, @GSSchluessel, @Abschluss, @SMKontoart,"& _ 
                " @Steuernummer);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Tan, Mandant, Sitzung, Benutzer, Status, Journal, Perio"& _ 
                "de, Buchungsdatum, KtoSoll, KtoSollTyp, KtoSollSammelkto, KtoHaben, KtoHabentyp,"& _ 
                " KtoHabenSammelkto, Anlagenbuchung, Belegdatum, Belegnummer, Buchungstext, Buchu"& _ 
                "ngsmemo, Buchungsbetrag, Buchungswaehrung, Eigenwaehrungsbetrag, Steuerart, Steu"& _ 
                "ercode, Steuerberechnung, Steuersatz, Steuerbetrag, Buchungsschluessel, Adresse,"& _ 
                " Periodik, Timestamp, Belegart, GSMemo, JournalAlt, EULand, EUUStID, EUDreiecksg"& _ 
                "eschaeft, Aenderungsdatum, GSSchluessel, Abschluss, SMKontoart, Steuernummer FRO"& _ 
                "M KHKBuchungserfassung WHERE (Mandant = @Mandant) AND (Tan = @Tan)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sitzung", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sitzung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Benutzer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Benutzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Journal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Journal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSoll", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSoll", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSollTyp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSollTyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSollSammelkto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSollSammelkto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHaben", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHaben", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHabentyp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHabentyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHabenSammelkto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHabenSammelkto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Anlagenbuchung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anlagenbuchung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegnummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungstext", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungstext", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsmemo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsmemo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungswaehrung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungswaehrung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Eigenwaehrungsbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Eigenwaehrungsbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuercode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuercode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerberechnung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerberechnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuersatz", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuersatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsschluessel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsschluessel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Adresse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Adresse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periodik", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodik", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GSMemo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GSMemo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JournalAlt", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JournalAlt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EULand", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EULand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EUUStID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EUUStID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EUDreiecksgeschaeft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EUDreiecksgeschaeft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aenderungsdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aenderungsdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GSSchluessel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GSSchluessel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Abschluss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Abschluss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMKontoart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SMKontoart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuernummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuernummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[KHKBuchungserfassung] SET [Tan] = @Tan, [Mandant] = @Mandant, [Sitz"& _ 
                "ung] = @Sitzung, [Benutzer] = @Benutzer, [Status] = @Status, [Journal] = @Journa"& _ 
                "l, [Periode] = @Periode, [Buchungsdatum] = @Buchungsdatum, [KtoSoll] = @KtoSoll,"& _ 
                " [KtoSollTyp] = @KtoSollTyp, [KtoSollSammelkto] = @KtoSollSammelkto, [KtoHaben] "& _ 
                "= @KtoHaben, [KtoHabentyp] = @KtoHabentyp, [KtoHabenSammelkto] = @KtoHabenSammel"& _ 
                "kto, [Anlagenbuchung] = @Anlagenbuchung, [Belegdatum] = @Belegdatum, [Belegnumme"& _ 
                "r] = @Belegnummer, [Buchungstext] = @Buchungstext, [Buchungsmemo] = @Buchungsmem"& _ 
                "o, [Buchungsbetrag] = @Buchungsbetrag, [Buchungswaehrung] = @Buchungswaehrung, ["& _ 
                "Eigenwaehrungsbetrag] = @Eigenwaehrungsbetrag, [Steuerart] = @Steuerart, [Steuer"& _ 
                "code] = @Steuercode, [Steuerberechnung] = @Steuerberechnung, [Steuersatz] = @Ste"& _ 
                "uersatz, [Steuerbetrag] = @Steuerbetrag, [Buchungsschluessel] = @Buchungsschlues"& _ 
                "sel, [Adresse] = @Adresse, [Periodik] = @Periodik, [Belegart] = @Belegart, [GSMe"& _ 
                "mo] = @GSMemo, [JournalAlt] = @JournalAlt, [EULand] = @EULand, [EUUStID] = @EUUS"& _ 
                "tID, [EUDreiecksgeschaeft] = @EUDreiecksgeschaeft, [Aenderungsdatum] = @Aenderun"& _ 
                "gsdatum, [GSSchluessel] = @GSSchluessel, [Abschluss] = @Abschluss, [SMKontoart] "& _ 
                "= @SMKontoart, [Steuernummer] = @Steuernummer WHERE (([Tan] = @Original_Tan) AND"& _ 
                " ([Mandant] = @Original_Mandant) AND ((@IsNull_Timestamp = 1 AND [Timestamp] IS "& _ 
                "NULL) OR ([Timestamp] = @Original_Timestamp)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Tan, Mandant, Sitzung, B"& _ 
                "enutzer, Status, Journal, Periode, Buchungsdatum, KtoSoll, KtoSollTyp, KtoSollSa"& _ 
                "mmelkto, KtoHaben, KtoHabentyp, KtoHabenSammelkto, Anlagenbuchung, Belegdatum, B"& _ 
                "elegnummer, Buchungstext, Buchungsmemo, Buchungsbetrag, Buchungswaehrung, Eigenw"& _ 
                "aehrungsbetrag, Steuerart, Steuercode, Steuerberechnung, Steuersatz, Steuerbetra"& _ 
                "g, Buchungsschluessel, Adresse, Periodik, Timestamp, Belegart, GSMemo, JournalAl"& _ 
                "t, EULand, EUUStID, EUDreiecksgeschaeft, Aenderungsdatum, GSSchluessel, Abschlus"& _ 
                "s, SMKontoart, Steuernummer FROM KHKBuchungserfassung WHERE (Mandant = @Mandant)"& _ 
                " AND (Tan = @Tan)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sitzung", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sitzung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Benutzer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Benutzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Journal", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Journal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSoll", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSoll", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSollTyp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSollTyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoSollSammelkto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoSollSammelkto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHaben", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHaben", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHabentyp", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHabentyp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KtoHabenSammelkto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KtoHabenSammelkto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Anlagenbuchung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anlagenbuchung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegnummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungstext", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungstext", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsmemo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsmemo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungswaehrung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungswaehrung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Eigenwaehrungsbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Eigenwaehrungsbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuercode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuercode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerberechnung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerberechnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuersatz", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuersatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuerbetrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuerbetrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Buchungsschluessel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Buchungsschluessel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Adresse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Adresse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periodik", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodik", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Belegart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Belegart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GSMemo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GSMemo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JournalAlt", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JournalAlt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EULand", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EULand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EUUStID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EUUStID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EUDreiecksgeschaeft", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EUDreiecksgeschaeft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Aenderungsdatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Aenderungsdatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GSSchluessel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GSSchluessel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Abschluss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Abschluss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMKontoart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SMKontoart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuernummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuernummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.HPCReweSKR04ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Tan, Mandant, Sitzung, Benutzer, Status, Journal, Periode, Buchungsdatum, "& _ 
                "KtoSoll, KtoSollTyp, KtoSollSammelkto, KtoHaben, KtoHabentyp, KtoHabenSammelkto,"& _ 
                " Anlagenbuchung, Belegdatum, Belegnummer, Buchungstext, Buchungsmemo, Buchungsbe"& _ 
                "trag, Buchungswaehrung, Eigenwaehrungsbetrag, Steuerart, Steuercode, Steuerberec"& _ 
                "hnung, Steuersatz, Steuerbetrag, Buchungsschluessel, Adresse, Periodik, Timestam"& _ 
                "p, Belegart, GSMemo, JournalAlt, EULand, EUUStID, EUDreiecksgeschaeft, Aenderung"& _ 
                "sdatum, GSSchluessel, Abschluss, SMKontoart, Steuernummer FROM dbo.KHKBuchungser"& _ 
                "fassung"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsHPCReweSKR04.KHKBuchungserfassungDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsHPCReweSKR04.KHKBuchungserfassungDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsHPCReweSKR04.KHKBuchungserfassungDataTable = New dsHPCReweSKR04.KHKBuchungserfassungDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsHPCReweSKR04.KHKBuchungserfassungDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsHPCReweSKR04) As Integer
            Return Me.Adapter.Update(dataSet, "KHKBuchungserfassung")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tan As Integer, ByVal Original_Mandant As Short, ByVal Original_Timestamp() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tan,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Mandant,Short)
            If (Original_Timestamp Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Timestamp,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Tan As Integer,  _
                    ByVal Mandant As Short,  _
                    ByVal Sitzung As Global.System.Nullable(Of Integer),  _
                    ByVal Benutzer As String,  _
                    ByVal Status As Global.System.Nullable(Of Short),  _
                    ByVal Journal As Global.System.Nullable(Of Short),  _
                    ByVal Periode As Global.System.Nullable(Of Integer),  _
                    ByVal Buchungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal KtoSoll As String,  _
                    ByVal KtoSollTyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoSollSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal KtoHaben As String,  _
                    ByVal KtoHabentyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoHabenSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal Anlagenbuchung As Global.System.Nullable(Of Short),  _
                    ByVal Belegdatum As Global.System.Nullable(Of Date),  _
                    ByVal Belegnummer As String,  _
                    ByVal Buchungstext As String,  _
                    ByVal Buchungsmemo As String,  _
                    ByVal Buchungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungswaehrung As String,  _
                    ByVal Eigenwaehrungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerart As String,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Steuerberechnung As Global.System.Nullable(Of Short),  _
                    ByVal Steuersatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungsschluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Adresse As Global.System.Nullable(Of Integer),  _
                    ByVal Periodik As Global.System.Nullable(Of Integer),  _
                    ByVal Belegart As String,  _
                    ByVal GSMemo As String,  _
                    ByVal JournalAlt As Global.System.Nullable(Of Short),  _
                    ByVal EULand As String,  _
                    ByVal EUUStID As String,  _
                    ByVal EUDreiecksgeschaeft As Short,  _
                    ByVal Aenderungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal GSSchluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Abschluss As Global.System.Nullable(Of Integer),  _
                    ByVal SMKontoart As String,  _
                    ByVal Steuernummer As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tan,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Mandant,Short)
            If (Sitzung.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Sitzung.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Benutzer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Benutzer")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Benutzer,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Status.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Journal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Journal.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Periode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Periode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Buchungsdatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Buchungsdatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (KtoSoll Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KtoSoll,String)
            End If
            If (KtoSollTyp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(KtoSollTyp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (KtoSollSammelkto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(KtoSollSammelkto.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (KtoHaben Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(KtoHaben,String)
            End If
            If (KtoHabentyp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(KtoHabentyp.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (KtoHabenSammelkto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(KtoHabenSammelkto.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Anlagenbuchung.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Anlagenbuchung.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Belegdatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Belegdatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Belegnummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Belegnummer,String)
            End If
            If (Buchungstext Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Buchungstext,String)
            End If
            If (Buchungsmemo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Buchungsmemo,String)
            End If
            If (Buchungsbetrag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Buchungsbetrag.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Buchungswaehrung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Buchungswaehrung,String)
            End If
            If (Eigenwaehrungsbetrag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Eigenwaehrungsbetrag.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Steuerart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Steuerart,String)
            End If
            If (Steuercode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Steuercode.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Steuerberechnung.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Steuerberechnung.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Steuersatz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Steuersatz.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Steuerbetrag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Steuerbetrag.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Buchungsschluessel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Buchungsschluessel.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Adresse.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Adresse.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Periodik.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Periodik.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Belegart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Belegart,String)
            End If
            If (GSMemo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(GSMemo,String)
            End If
            If (JournalAlt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(JournalAlt.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (EULand Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(EULand,String)
            End If
            If (EUUStID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(EUUStID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(EUDreiecksgeschaeft,Short)
            If (Aenderungsdatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Aenderungsdatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (GSSchluessel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(GSSchluessel.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Abschluss.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Abschluss.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SMKontoart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SMKontoart,String)
            End If
            If (Steuernummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Steuernummer,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Tan As Integer,  _
                    ByVal Mandant As Short,  _
                    ByVal Sitzung As Global.System.Nullable(Of Integer),  _
                    ByVal Benutzer As String,  _
                    ByVal Status As Global.System.Nullable(Of Short),  _
                    ByVal Journal As Global.System.Nullable(Of Short),  _
                    ByVal Periode As Global.System.Nullable(Of Integer),  _
                    ByVal Buchungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal KtoSoll As String,  _
                    ByVal KtoSollTyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoSollSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal KtoHaben As String,  _
                    ByVal KtoHabentyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoHabenSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal Anlagenbuchung As Global.System.Nullable(Of Short),  _
                    ByVal Belegdatum As Global.System.Nullable(Of Date),  _
                    ByVal Belegnummer As String,  _
                    ByVal Buchungstext As String,  _
                    ByVal Buchungsmemo As String,  _
                    ByVal Buchungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungswaehrung As String,  _
                    ByVal Eigenwaehrungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerart As String,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Steuerberechnung As Global.System.Nullable(Of Short),  _
                    ByVal Steuersatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungsschluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Adresse As Global.System.Nullable(Of Integer),  _
                    ByVal Periodik As Global.System.Nullable(Of Integer),  _
                    ByVal Belegart As String,  _
                    ByVal GSMemo As String,  _
                    ByVal JournalAlt As Global.System.Nullable(Of Short),  _
                    ByVal EULand As String,  _
                    ByVal EUUStID As String,  _
                    ByVal EUDreiecksgeschaeft As Short,  _
                    ByVal Aenderungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal GSSchluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Abschluss As Global.System.Nullable(Of Integer),  _
                    ByVal SMKontoart As String,  _
                    ByVal Steuernummer As String,  _
                    ByVal Original_Tan As Integer,  _
                    ByVal Original_Mandant As Short,  _
                    ByVal Original_Timestamp() As Byte) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tan,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Mandant,Short)
            If (Sitzung.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Sitzung.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Benutzer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Benutzer")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Benutzer,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Status.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Journal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Journal.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Periode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Periode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Buchungsdatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Buchungsdatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (KtoSoll Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(KtoSoll,String)
            End If
            If (KtoSollTyp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(KtoSollTyp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (KtoSollSammelkto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(KtoSollSammelkto.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (KtoHaben Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(KtoHaben,String)
            End If
            If (KtoHabentyp.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(KtoHabentyp.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (KtoHabenSammelkto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(KtoHabenSammelkto.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Anlagenbuchung.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Anlagenbuchung.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Belegdatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Belegdatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Belegnummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Belegnummer,String)
            End If
            If (Buchungstext Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Buchungstext,String)
            End If
            If (Buchungsmemo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Buchungsmemo,String)
            End If
            If (Buchungsbetrag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Buchungsbetrag.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Buchungswaehrung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Buchungswaehrung,String)
            End If
            If (Eigenwaehrungsbetrag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Eigenwaehrungsbetrag.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Steuerart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Steuerart,String)
            End If
            If (Steuercode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Steuercode.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Steuerberechnung.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Steuerberechnung.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Steuersatz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Steuersatz.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Steuerbetrag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Steuerbetrag.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Buchungsschluessel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Buchungsschluessel.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Adresse.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Adresse.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Periodik.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Periodik.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Belegart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Belegart,String)
            End If
            If (GSMemo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(GSMemo,String)
            End If
            If (JournalAlt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(JournalAlt.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (EULand Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(EULand,String)
            End If
            If (EUUStID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(EUUStID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(EUDreiecksgeschaeft,Short)
            If (Aenderungsdatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Aenderungsdatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (GSSchluessel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(GSSchluessel.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Abschluss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Abschluss.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SMKontoart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(SMKontoart,String)
            End If
            If (Steuernummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Steuernummer,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Tan,Integer)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Mandant,Short)
            If (Original_Timestamp Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Timestamp,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Sitzung As Global.System.Nullable(Of Integer),  _
                    ByVal Benutzer As String,  _
                    ByVal Status As Global.System.Nullable(Of Short),  _
                    ByVal Journal As Global.System.Nullable(Of Short),  _
                    ByVal Periode As Global.System.Nullable(Of Integer),  _
                    ByVal Buchungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal KtoSoll As String,  _
                    ByVal KtoSollTyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoSollSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal KtoHaben As String,  _
                    ByVal KtoHabentyp As Global.System.Nullable(Of Short),  _
                    ByVal KtoHabenSammelkto As Global.System.Nullable(Of Short),  _
                    ByVal Anlagenbuchung As Global.System.Nullable(Of Short),  _
                    ByVal Belegdatum As Global.System.Nullable(Of Date),  _
                    ByVal Belegnummer As String,  _
                    ByVal Buchungstext As String,  _
                    ByVal Buchungsmemo As String,  _
                    ByVal Buchungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungswaehrung As String,  _
                    ByVal Eigenwaehrungsbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerart As String,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Steuerberechnung As Global.System.Nullable(Of Short),  _
                    ByVal Steuersatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Steuerbetrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Buchungsschluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Adresse As Global.System.Nullable(Of Integer),  _
                    ByVal Periodik As Global.System.Nullable(Of Integer),  _
                    ByVal Belegart As String,  _
                    ByVal GSMemo As String,  _
                    ByVal JournalAlt As Global.System.Nullable(Of Short),  _
                    ByVal EULand As String,  _
                    ByVal EUUStID As String,  _
                    ByVal EUDreiecksgeschaeft As Short,  _
                    ByVal Aenderungsdatum As Global.System.Nullable(Of Date),  _
                    ByVal GSSchluessel As Global.System.Nullable(Of Integer),  _
                    ByVal Abschluss As Global.System.Nullable(Of Integer),  _
                    ByVal SMKontoart As String,  _
                    ByVal Steuernummer As String,  _
                    ByVal Original_Tan As Integer,  _
                    ByVal Original_Mandant As Short,  _
                    ByVal Original_Timestamp() As Byte) As Integer
            Return Me.Update(Original_Tan, Original_Mandant, Sitzung, Benutzer, Status, Journal, Periode, Buchungsdatum, KtoSoll, KtoSollTyp, KtoSollSammelkto, KtoHaben, KtoHabentyp, KtoHabenSammelkto, Anlagenbuchung, Belegdatum, Belegnummer, Buchungstext, Buchungsmemo, Buchungsbetrag, Buchungswaehrung, Eigenwaehrungsbetrag, Steuerart, Steuercode, Steuerberechnung, Steuersatz, Steuerbetrag, Buchungsschluessel, Adresse, Periodik, Belegart, GSMemo, JournalAlt, EULand, EUUStID, EUDreiecksgeschaeft, Aenderungsdatum, GSSchluessel, Abschluss, SMKontoart, Steuernummer, Original_Tan, Original_Mandant, Original_Timestamp)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class KHKBuchungserfassungOpTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "KHKBuchungserfassungOp"
            tableMapping.ColumnMappings.Add("Tan", "Tan")
            tableMapping.ColumnMappings.Add("OpNr", "OpNr")
            tableMapping.ColumnMappings.Add("Mandant", "Mandant")
            tableMapping.ColumnMappings.Add("OpDatum", "OpDatum")
            tableMapping.ColumnMappings.Add("Faelligkeit", "Faelligkeit")
            tableMapping.ColumnMappings.Add("SkontoFaelligkeit1", "SkontoFaelligkeit1")
            tableMapping.ColumnMappings.Add("SkontoFaelligkeit2", "SkontoFaelligkeit2")
            tableMapping.ColumnMappings.Add("Zahlungskond", "Zahlungskond")
            tableMapping.ColumnMappings.Add("Inkassoart", "Inkassoart")
            tableMapping.ColumnMappings.Add("Nettobedingung", "Nettobedingung")
            tableMapping.ColumnMappings.Add("Skontobedingung1", "Skontobedingung1")
            tableMapping.ColumnMappings.Add("Skontobedingung2", "Skontobedingung2")
            tableMapping.ColumnMappings.Add("Skontoprozent1", "Skontoprozent1")
            tableMapping.ColumnMappings.Add("Skontoprozent2", "Skontoprozent2")
            tableMapping.ColumnMappings.Add("KKGesellschaft", "KKGesellschaft")
            tableMapping.ColumnMappings.Add("KKNummer", "KKNummer")
            tableMapping.ColumnMappings.Add("KKGueltigkeit", "KKGueltigkeit")
            tableMapping.ColumnMappings.Add("KKInhaber", "KKInhaber")
            tableMapping.ColumnMappings.Add("KKGenehmigung", "KKGenehmigung")
            tableMapping.ColumnMappings.Add("Mahnstufe", "Mahnstufe")
            tableMapping.ColumnMappings.Add("Vertreter", "Vertreter")
            tableMapping.ColumnMappings.Add("Provision", "Provision")
            tableMapping.ColumnMappings.Add("Betrag", "Betrag")
            tableMapping.ColumnMappings.Add("Skonto", "Skonto")
            tableMapping.ColumnMappings.Add("Auszifferung", "Auszifferung")
            tableMapping.ColumnMappings.Add("Memo", "Memo")
            tableMapping.ColumnMappings.Add("Referenz", "Referenz")
            tableMapping.ColumnMappings.Add("IstAnzahlung", "IstAnzahlung")
            tableMapping.ColumnMappings.Add("Steuercode", "Steuercode")
            tableMapping.ColumnMappings.Add("Zession", "Zession")
            tableMapping.ColumnMappings.Add("ZessionDatum", "ZessionDatum")
            tableMapping.ColumnMappings.Add("Zessionar", "Zessionar")
            tableMapping.ColumnMappings.Add("Timestamp", "Timestamp")
            tableMapping.ColumnMappings.Add("Azv", "Azv")
            tableMapping.ColumnMappings.Add("VStVerguetung", "VStVerguetung")
            tableMapping.ColumnMappings.Add("MandatsNummer", "MandatsNummer")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KHKBuchungserfassungOp] WHERE (([Tan] = @Original_Tan) AND ([O"& _ 
                "pNr] = @Original_OpNr) AND ([Mandant] = @Original_Mandant) AND ((@IsNull_Timesta"& _ 
                "mp = 1 AND [Timestamp] IS NULL) OR ([Timestamp] = @Original_Timestamp)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OpNr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KHKBuchungserfassungOp] ([Tan], [OpNr], [Mandant], [OpDatum], "& _ 
                "[Faelligkeit], [SkontoFaelligkeit1], [SkontoFaelligkeit2], [Zahlungskond], [Inka"& _ 
                "ssoart], [Nettobedingung], [Skontobedingung1], [Skontobedingung2], [Skontoprozen"& _ 
                "t1], [Skontoprozent2], [KKGesellschaft], [KKNummer], [KKGueltigkeit], [KKInhaber"& _ 
                "], [KKGenehmigung], [Mahnstufe], [Vertreter], [Provision], [Betrag], [Skonto], ["& _ 
                "Auszifferung], [Memo], [Referenz], [IstAnzahlung], [Steuercode], [Zession], [Zes"& _ 
                "sionDatum], [Zessionar], [Azv], [VStVerguetung], [MandatsNummer]) VALUES (@Tan, "& _ 
                "@OpNr, @Mandant, @OpDatum, @Faelligkeit, @SkontoFaelligkeit1, @SkontoFaelligkeit"& _ 
                "2, @Zahlungskond, @Inkassoart, @Nettobedingung, @Skontobedingung1, @Skontobeding"& _ 
                "ung2, @Skontoprozent1, @Skontoprozent2, @KKGesellschaft, @KKNummer, @KKGueltigke"& _ 
                "it, @KKInhaber, @KKGenehmigung, @Mahnstufe, @Vertreter, @Provision, @Betrag, @Sk"& _ 
                "onto, @Auszifferung, @Memo, @Referenz, @IstAnzahlung, @Steuercode, @Zession, @Ze"& _ 
                "ssionDatum, @Zessionar, @Azv, @VStVerguetung, @MandatsNummer);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Tan, OpNr"& _ 
                ", Mandant, OpDatum, Faelligkeit, SkontoFaelligkeit1, SkontoFaelligkeit2, Zahlung"& _ 
                "skond, Inkassoart, Nettobedingung, Skontobedingung1, Skontobedingung2, Skontopro"& _ 
                "zent1, Skontoprozent2, KKGesellschaft, KKNummer, KKGueltigkeit, KKInhaber, KKGen"& _ 
                "ehmigung, Mahnstufe, Vertreter, Provision, Betrag, Skonto, Auszifferung, Memo, R"& _ 
                "eferenz, IstAnzahlung, Steuercode, Zession, ZessionDatum, Zessionar, Timestamp, "& _ 
                "Azv, VStVerguetung, MandatsNummer FROM KHKBuchungserfassungOp WHERE (Mandant = @"& _ 
                "Mandant) AND (OpNr = @OpNr) AND (Tan = @Tan)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OpNr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OpDatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpDatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Faelligkeit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Faelligkeit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkontoFaelligkeit1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkontoFaelligkeit1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkontoFaelligkeit2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkontoFaelligkeit2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zahlungskond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zahlungskond", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inkassoart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inkassoart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nettobedingung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nettobedingung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontobedingung1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontobedingung1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontobedingung2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontobedingung2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontoprozent1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontoprozent1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontoprozent2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontoprozent2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGesellschaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGesellschaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKNummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGueltigkeit", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGueltigkeit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKInhaber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKInhaber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGenehmigung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGenehmigung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mahnstufe", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mahnstufe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vertreter", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vertreter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provision", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Betrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Betrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skonto", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skonto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auszifferung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auszifferung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Memo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Memo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Referenz", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Referenz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IstAnzahlung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IstAnzahlung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuercode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuercode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zession", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zession", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZessionDatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZessionDatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zessionar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zessionar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Azv", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Azv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VStVerguetung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VStVerguetung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MandatsNummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MandatsNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[KHKBuchungserfassungOp] SET [Tan] = @Tan, [OpNr] = @OpNr, [Mandant]"& _ 
                " = @Mandant, [OpDatum] = @OpDatum, [Faelligkeit] = @Faelligkeit, [SkontoFaelligk"& _ 
                "eit1] = @SkontoFaelligkeit1, [SkontoFaelligkeit2] = @SkontoFaelligkeit2, [Zahlun"& _ 
                "gskond] = @Zahlungskond, [Inkassoart] = @Inkassoart, [Nettobedingung] = @Nettobe"& _ 
                "dingung, [Skontobedingung1] = @Skontobedingung1, [Skontobedingung2] = @Skontobed"& _ 
                "ingung2, [Skontoprozent1] = @Skontoprozent1, [Skontoprozent2] = @Skontoprozent2,"& _ 
                " [KKGesellschaft] = @KKGesellschaft, [KKNummer] = @KKNummer, [KKGueltigkeit] = @"& _ 
                "KKGueltigkeit, [KKInhaber] = @KKInhaber, [KKGenehmigung] = @KKGenehmigung, [Mahn"& _ 
                "stufe] = @Mahnstufe, [Vertreter] = @Vertreter, [Provision] = @Provision, [Betrag"& _ 
                "] = @Betrag, [Skonto] = @Skonto, [Auszifferung] = @Auszifferung, [Memo] = @Memo,"& _ 
                " [Referenz] = @Referenz, [IstAnzahlung] = @IstAnzahlung, [Steuercode] = @Steuerc"& _ 
                "ode, [Zession] = @Zession, [ZessionDatum] = @ZessionDatum, [Zessionar] = @Zessio"& _ 
                "nar, [Azv] = @Azv, [VStVerguetung] = @VStVerguetung, [MandatsNummer] = @MandatsN"& _ 
                "ummer WHERE (([Tan] = @Original_Tan) AND ([OpNr] = @Original_OpNr) AND ([Mandant"& _ 
                "] = @Original_Mandant) AND ((@IsNull_Timestamp = 1 AND [Timestamp] IS NULL) OR ("& _ 
                "[Timestamp] = @Original_Timestamp)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Tan, OpNr, Mandant, OpDatum, Faell"& _ 
                "igkeit, SkontoFaelligkeit1, SkontoFaelligkeit2, Zahlungskond, Inkassoart, Nettob"& _ 
                "edingung, Skontobedingung1, Skontobedingung2, Skontoprozent1, Skontoprozent2, KK"& _ 
                "Gesellschaft, KKNummer, KKGueltigkeit, KKInhaber, KKGenehmigung, Mahnstufe, Vert"& _ 
                "reter, Provision, Betrag, Skonto, Auszifferung, Memo, Referenz, IstAnzahlung, St"& _ 
                "euercode, Zession, ZessionDatum, Zessionar, Timestamp, Azv, VStVerguetung, Manda"& _ 
                "tsNummer FROM KHKBuchungserfassungOp WHERE (Mandant = @Mandant) AND (OpNr = @OpN"& _ 
                "r) AND (Tan = @Tan)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OpNr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OpDatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpDatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Faelligkeit", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Faelligkeit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkontoFaelligkeit1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkontoFaelligkeit1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SkontoFaelligkeit2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SkontoFaelligkeit2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zahlungskond", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zahlungskond", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Inkassoart", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Inkassoart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nettobedingung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nettobedingung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontobedingung1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontobedingung1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontobedingung2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontobedingung2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontoprozent1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontoprozent1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skontoprozent2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skontoprozent2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGesellschaft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGesellschaft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKNummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGueltigkeit", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGueltigkeit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKInhaber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKInhaber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KKGenehmigung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KKGenehmigung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mahnstufe", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mahnstufe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vertreter", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vertreter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provision", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Betrag", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Betrag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Skonto", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Skonto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auszifferung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auszifferung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Memo", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Memo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Referenz", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Referenz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IstAnzahlung", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IstAnzahlung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Steuercode", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Steuercode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zession", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zession", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZessionDatum", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZessionDatum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zessionar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zessionar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Azv", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Azv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VStVerguetung", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VStVerguetung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MandatsNummer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MandatsNummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tan", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OpNr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OpNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mandant", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Timestamp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Timestamp", Global.System.Data.SqlDbType.Timestamp, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.HPCReweSKR04ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Tan, OpNr, Mandant, OpDatum, Faelligkeit, SkontoFaelligkeit1, SkontoFaelli"& _ 
                "gkeit2, Zahlungskond, Inkassoart, Nettobedingung, Skontobedingung1, Skontobeding"& _ 
                "ung2, Skontoprozent1, Skontoprozent2, KKGesellschaft, KKNummer, KKGueltigkeit, K"& _ 
                "KInhaber, KKGenehmigung, Mahnstufe, Vertreter, Provision, Betrag, Skonto, Auszif"& _ 
                "ferung, Memo, Referenz, IstAnzahlung, Steuercode, Zession, ZessionDatum, Zession"& _ 
                "ar, Timestamp, Azv, VStVerguetung, MandatsNummer FROM dbo.KHKBuchungserfassungOp"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsHPCReweSKR04.KHKBuchungserfassungOpDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsHPCReweSKR04.KHKBuchungserfassungOpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsHPCReweSKR04.KHKBuchungserfassungOpDataTable = New dsHPCReweSKR04.KHKBuchungserfassungOpDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsHPCReweSKR04.KHKBuchungserfassungOpDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsHPCReweSKR04) As Integer
            Return Me.Adapter.Update(dataSet, "KHKBuchungserfassungOp")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tan As Integer, ByVal Original_OpNr As String, ByVal Original_Mandant As Short, ByVal Original_Timestamp() As Byte) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tan,Integer)
            If (Original_OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OpNr")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_OpNr,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Mandant,Short)
            If (Original_Timestamp Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Timestamp,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Tan As Integer,  _
                    ByVal OpNr As String,  _
                    ByVal Mandant As Short,  _
                    ByVal OpDatum As Global.System.Nullable(Of Date),  _
                    ByVal Faelligkeit As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit1 As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit2 As Global.System.Nullable(Of Date),  _
                    ByVal Zahlungskond As String,  _
                    ByVal Inkassoart As String,  _
                    ByVal Nettobedingung As String,  _
                    ByVal Skontobedingung1 As String,  _
                    ByVal Skontobedingung2 As String,  _
                    ByVal Skontoprozent1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Skontoprozent2 As Global.System.Nullable(Of Decimal),  _
                    ByVal KKGesellschaft As String,  _
                    ByVal KKNummer As String,  _
                    ByVal KKGueltigkeit As Global.System.Nullable(Of Short),  _
                    ByVal KKInhaber As String,  _
                    ByVal KKGenehmigung As String,  _
                    ByVal Mahnstufe As Global.System.Nullable(Of Short),  _
                    ByVal Vertreter As String,  _
                    ByVal Provision As Global.System.Nullable(Of Decimal),  _
                    ByVal Betrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Skonto As Global.System.Nullable(Of Decimal),  _
                    ByVal Auszifferung As String,  _
                    ByVal Memo As String,  _
                    ByVal Referenz As String,  _
                    ByVal IstAnzahlung As Short,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Zession As Short,  _
                    ByVal ZessionDatum As Global.System.Nullable(Of Date),  _
                    ByVal Zessionar As String,  _
                    ByVal Azv As String,  _
                    ByVal VStVerguetung As String,  _
                    ByVal MandatsNummer As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tan,Integer)
            If (OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OpNr")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OpNr,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Mandant,Short)
            If (OpDatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(OpDatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Faelligkeit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Faelligkeit.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SkontoFaelligkeit1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SkontoFaelligkeit1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SkontoFaelligkeit2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SkontoFaelligkeit2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Zahlungskond Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Zahlungskond,String)
            End If
            If (Inkassoart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Inkassoart,String)
            End If
            If (Nettobedingung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Nettobedingung,String)
            End If
            If (Skontobedingung1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Skontobedingung1,String)
            End If
            If (Skontobedingung2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Skontobedingung2,String)
            End If
            If (Skontoprozent1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Skontoprozent1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Skontoprozent2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Skontoprozent2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (KKGesellschaft Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(KKGesellschaft,String)
            End If
            If (KKNummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(KKNummer,String)
            End If
            If (KKGueltigkeit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(KKGueltigkeit.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (KKInhaber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(KKInhaber,String)
            End If
            If (KKGenehmigung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(KKGenehmigung,String)
            End If
            If (Mahnstufe.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Mahnstufe.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Vertreter Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Vertreter,String)
            End If
            If (Provision.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Provision.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Betrag.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Betrag.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Skonto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Skonto.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Auszifferung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Auszifferung,String)
            End If
            If (Memo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Memo,String)
            End If
            If (Referenz Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Referenz,String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(IstAnzahlung,Short)
            If (Steuercode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Steuercode.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(Zession,Short)
            If (ZessionDatum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ZessionDatum.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Zessionar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Zessionar,String)
            End If
            If (Azv Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Azv,String)
            End If
            If (VStVerguetung Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(VStVerguetung,String)
            End If
            If (MandatsNummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MandatsNummer,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Tan As Integer,  _
                    ByVal OpNr As String,  _
                    ByVal Mandant As Short,  _
                    ByVal OpDatum As Global.System.Nullable(Of Date),  _
                    ByVal Faelligkeit As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit1 As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit2 As Global.System.Nullable(Of Date),  _
                    ByVal Zahlungskond As String,  _
                    ByVal Inkassoart As String,  _
                    ByVal Nettobedingung As String,  _
                    ByVal Skontobedingung1 As String,  _
                    ByVal Skontobedingung2 As String,  _
                    ByVal Skontoprozent1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Skontoprozent2 As Global.System.Nullable(Of Decimal),  _
                    ByVal KKGesellschaft As String,  _
                    ByVal KKNummer As String,  _
                    ByVal KKGueltigkeit As Global.System.Nullable(Of Short),  _
                    ByVal KKInhaber As String,  _
                    ByVal KKGenehmigung As String,  _
                    ByVal Mahnstufe As Global.System.Nullable(Of Short),  _
                    ByVal Vertreter As String,  _
                    ByVal Provision As Global.System.Nullable(Of Decimal),  _
                    ByVal Betrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Skonto As Global.System.Nullable(Of Decimal),  _
                    ByVal Auszifferung As String,  _
                    ByVal Memo As String,  _
                    ByVal Referenz As String,  _
                    ByVal IstAnzahlung As Short,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Zession As Short,  _
                    ByVal ZessionDatum As Global.System.Nullable(Of Date),  _
                    ByVal Zessionar As String,  _
                    ByVal Azv As String,  _
                    ByVal VStVerguetung As String,  _
                    ByVal MandatsNummer As String,  _
                    ByVal Original_Tan As Integer,  _
                    ByVal Original_OpNr As String,  _
                    ByVal Original_Mandant As Short,  _
                    ByVal Original_Timestamp() As Byte) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tan,Integer)
            If (OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OpNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OpNr,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Mandant,Short)
            If (OpDatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(OpDatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Faelligkeit.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Faelligkeit.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SkontoFaelligkeit1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SkontoFaelligkeit1.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SkontoFaelligkeit2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SkontoFaelligkeit2.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Zahlungskond Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Zahlungskond,String)
            End If
            If (Inkassoart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Inkassoart,String)
            End If
            If (Nettobedingung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Nettobedingung,String)
            End If
            If (Skontobedingung1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Skontobedingung1,String)
            End If
            If (Skontobedingung2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Skontobedingung2,String)
            End If
            If (Skontoprozent1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Skontoprozent1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Skontoprozent2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Skontoprozent2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (KKGesellschaft Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(KKGesellschaft,String)
            End If
            If (KKNummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(KKNummer,String)
            End If
            If (KKGueltigkeit.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(KKGueltigkeit.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (KKInhaber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(KKInhaber,String)
            End If
            If (KKGenehmigung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(KKGenehmigung,String)
            End If
            If (Mahnstufe.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Mahnstufe.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Vertreter Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Vertreter,String)
            End If
            If (Provision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Provision.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Betrag.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Betrag.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Skonto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Skonto.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Auszifferung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Auszifferung,String)
            End If
            If (Memo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Memo,String)
            End If
            If (Referenz Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Referenz,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(IstAnzahlung,Short)
            If (Steuercode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Steuercode.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Zession,Short)
            If (ZessionDatum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(ZessionDatum.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Zessionar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Zessionar,String)
            End If
            If (Azv Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Azv,String)
            End If
            If (VStVerguetung Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(VStVerguetung,String)
            End If
            If (MandatsNummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(MandatsNummer,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Tan,Integer)
            If (Original_OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OpNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_OpNr,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Mandant,Short)
            If (Original_Timestamp Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Timestamp,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OpDatum As Global.System.Nullable(Of Date),  _
                    ByVal Faelligkeit As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit1 As Global.System.Nullable(Of Date),  _
                    ByVal SkontoFaelligkeit2 As Global.System.Nullable(Of Date),  _
                    ByVal Zahlungskond As String,  _
                    ByVal Inkassoart As String,  _
                    ByVal Nettobedingung As String,  _
                    ByVal Skontobedingung1 As String,  _
                    ByVal Skontobedingung2 As String,  _
                    ByVal Skontoprozent1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Skontoprozent2 As Global.System.Nullable(Of Decimal),  _
                    ByVal KKGesellschaft As String,  _
                    ByVal KKNummer As String,  _
                    ByVal KKGueltigkeit As Global.System.Nullable(Of Short),  _
                    ByVal KKInhaber As String,  _
                    ByVal KKGenehmigung As String,  _
                    ByVal Mahnstufe As Global.System.Nullable(Of Short),  _
                    ByVal Vertreter As String,  _
                    ByVal Provision As Global.System.Nullable(Of Decimal),  _
                    ByVal Betrag As Global.System.Nullable(Of Decimal),  _
                    ByVal Skonto As Global.System.Nullable(Of Decimal),  _
                    ByVal Auszifferung As String,  _
                    ByVal Memo As String,  _
                    ByVal Referenz As String,  _
                    ByVal IstAnzahlung As Short,  _
                    ByVal Steuercode As Global.System.Nullable(Of Short),  _
                    ByVal Zession As Short,  _
                    ByVal ZessionDatum As Global.System.Nullable(Of Date),  _
                    ByVal Zessionar As String,  _
                    ByVal Azv As String,  _
                    ByVal VStVerguetung As String,  _
                    ByVal MandatsNummer As String,  _
                    ByVal Original_Tan As Integer,  _
                    ByVal Original_OpNr As String,  _
                    ByVal Original_Mandant As Short,  _
                    ByVal Original_Timestamp() As Byte) As Integer
            Return Me.Update(Original_Tan, Original_OpNr, Original_Mandant, OpDatum, Faelligkeit, SkontoFaelligkeit1, SkontoFaelligkeit2, Zahlungskond, Inkassoart, Nettobedingung, Skontobedingung1, Skontobedingung2, Skontoprozent1, Skontoprozent2, KKGesellschaft, KKNummer, KKGueltigkeit, KKInhaber, KKGenehmigung, Mahnstufe, Vertreter, Provision, Betrag, Skonto, Auszifferung, Memo, Referenz, IstAnzahlung, Steuercode, Zession, ZessionDatum, Zessionar, Azv, VStVerguetung, MandatsNummer, Original_Tan, Original_OpNr, Original_Mandant, Original_Timestamp)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class KHKBuchungByOpTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "KHKBuchungByOp"
            tableMapping.ColumnMappings.Add("Tan", "Tan")
            tableMapping.ColumnMappings.Add("Mandant", "Mandant")
            tableMapping.ColumnMappings.Add("Journal", "Journal")
            tableMapping.ColumnMappings.Add("Periode", "Periode")
            tableMapping.ColumnMappings.Add("Buchungsdatum", "Buchungsdatum")
            tableMapping.ColumnMappings.Add("KtoSoll", "KtoSoll")
            tableMapping.ColumnMappings.Add("KtoSollTyp", "KtoSollTyp")
            tableMapping.ColumnMappings.Add("KtoSollSammelkto", "KtoSollSammelkto")
            tableMapping.ColumnMappings.Add("KtoHaben", "KtoHaben")
            tableMapping.ColumnMappings.Add("KtoHabentyp", "KtoHabentyp")
            tableMapping.ColumnMappings.Add("KtoHabenSammelkto", "KtoHabenSammelkto")
            tableMapping.ColumnMappings.Add("Anlagenbuchung", "Anlagenbuchung")
            tableMapping.ColumnMappings.Add("Belegdatum", "Belegdatum")
            tableMapping.ColumnMappings.Add("Belegnummer", "Belegnummer")
            tableMapping.ColumnMappings.Add("Buchungstext", "Buchungstext")
            tableMapping.ColumnMappings.Add("Buchungsmemo", "Buchungsmemo")
            tableMapping.ColumnMappings.Add("Buchungsbetrag", "Buchungsbetrag")
            tableMapping.ColumnMappings.Add("OpNr", "OpNr")
            tableMapping.ColumnMappings.Add("OpDatum", "OpDatum")
            tableMapping.ColumnMappings.Add("Faelligkeit", "Faelligkeit")
            tableMapping.ColumnMappings.Add("Zahlungskond", "Zahlungskond")
            tableMapping.ColumnMappings.Add("Mahnstufe", "Mahnstufe")
            tableMapping.ColumnMappings.Add("Betrag", "Betrag")
            tableMapping.ColumnMappings.Add("Steuercode", "Steuercode")
            tableMapping.ColumnMappings.Add("Skonto", "Skonto")
            tableMapping.ColumnMappings.Add("Memo", "Memo")
            tableMapping.ColumnMappings.Add("Buchungswaehrung", "Buchungswaehrung")
            tableMapping.ColumnMappings.Add("Eigenwaehrungsbetrag", "Eigenwaehrungsbetrag")
            tableMapping.ColumnMappings.Add("Sitzung", "Sitzung")
            tableMapping.ColumnMappings.Add("Benutzer", "Benutzer")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("Steuerart", "Steuerart")
            tableMapping.ColumnMappings.Add("Steuerberechnung", "Steuerberechnung")
            tableMapping.ColumnMappings.Add("Steuersatz", "Steuersatz")
            tableMapping.ColumnMappings.Add("Steuerbetrag", "Steuerbetrag")
            tableMapping.ColumnMappings.Add("Buchungsschluessel", "Buchungsschluessel")
            tableMapping.ColumnMappings.Add("Adresse", "Adresse")
            tableMapping.ColumnMappings.Add("Periodik", "Periodik")
            tableMapping.ColumnMappings.Add("Timestamp", "Timestamp")
            tableMapping.ColumnMappings.Add("Belegart", "Belegart")
            tableMapping.ColumnMappings.Add("GSMemo", "GSMemo")
            tableMapping.ColumnMappings.Add("JournalAlt", "JournalAlt")
            tableMapping.ColumnMappings.Add("EULand", "EULand")
            tableMapping.ColumnMappings.Add("EUUStID", "EUUStID")
            tableMapping.ColumnMappings.Add("EUDreiecksgeschaeft", "EUDreiecksgeschaeft")
            tableMapping.ColumnMappings.Add("Aenderungsdatum", "Aenderungsdatum")
            tableMapping.ColumnMappings.Add("GSSchluessel", "GSSchluessel")
            tableMapping.ColumnMappings.Add("Abschluss", "Abschluss")
            tableMapping.ColumnMappings.Add("SMKontoart", "SMKontoart")
            tableMapping.ColumnMappings.Add("Steuernummer", "Steuernummer")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.HPCReweSKR04ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        KHKBuchungserfassung.Tan, KHKBuchungserfassung.Mandant, KHKBuchungs"& _ 
                "erfassung.Journal, KHKBuchungserfassung.Periode, KHKBuchungserfassung.Buchungsda"& _ 
                "tum, KHKBuchungserfassung.KtoSoll, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassu"& _ 
                "ng.KtoSollTyp, KHKBuchungserfassung.KtoSollSammelkto, KHKBuchungserfassung.KtoHa"& _ 
                "ben, KHKBuchungserfassung.KtoHabentyp, KHKBuchungserfassung.KtoHabenSammelkto, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Anlagenbuchung, KHKBuchungserfass"& _ 
                "ung.Belegdatum, KHKBuchungserfassung.Belegnummer, KHKBuchungserfassung.Buchungst"& _ 
                "ext, KHKBuchungserfassung.Buchungsmemo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungser"& _ 
                "fassung.Buchungsbetrag, KHKBuchungserfassungOp.OpNr, KHKBuchungserfassungOp.OpDa"& _ 
                "tum, KHKBuchungserfassungOp.Faelligkeit, KHKBuchungserfassungOp.Zahlungskond, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         KHKBuchungserfassungOp.Mahnstufe, KHKBuchungserfassungO"& _ 
                "p.Betrag, KHKBuchungserfassungOp.Skonto, KHKBuchungserfassungOp.Memo, KHKBuchung"& _ 
                "serfassung.Buchungswaehrung, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Eig"& _ 
                "enwaehrungsbetrag, KHKBuchungserfassung.Sitzung, KHKBuchungserfassung.Benutzer, "& _ 
                "KHKBuchungserfassung.Status, KHKBuchungserfassung.Steuerart, KHKBuchungserfassun"& _ 
                "g.Steuercode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Steuerberechnung, "& _ 
                "KHKBuchungserfassung.Steuersatz, KHKBuchungserfassung.Steuerbetrag, KHKBuchungse"& _ 
                "rfassung.Buchungsschluessel, KHKBuchungserfassung.Adresse, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      KHKBuchungserfassung.Periodik, KHKBuchungserfassung.Timestamp, KHKBuchungs"& _ 
                "erfassung.Belegart, KHKBuchungserfassung.GSMemo, KHKBuchungserfassung.JournalAlt"& _ 
                ", KHKBuchungserfassung.EULand, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.E"& _ 
                "UUStID, KHKBuchungserfassung.EUDreiecksgeschaeft, KHKBuchungserfassung.Aenderung"& _ 
                "sdatum, KHKBuchungserfassung.GSSchluessel, KHKBuchungserfassung.Abschluss, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      KHKBuchungserfassung.SMKontoart, KHKBuchungserfassung.Steu"& _ 
                "ernummer"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            KHKBuchungserfassung INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    KHKBuchungserfassungOp ON KHKBuchungserfassungOp.Tan = KHKBuchungserfassung."& _ 
                "Tan AND KHKBuchungserfassung.Mandant = KHKBuchungserfassungOp.Mandant"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    (KHKBuchungserfassungOp.OpNr = '52000460')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY KHKBuchungserfassung.Bu"& _ 
                "chungsdatum DESC, KHKBuchungserfassung.Buchungsbetrag DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        KHKBuchungserfassung.Tan, KHKBuchungserfassung.Mandant, KHKBuchungs"& _ 
                "erfassung.Journal, KHKBuchungserfassung.Periode, KHKBuchungserfassung.Buchungsda"& _ 
                "tum, KHKBuchungserfassung.KtoSoll, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassu"& _ 
                "ng.KtoSollTyp, KHKBuchungserfassung.KtoSollSammelkto, KHKBuchungserfassung.KtoHa"& _ 
                "ben, KHKBuchungserfassung.KtoHabentyp, KHKBuchungserfassung.KtoHabenSammelkto, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Anlagenbuchung, KHKBuchungserfass"& _ 
                "ung.Belegdatum, KHKBuchungserfassung.Belegnummer, KHKBuchungserfassung.Buchungst"& _ 
                "ext, KHKBuchungserfassung.Buchungsmemo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungser"& _ 
                "fassung.Buchungsbetrag, KHKBuchungserfassungOp.OpNr, KHKBuchungserfassungOp.OpDa"& _ 
                "tum, KHKBuchungserfassungOp.Faelligkeit, KHKBuchungserfassungOp.Zahlungskond, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         KHKBuchungserfassungOp.Mahnstufe, KHKBuchungserfassungO"& _ 
                "p.Betrag, KHKBuchungserfassungOp.Skonto, KHKBuchungserfassungOp.Memo, KHKBuchung"& _ 
                "serfassung.Buchungswaehrung, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Eig"& _ 
                "enwaehrungsbetrag, KHKBuchungserfassung.Sitzung, KHKBuchungserfassung.Benutzer, "& _ 
                "KHKBuchungserfassung.Status, KHKBuchungserfassung.Steuerart, KHKBuchungserfassun"& _ 
                "g.Steuercode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Steuerberechnung, "& _ 
                "KHKBuchungserfassung.Steuersatz, KHKBuchungserfassung.Steuerbetrag, KHKBuchungse"& _ 
                "rfassung.Buchungsschluessel, KHKBuchungserfassung.Adresse, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      KHKBuchungserfassung.Periodik, KHKBuchungserfassung.Timestamp, KHKBuchungs"& _ 
                "erfassung.Belegart, KHKBuchungserfassung.GSMemo, KHKBuchungserfassung.JournalAlt"& _ 
                ", KHKBuchungserfassung.EULand, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.E"& _ 
                "UUStID, KHKBuchungserfassung.EUDreiecksgeschaeft, KHKBuchungserfassung.Aenderung"& _ 
                "sdatum, KHKBuchungserfassung.GSSchluessel, KHKBuchungserfassung.Abschluss, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      KHKBuchungserfassung.SMKontoart, KHKBuchungserfassung.Steu"& _ 
                "ernummer"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            KHKBuchungserfassung INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    KHKBuchungserfassungOp ON KHKBuchungserfassungOp.Tan = KHKBuchungserfassung."& _ 
                "Tan AND KHKBuchungserfassung.Mandant = KHKBuchungserfassungOp.Mandant"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    (KHKBuchungserfassung.Tan > @Tan) AND (KHKBuchungserfassung.Mandant = @Manda"& _ 
                "nt) AND (KHKBuchungserfassung.Periode >= 2020001)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY KHKBuchungserfassung"& _ 
                ".Mandant, KHKBuchungserfassung.Tan"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tan", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Tan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandant", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Mandant", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        KHKBuchungserfassung.Tan, KHKBuchungserfassung.Mandant, KHKBuchungs"& _ 
                "erfassung.Journal, KHKBuchungserfassung.Periode, KHKBuchungserfassung.Buchungsda"& _ 
                "tum, KHKBuchungserfassung.KtoSoll, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassu"& _ 
                "ng.KtoSollTyp, KHKBuchungserfassung.KtoSollSammelkto, KHKBuchungserfassung.KtoHa"& _ 
                "ben, KHKBuchungserfassung.KtoHabentyp, KHKBuchungserfassung.KtoHabenSammelkto, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Anlagenbuchung, KHKBuchungserfass"& _ 
                "ung.Belegdatum, KHKBuchungserfassung.Belegnummer, KHKBuchungserfassung.Buchungst"& _ 
                "ext, KHKBuchungserfassung.Buchungsmemo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungser"& _ 
                "fassung.Buchungsbetrag, KHKBuchungserfassungOp.OpNr, KHKBuchungserfassungOp.OpDa"& _ 
                "tum, KHKBuchungserfassungOp.Faelligkeit, KHKBuchungserfassungOp.Zahlungskond, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         KHKBuchungserfassungOp.Mahnstufe, KHKBuchungserfassungO"& _ 
                "p.Betrag, KHKBuchungserfassungOp.Skonto, KHKBuchungserfassungOp.Memo, KHKBuchung"& _ 
                "serfassung.Buchungswaehrung, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Eig"& _ 
                "enwaehrungsbetrag, KHKBuchungserfassung.Sitzung, KHKBuchungserfassung.Benutzer, "& _ 
                "KHKBuchungserfassung.Status, KHKBuchungserfassung.Steuerart, KHKBuchungserfassun"& _ 
                "g.Steuercode, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.Steuerberechnung, "& _ 
                "KHKBuchungserfassung.Steuersatz, KHKBuchungserfassung.Steuerbetrag, KHKBuchungse"& _ 
                "rfassung.Buchungsschluessel, KHKBuchungserfassung.Adresse, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      KHKBuchungserfassung.Periodik, KHKBuchungserfassung.Timestamp, KHKBuchungs"& _ 
                "erfassung.Belegart, KHKBuchungserfassung.GSMemo, KHKBuchungserfassung.JournalAlt"& _ 
                ", KHKBuchungserfassung.EULand, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassung.E"& _ 
                "UUStID, KHKBuchungserfassung.EUDreiecksgeschaeft, KHKBuchungserfassung.Aenderung"& _ 
                "sdatum, KHKBuchungserfassung.GSSchluessel, KHKBuchungserfassung.Abschluss, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      KHKBuchungserfassung.SMKontoart, KHKBuchungserfassung.Steu"& _ 
                "ernummer, KHKBuchungserfassungOp.Timestamp AS OP_TimeStamp"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            KHKB"& _ 
                "uchungserfassung INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KHKBuchungserfassungOp ON "& _ 
                "KHKBuchungserfassungOp.Tan = KHKBuchungserfassung.Tan AND KHKBuchungserfassung.M"& _ 
                "andant = KHKBuchungserfassungOp.Mandant"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (KHKBuchungserfassungOp.Op"& _ 
                "Nr = @OpNr)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY KHKBuchungserfassung.Buchungsdatum DESC, KHKBuchungserfass"& _ 
                "ung.Buchungsbetrag DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OpNr", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "OpNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsHPCReweSKR04.KHKBuchungByOpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable = New dsHPCReweSKR04.KHKBuchungByOpDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByMdtAbTan(ByVal dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable, ByVal Tan As Integer, ByVal Mandant As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tan,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mandant,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByMdtAbTan(ByVal Tan As Integer, ByVal Mandant As Short) As dsHPCReweSKR04.KHKBuchungByOpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tan,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mandant,Short)
            Dim dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable = New dsHPCReweSKR04.KHKBuchungByOpDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByOpNr(ByVal dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable, ByVal OpNr As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OpNr")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OpNr,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOpNr(ByVal OpNr As String) As dsHPCReweSKR04.KHKBuchungByOpDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (OpNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OpNr")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OpNr,String)
            End If
            Dim dataTable As dsHPCReweSKR04.KHKBuchungByOpDataTable = New dsHPCReweSKR04.KHKBuchungByOpDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _kHKBuchungserfassungTableAdapter As KHKBuchungserfassungTableAdapter
        
        Private _kHKBuchungserfassungOpTableAdapter As KHKBuchungserfassungOpTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property KHKBuchungserfassungTableAdapter() As KHKBuchungserfassungTableAdapter
            Get
                Return Me._kHKBuchungserfassungTableAdapter
            End Get
            Set
                Me._kHKBuchungserfassungTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property KHKBuchungserfassungOpTableAdapter() As KHKBuchungserfassungOpTableAdapter
            Get
                Return Me._kHKBuchungserfassungOpTableAdapter
            End Get
            Set
                Me._kHKBuchungserfassungOpTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._kHKBuchungserfassungTableAdapter.Connection) Is Nothing)) Then
                    Return Me._kHKBuchungserfassungTableAdapter.Connection
                End If
                If ((Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._kHKBuchungserfassungOpTableAdapter.Connection) Is Nothing)) Then
                    Return Me._kHKBuchungserfassungOpTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsHPCReweSKR04, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassungOp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungOpTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsHPCReweSKR04, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassungOp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungOpTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsHPCReweSKR04, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassungOp.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungOpTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.KHKBuchungserfassung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._kHKBuchungserfassungTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsHPCReweSKR04) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._kHKBuchungserfassungTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            If ((Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._kHKBuchungserfassungOpTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._kHKBuchungserfassungTableAdapter, Me._kHKBuchungserfassungTableAdapter.Connection)
                    Me._kHKBuchungserfassungTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._kHKBuchungserfassungTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._kHKBuchungserfassungTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._kHKBuchungserfassungTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._kHKBuchungserfassungTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._kHKBuchungserfassungOpTableAdapter, Me._kHKBuchungserfassungOpTableAdapter.Connection)
                    Me._kHKBuchungserfassungOpTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._kHKBuchungserfassungOpTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._kHKBuchungserfassungOpTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._kHKBuchungserfassungOpTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._kHKBuchungserfassungOpTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._kHKBuchungserfassungTableAdapter) Is Nothing) Then
                    Me._kHKBuchungserfassungTableAdapter.Connection = CType(revertConnections(Me._kHKBuchungserfassungTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._kHKBuchungserfassungTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._kHKBuchungserfassungOpTableAdapter) Is Nothing) Then
                    Me._kHKBuchungserfassungOpTableAdapter.Connection = CType(revertConnections(Me._kHKBuchungserfassungOpTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._kHKBuchungserfassungOpTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
