'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCRM"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCRM
    Inherits Global.System.Data.DataSet
    
    Private tableDebitor As DebitorDataTable
    
    Private tableProjekt As ProjektDataTable
    
    Private tablePeriodenabrechnung As PeriodenabrechnungDataTable
    
    Private tableVW_TBL_CRM_Firma_IMP As VW_TBL_CRM_Firma_IMPDataTable
    
    Private tableVW_TBL_CRM_Firma_Debitor_LNK_IMP As VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Debitor")) Is Nothing) Then
                MyBase.Tables.Add(New DebitorDataTable(ds.Tables("Debitor")))
            End If
            If (Not (ds.Tables("Projekt")) Is Nothing) Then
                MyBase.Tables.Add(New ProjektDataTable(ds.Tables("Projekt")))
            End If
            If (Not (ds.Tables("Periodenabrechnung")) Is Nothing) Then
                MyBase.Tables.Add(New PeriodenabrechnungDataTable(ds.Tables("Periodenabrechnung")))
            End If
            If (Not (ds.Tables("VW_TBL_CRM_Firma_IMP")) Is Nothing) Then
                MyBase.Tables.Add(New VW_TBL_CRM_Firma_IMPDataTable(ds.Tables("VW_TBL_CRM_Firma_IMP")))
            End If
            If (Not (ds.Tables("VW_TBL_CRM_Firma_Debitor_LNK_IMP")) Is Nothing) Then
                MyBase.Tables.Add(New VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable(ds.Tables("VW_TBL_CRM_Firma_Debitor_LNK_IMP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Debitor() As DebitorDataTable
        Get
            Return Me.tableDebitor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Projekt() As ProjektDataTable
        Get
            Return Me.tableProjekt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Periodenabrechnung() As PeriodenabrechnungDataTable
        Get
            Return Me.tablePeriodenabrechnung
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_TBL_CRM_Firma_IMP() As VW_TBL_CRM_Firma_IMPDataTable
        Get
            Return Me.tableVW_TBL_CRM_Firma_IMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_TBL_CRM_Firma_Debitor_LNK_IMP() As VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable
        Get
            Return Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCRM = CType(MyBase.Clone,dsCRM)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Debitor")) Is Nothing) Then
                MyBase.Tables.Add(New DebitorDataTable(ds.Tables("Debitor")))
            End If
            If (Not (ds.Tables("Projekt")) Is Nothing) Then
                MyBase.Tables.Add(New ProjektDataTable(ds.Tables("Projekt")))
            End If
            If (Not (ds.Tables("Periodenabrechnung")) Is Nothing) Then
                MyBase.Tables.Add(New PeriodenabrechnungDataTable(ds.Tables("Periodenabrechnung")))
            End If
            If (Not (ds.Tables("VW_TBL_CRM_Firma_IMP")) Is Nothing) Then
                MyBase.Tables.Add(New VW_TBL_CRM_Firma_IMPDataTable(ds.Tables("VW_TBL_CRM_Firma_IMP")))
            End If
            If (Not (ds.Tables("VW_TBL_CRM_Firma_Debitor_LNK_IMP")) Is Nothing) Then
                MyBase.Tables.Add(New VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable(ds.Tables("VW_TBL_CRM_Firma_Debitor_LNK_IMP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDebitor = CType(MyBase.Tables("Debitor"),DebitorDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDebitor) Is Nothing) Then
                Me.tableDebitor.InitVars
            End If
        End If
        Me.tableProjekt = CType(MyBase.Tables("Projekt"),ProjektDataTable)
        If (initTable = true) Then
            If (Not (Me.tableProjekt) Is Nothing) Then
                Me.tableProjekt.InitVars
            End If
        End If
        Me.tablePeriodenabrechnung = CType(MyBase.Tables("Periodenabrechnung"),PeriodenabrechnungDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePeriodenabrechnung) Is Nothing) Then
                Me.tablePeriodenabrechnung.InitVars
            End If
        End If
        Me.tableVW_TBL_CRM_Firma_IMP = CType(MyBase.Tables("VW_TBL_CRM_Firma_IMP"),VW_TBL_CRM_Firma_IMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_TBL_CRM_Firma_IMP) Is Nothing) Then
                Me.tableVW_TBL_CRM_Firma_IMP.InitVars
            End If
        End If
        Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP = CType(MyBase.Tables("VW_TBL_CRM_Firma_Debitor_LNK_IMP"),VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP) Is Nothing) Then
                Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCRM"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCRM.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDebitor = New DebitorDataTable()
        MyBase.Tables.Add(Me.tableDebitor)
        Me.tableProjekt = New ProjektDataTable()
        MyBase.Tables.Add(Me.tableProjekt)
        Me.tablePeriodenabrechnung = New PeriodenabrechnungDataTable()
        MyBase.Tables.Add(Me.tablePeriodenabrechnung)
        Me.tableVW_TBL_CRM_Firma_IMP = New VW_TBL_CRM_Firma_IMPDataTable()
        MyBase.Tables.Add(Me.tableVW_TBL_CRM_Firma_IMP)
        Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP = New VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable()
        MyBase.Tables.Add(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDebitor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeProjekt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePeriodenabrechnung() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_TBL_CRM_Firma_IMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_TBL_CRM_Firma_Debitor_LNK_IMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCRM = New dsCRM()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DebitorRowChangeEventHandler(ByVal sender As Object, ByVal e As DebitorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ProjektRowChangeEventHandler(ByVal sender As Object, ByVal e As ProjektRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PeriodenabrechnungRowChangeEventHandler(ByVal sender As Object, ByVal e As PeriodenabrechnungRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_TBL_CRM_Firma_IMPRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_TBL_CRM_Firma_IMPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DebitorDataTable
        Inherits Global.System.Data.TypedTableBase(Of DebitorRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnFirmenID As Global.System.Data.DataColumn
        
        Private columnDebitornummer As Global.System.Data.DataColumn
        
        Private columnFirmenname1 As Global.System.Data.DataColumn
        
        Private columnFirmenname2 As Global.System.Data.DataColumn
        
        Private columnFirmenname3 As Global.System.Data.DataColumn
        
        Private columnAnschrift As Global.System.Data.DataColumn
        
        Private columnPLZ As Global.System.Data.DataColumn
        
        Private columnOrt As Global.System.Data.DataColumn
        
        Private columnLand As Global.System.Data.DataColumn
        
        Private columnTelefon As Global.System.Data.DataColumn
        
        Private columnFax As Global.System.Data.DataColumn
        
        Private columnHomepage As Global.System.Data.DataColumn
        
        Private columnSprache As Global.System.Data.DataColumn
        
        Private columnEMail As Global.System.Data.DataColumn
        
        Private columnBesitzer As Global.System.Data.DataColumn
        
        Private columnZielsystem As Global.System.Data.DataColumn
        
        Private columnKostenstelle As Global.System.Data.DataColumn
        
        Private columnKuerzelKontakt As Global.System.Data.DataColumn
        
        Private columnStateCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Debitor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirmenIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmenID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DebitornummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDebitornummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Firmenname1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmenname1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Firmenname2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmenname2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Firmenname3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmenname3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnschriftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnschrift
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelefonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HomepageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHomepage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpracheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSprache
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BesitzerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBesitzer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZielsystemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZielsystem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KostenstelleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKostenstelle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KuerzelKontaktColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKuerzelKontakt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StateCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStateCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DebitorRow
            Get
                Return CType(Me.Rows(index),DebitorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DebitorRowChanging As DebitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DebitorRowChanged As DebitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DebitorRowDeleting As DebitorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DebitorRowDeleted As DebitorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDebitorRow(ByVal row As DebitorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDebitorRow( _
                    ByVal FirmenID As String,  _
                    ByVal Debitornummer As String,  _
                    ByVal Firmenname1 As String,  _
                    ByVal Firmenname2 As String,  _
                    ByVal Firmenname3 As String,  _
                    ByVal Anschrift As String,  _
                    ByVal PLZ As String,  _
                    ByVal Ort As String,  _
                    ByVal Land As String,  _
                    ByVal Telefon As String,  _
                    ByVal Fax As String,  _
                    ByVal Homepage As String,  _
                    ByVal Sprache As String,  _
                    ByVal EMail As String,  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Integer,  _
                    ByVal Kostenstelle As String,  _
                    ByVal KuerzelKontakt As String,  _
                    ByVal StateCode As Integer) As DebitorRow
            Dim rowDebitorRow As DebitorRow = CType(Me.NewRow,DebitorRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenname3, Anschrift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitzer, Zielsystem, Kostenstelle, KuerzelKontakt, StateCode}
            rowDebitorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDebitorRow)
            Return rowDebitorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As DebitorRow
            Return CType(Me.Rows.Find(New Object() {Id}),DebitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DebitorDataTable = CType(MyBase.Clone,DebitorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DebitorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnFirmenID = MyBase.Columns("FirmenID")
            Me.columnDebitornummer = MyBase.Columns("Debitornummer")
            Me.columnFirmenname1 = MyBase.Columns("Firmenname1")
            Me.columnFirmenname2 = MyBase.Columns("Firmenname2")
            Me.columnFirmenname3 = MyBase.Columns("Firmenname3")
            Me.columnAnschrift = MyBase.Columns("Anschrift")
            Me.columnPLZ = MyBase.Columns("PLZ")
            Me.columnOrt = MyBase.Columns("Ort")
            Me.columnLand = MyBase.Columns("Land")
            Me.columnTelefon = MyBase.Columns("Telefon")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnHomepage = MyBase.Columns("Homepage")
            Me.columnSprache = MyBase.Columns("Sprache")
            Me.columnEMail = MyBase.Columns("EMail")
            Me.columnBesitzer = MyBase.Columns("Besitzer")
            Me.columnZielsystem = MyBase.Columns("Zielsystem")
            Me.columnKostenstelle = MyBase.Columns("Kostenstelle")
            Me.columnKuerzelKontakt = MyBase.Columns("KuerzelKontakt")
            Me.columnStateCode = MyBase.Columns("StateCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnFirmenID = New Global.System.Data.DataColumn("FirmenID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmenID)
            Me.columnDebitornummer = New Global.System.Data.DataColumn("Debitornummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDebitornummer)
            Me.columnFirmenname1 = New Global.System.Data.DataColumn("Firmenname1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmenname1)
            Me.columnFirmenname2 = New Global.System.Data.DataColumn("Firmenname2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmenname2)
            Me.columnFirmenname3 = New Global.System.Data.DataColumn("Firmenname3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmenname3)
            Me.columnAnschrift = New Global.System.Data.DataColumn("Anschrift", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnschrift)
            Me.columnPLZ = New Global.System.Data.DataColumn("PLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLZ)
            Me.columnOrt = New Global.System.Data.DataColumn("Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrt)
            Me.columnLand = New Global.System.Data.DataColumn("Land", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLand)
            Me.columnTelefon = New Global.System.Data.DataColumn("Telefon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefon)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnHomepage = New Global.System.Data.DataColumn("Homepage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHomepage)
            Me.columnSprache = New Global.System.Data.DataColumn("Sprache", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSprache)
            Me.columnEMail = New Global.System.Data.DataColumn("EMail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMail)
            Me.columnBesitzer = New Global.System.Data.DataColumn("Besitzer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBesitzer)
            Me.columnZielsystem = New Global.System.Data.DataColumn("Zielsystem", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZielsystem)
            Me.columnKostenstelle = New Global.System.Data.DataColumn("Kostenstelle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKostenstelle)
            Me.columnKuerzelKontakt = New Global.System.Data.DataColumn("KuerzelKontakt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKuerzelKontakt)
            Me.columnStateCode = New Global.System.Data.DataColumn("StateCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStateCode)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnFirmenID.MaxLength = 40
            Me.columnDebitornummer.MaxLength = 20
            Me.columnFirmenname1.AllowDBNull = false
            Me.columnFirmenname1.MaxLength = 160
            Me.columnFirmenname2.MaxLength = 160
            Me.columnFirmenname3.MaxLength = 160
            Me.columnAnschrift.MaxLength = 250
            Me.columnPLZ.MaxLength = 20
            Me.columnOrt.MaxLength = 80
            Me.columnLand.MaxLength = 80
            Me.columnTelefon.MaxLength = 50
            Me.columnFax.MaxLength = 50
            Me.columnHomepage.MaxLength = 200
            Me.columnSprache.MaxLength = 20
            Me.columnEMail.MaxLength = 100
            Me.columnBesitzer.MaxLength = 20
            Me.columnKostenstelle.MaxLength = 20
            Me.columnKuerzelKontakt.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDebitorRow() As DebitorRow
            Return CType(Me.NewRow,DebitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DebitorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DebitorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DebitorRowChangedEvent) Is Nothing) Then
                RaiseEvent DebitorRowChanged(Me, New DebitorRowChangeEvent(CType(e.Row,DebitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DebitorRowChangingEvent) Is Nothing) Then
                RaiseEvent DebitorRowChanging(Me, New DebitorRowChangeEvent(CType(e.Row,DebitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DebitorRowDeletedEvent) Is Nothing) Then
                RaiseEvent DebitorRowDeleted(Me, New DebitorRowChangeEvent(CType(e.Row,DebitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DebitorRowDeletingEvent) Is Nothing) Then
                RaiseEvent DebitorRowDeleting(Me, New DebitorRowChangeEvent(CType(e.Row,DebitorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDebitorRow(ByVal row As DebitorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCRM = New dsCRM()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DebitorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ProjektDataTable
        Inherits Global.System.Data.TypedTableBase(Of ProjektRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnProjektnummer As Global.System.Data.DataColumn
        
        Private columnProjektnummer_int As Global.System.Data.DataColumn
        
        Private columnAuftragsvolumen As Global.System.Data.DataColumn
        
        Private columnAuftragsvolumenGJ As Global.System.Data.DataColumn
        
        Private columnBezeichnung As Global.System.Data.DataColumn
        
        Private columnGeschaeftsjahr As Global.System.Data.DataColumn
        
        Private columnKostenstelle As Global.System.Data.DataColumn
        
        Private columnFirmenID As Global.System.Data.DataColumn
        
        Private columnFirmennummer As Global.System.Data.DataColumn
        
        Private columnLetzteabrechnungsperiode As Global.System.Data.DataColumn
        
        Private columnOffeneLeistungen As Global.System.Data.DataColumn
        
        Private columnPotRestumsatz As Global.System.Data.DataColumn
        
        Private columnProjektleiter As Global.System.Data.DataColumn
        
        Private columnProjektstatus As Global.System.Data.DataColumn
        
        Private columnUmsatzGesamt As Global.System.Data.DataColumn
        
        Private columnUmsatzGJ As Global.System.Data.DataColumn
        
        Private columnUmsatzPeriode As Global.System.Data.DataColumn
        
        Private columnBesitzer As Global.System.Data.DataColumn
        
        Private columnZielsystem As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Projekt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjektnummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjektnummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Projektnummer_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjektnummer_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AuftragsvolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuftragsvolumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AuftragsvolumenGJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuftragsvolumenGJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BezeichnungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBezeichnung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeschaeftsjahrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeschaeftsjahr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KostenstelleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKostenstelle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirmenIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmenID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirmennummerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirmennummer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LetzteabrechnungsperiodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLetzteabrechnungsperiode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OffeneLeistungenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOffeneLeistungen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PotRestumsatzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPotRestumsatz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjektleiterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjektleiter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProjektstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjektstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UmsatzGesamtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUmsatzGesamt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UmsatzGJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUmsatzGJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UmsatzPeriodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUmsatzPeriode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BesitzerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBesitzer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZielsystemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZielsystem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ProjektRow
            Get
                Return CType(Me.Rows(index),ProjektRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProjektRowChanging As ProjektRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProjektRowChanged As ProjektRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProjektRowDeleting As ProjektRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProjektRowDeleted As ProjektRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddProjektRow(ByVal row As ProjektRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddProjektRow( _
                    ByVal Projektnummer As String,  _
                    ByVal Projektnummer_int As Integer,  _
                    ByVal Auftragsvolumen As Decimal,  _
                    ByVal AuftragsvolumenGJ As Decimal,  _
                    ByVal Bezeichnung As String,  _
                    ByVal Geschaeftsjahr As Integer,  _
                    ByVal Kostenstelle As String,  _
                    ByVal FirmenID As String,  _
                    ByVal Firmennummer As Integer,  _
                    ByVal Letzteabrechnungsperiode As String,  _
                    ByVal OffeneLeistungen As Decimal,  _
                    ByVal PotRestumsatz As Decimal,  _
                    ByVal Projektleiter As String,  _
                    ByVal Projektstatus As Integer,  _
                    ByVal UmsatzGesamt As Decimal,  _
                    ByVal UmsatzGJ As Decimal,  _
                    ByVal UmsatzPeriode As Decimal,  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Integer) As ProjektRow
            Dim rowProjektRow As ProjektRow = CType(Me.NewRow,ProjektRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Projektnummer, Projektnummer_int, Auftragsvolumen, AuftragsvolumenGJ, Bezeichnung, Geschaeftsjahr, Kostenstelle, FirmenID, Firmennummer, Letzteabrechnungsperiode, OffeneLeistungen, PotRestumsatz, Projektleiter, Projektstatus, UmsatzGesamt, UmsatzGJ, UmsatzPeriode, Besitzer, Zielsystem}
            rowProjektRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProjektRow)
            Return rowProjektRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As ProjektRow
            Return CType(Me.Rows.Find(New Object() {Id}),ProjektRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ProjektDataTable = CType(MyBase.Clone,ProjektDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ProjektDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnProjektnummer = MyBase.Columns("Projektnummer")
            Me.columnProjektnummer_int = MyBase.Columns("Projektnummer_int")
            Me.columnAuftragsvolumen = MyBase.Columns("Auftragsvolumen")
            Me.columnAuftragsvolumenGJ = MyBase.Columns("AuftragsvolumenGJ")
            Me.columnBezeichnung = MyBase.Columns("Bezeichnung")
            Me.columnGeschaeftsjahr = MyBase.Columns("Geschaeftsjahr")
            Me.columnKostenstelle = MyBase.Columns("Kostenstelle")
            Me.columnFirmenID = MyBase.Columns("FirmenID")
            Me.columnFirmennummer = MyBase.Columns("Firmennummer")
            Me.columnLetzteabrechnungsperiode = MyBase.Columns("Letzteabrechnungsperiode")
            Me.columnOffeneLeistungen = MyBase.Columns("OffeneLeistungen")
            Me.columnPotRestumsatz = MyBase.Columns("PotRestumsatz")
            Me.columnProjektleiter = MyBase.Columns("Projektleiter")
            Me.columnProjektstatus = MyBase.Columns("Projektstatus")
            Me.columnUmsatzGesamt = MyBase.Columns("UmsatzGesamt")
            Me.columnUmsatzGJ = MyBase.Columns("UmsatzGJ")
            Me.columnUmsatzPeriode = MyBase.Columns("UmsatzPeriode")
            Me.columnBesitzer = MyBase.Columns("Besitzer")
            Me.columnZielsystem = MyBase.Columns("Zielsystem")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnProjektnummer = New Global.System.Data.DataColumn("Projektnummer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjektnummer)
            Me.columnProjektnummer_int = New Global.System.Data.DataColumn("Projektnummer_int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjektnummer_int)
            Me.columnAuftragsvolumen = New Global.System.Data.DataColumn("Auftragsvolumen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuftragsvolumen)
            Me.columnAuftragsvolumenGJ = New Global.System.Data.DataColumn("AuftragsvolumenGJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuftragsvolumenGJ)
            Me.columnBezeichnung = New Global.System.Data.DataColumn("Bezeichnung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBezeichnung)
            Me.columnGeschaeftsjahr = New Global.System.Data.DataColumn("Geschaeftsjahr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeschaeftsjahr)
            Me.columnKostenstelle = New Global.System.Data.DataColumn("Kostenstelle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKostenstelle)
            Me.columnFirmenID = New Global.System.Data.DataColumn("FirmenID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmenID)
            Me.columnFirmennummer = New Global.System.Data.DataColumn("Firmennummer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirmennummer)
            Me.columnLetzteabrechnungsperiode = New Global.System.Data.DataColumn("Letzteabrechnungsperiode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLetzteabrechnungsperiode)
            Me.columnOffeneLeistungen = New Global.System.Data.DataColumn("OffeneLeistungen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOffeneLeistungen)
            Me.columnPotRestumsatz = New Global.System.Data.DataColumn("PotRestumsatz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPotRestumsatz)
            Me.columnProjektleiter = New Global.System.Data.DataColumn("Projektleiter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjektleiter)
            Me.columnProjektstatus = New Global.System.Data.DataColumn("Projektstatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjektstatus)
            Me.columnUmsatzGesamt = New Global.System.Data.DataColumn("UmsatzGesamt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUmsatzGesamt)
            Me.columnUmsatzGJ = New Global.System.Data.DataColumn("UmsatzGJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUmsatzGJ)
            Me.columnUmsatzPeriode = New Global.System.Data.DataColumn("UmsatzPeriode", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUmsatzPeriode)
            Me.columnBesitzer = New Global.System.Data.DataColumn("Besitzer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBesitzer)
            Me.columnZielsystem = New Global.System.Data.DataColumn("Zielsystem", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZielsystem)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnProjektnummer.MaxLength = 10
            Me.columnBezeichnung.AllowDBNull = false
            Me.columnBezeichnung.MaxLength = 300
            Me.columnKostenstelle.MaxLength = 50
            Me.columnFirmenID.MaxLength = 40
            Me.columnLetzteabrechnungsperiode.MaxLength = 7
            Me.columnProjektleiter.MaxLength = 100
            Me.columnProjektstatus.AllowDBNull = false
            Me.columnBesitzer.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewProjektRow() As ProjektRow
            Return CType(Me.NewRow,ProjektRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ProjektRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ProjektRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProjektRowChangedEvent) Is Nothing) Then
                RaiseEvent ProjektRowChanged(Me, New ProjektRowChangeEvent(CType(e.Row,ProjektRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProjektRowChangingEvent) Is Nothing) Then
                RaiseEvent ProjektRowChanging(Me, New ProjektRowChangeEvent(CType(e.Row,ProjektRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProjektRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProjektRowDeleted(Me, New ProjektRowChangeEvent(CType(e.Row,ProjektRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProjektRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProjektRowDeleting(Me, New ProjektRowChangeEvent(CType(e.Row,ProjektRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveProjektRow(ByVal row As ProjektRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCRM = New dsCRM()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ProjektDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PeriodenabrechnungDataTable
        Inherits Global.System.Data.TypedTableBase(Of PeriodenabrechnungRow)
        
        Private columnPERIODE As Global.System.Data.DataColumn
        
        Private columnPERIODE_ID As Global.System.Data.DataColumn
        
        Private columnPRJ_NUMMER As Global.System.Data.DataColumn
        
        Private columnKOSTENSTELLE As Global.System.Data.DataColumn
        
        Private columnHAUPT_KST As Global.System.Data.DataColumn
        
        Private columnSOLL_PERIODE_UMSATZ As Global.System.Data.DataColumn
        
        Private columnSOLL_PERIODE_VORLAGE As Global.System.Data.DataColumn
        
        Private columnSOLL_PERIODE_ILV As Global.System.Data.DataColumn
        
        Private columnSOLL_PERIODE_ILV_VERTRIEB As Global.System.Data.DataColumn
        
        Private columnSOLL_UMSATZ_GJ As Global.System.Data.DataColumn
        
        Private columnSOLL_UMSATZ As Global.System.Data.DataColumn
        
        Private columnSOLL_VORLAGE As Global.System.Data.DataColumn
        
        Private columnSOLL_ILV As Global.System.Data.DataColumn
        
        Private columnSOLL_ILV_VERTRIEB As Global.System.Data.DataColumn
        
        Private columnRG_PERIODE_ABSCHLAG As Global.System.Data.DataColumn
        
        Private columnRG_PERIODE As Global.System.Data.DataColumn
        
        Private columnRG_ILV_PERIODE As Global.System.Data.DataColumn
        
        Private columnRG_GESAMT_ABSCHLAG As Global.System.Data.DataColumn
        
        Private columnRG_GESAMT As Global.System.Data.DataColumn
        
        Private columnRG_ILV As Global.System.Data.DataColumn
        
        Private columnDATUM_LETZTELEISTUNG As Global.System.Data.DataColumn
        
        Private columnLSTG1_A_A As Global.System.Data.DataColumn
        
        Private columnLSTG1_A_V As Global.System.Data.DataColumn
        
        Private columnLSTG1_A_P As Global.System.Data.DataColumn
        
        Private columnLSTG1_ABG As Global.System.Data.DataColumn
        
        Private columnLSTG1_N_A As Global.System.Data.DataColumn
        
        Private columnLSTG1_N_V As Global.System.Data.DataColumn
        
        Private columnLSTG1_N_P As Global.System.Data.DataColumn
        
        Private columnLSTG1_NA As Global.System.Data.DataColumn
        
        Private columnLSTG1_H_A As Global.System.Data.DataColumn
        
        Private columnLSTG1_H_V As Global.System.Data.DataColumn
        
        Private columnLSTG1_H_P As Global.System.Data.DataColumn
        
        Private columnLSTG1_OFFEN As Global.System.Data.DataColumn
        
        Private columnLSTG1 As Global.System.Data.DataColumn
        
        Private columnLSTG2_A_A As Global.System.Data.DataColumn
        
        Private columnLSTG2_A_V As Global.System.Data.DataColumn
        
        Private columnLSTG2_A_P As Global.System.Data.DataColumn
        
        Private columnLSTG2_ABG As Global.System.Data.DataColumn
        
        Private columnLSTG2_N_A As Global.System.Data.DataColumn
        
        Private columnLSTG2_N_V As Global.System.Data.DataColumn
        
        Private columnLSTG2_N_P As Global.System.Data.DataColumn
        
        Private columnLSTG2_NA As Global.System.Data.DataColumn
        
        Private columnLSTG2_H_A As Global.System.Data.DataColumn
        
        Private columnLSTG2_H_V As Global.System.Data.DataColumn
        
        Private columnLSTG2_H_P As Global.System.Data.DataColumn
        
        Private columnLSTG2_OFFEN As Global.System.Data.DataColumn
        
        Private columnLSTG2 As Global.System.Data.DataColumn
        
        Private columnLSTG3_A_A As Global.System.Data.DataColumn
        
        Private columnLSTG3_A_V As Global.System.Data.DataColumn
        
        Private columnLSTG3_A_P As Global.System.Data.DataColumn
        
        Private columnLSTG3_ABG As Global.System.Data.DataColumn
        
        Private columnLSTG3_N_A As Global.System.Data.DataColumn
        
        Private columnLSTG3_N_V As Global.System.Data.DataColumn
        
        Private columnLSTG3_N_P As Global.System.Data.DataColumn
        
        Private columnLSTG3_NA As Global.System.Data.DataColumn
        
        Private columnLSTG3_H_A As Global.System.Data.DataColumn
        
        Private columnLSTG3_H_V As Global.System.Data.DataColumn
        
        Private columnLSTG3_H_P As Global.System.Data.DataColumn
        
        Private columnLSTG3_OFFEN As Global.System.Data.DataColumn
        
        Private columnLSTG3 As Global.System.Data.DataColumn
        
        Private columnLSTG4_A_A As Global.System.Data.DataColumn
        
        Private columnLSTG4_A_V As Global.System.Data.DataColumn
        
        Private columnLSTG4_A_P As Global.System.Data.DataColumn
        
        Private columnLSTG4_ABG As Global.System.Data.DataColumn
        
        Private columnLSTG4_N_A As Global.System.Data.DataColumn
        
        Private columnLSTG4_N_V As Global.System.Data.DataColumn
        
        Private columnLSTG4_N_P As Global.System.Data.DataColumn
        
        Private columnLSTG4_NA As Global.System.Data.DataColumn
        
        Private columnLSTG4_H_A As Global.System.Data.DataColumn
        
        Private columnLSTG4_H_V As Global.System.Data.DataColumn
        
        Private columnLSTG4_H_P As Global.System.Data.DataColumn
        
        Private columnLSTG4_OFFEN As Global.System.Data.DataColumn
        
        Private columnLSTG4 As Global.System.Data.DataColumn
        
        Private columnKST_NAME As Global.System.Data.DataColumn
        
        Private columnPRJ_NAME1 As Global.System.Data.DataColumn
        
        Private columnPRJ_NAME2 As Global.System.Data.DataColumn
        
        Private columnPRJ_NAME3 As Global.System.Data.DataColumn
        
        Private columnBEARBEITER As Global.System.Data.DataColumn
        
        Private columnIST_VERTRIEB As Global.System.Data.DataColumn
        
        Private columnPRJ_STATUS As Global.System.Data.DataColumn
        
        Private columnPRJ_ORT As Global.System.Data.DataColumn
        
        Private columnPRJ_KURZNAME As Global.System.Data.DataColumn
        
        Private columnRG_MAXDATUM As Global.System.Data.DataColumn
        
        Private columnPRJ_INTERN As Global.System.Data.DataColumn
        
        Private columnVLG_PERIODE As Global.System.Data.DataColumn
        
        Private columnPRJ_VERTRIEBS_ANTEIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Periodenabrechnung"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_NUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_NUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOSTENSTELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOSTENSTELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HAUPT_KSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHAUPT_KST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_PERIODE_UMSATZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_PERIODE_UMSATZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_PERIODE_VORLAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_PERIODE_VORLAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_PERIODE_ILVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_PERIODE_ILV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_PERIODE_ILV_VERTRIEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_PERIODE_ILV_VERTRIEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_UMSATZ_GJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_UMSATZ_GJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_UMSATZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_UMSATZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_VORLAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_VORLAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_ILVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_ILV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLL_ILV_VERTRIEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLL_ILV_VERTRIEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_PERIODE_ABSCHLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_PERIODE_ABSCHLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_PERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_ILV_PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_ILV_PERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_GESAMT_ABSCHLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_GESAMT_ABSCHLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_GESAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_GESAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_ILVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_ILV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATUM_LETZTELEISTUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATUM_LETZTELEISTUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_A_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_A_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_A_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_A_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_A_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_A_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_ABGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_ABG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_N_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_N_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_N_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_N_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_N_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_N_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_NAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_NA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_H_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_H_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_H_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_H_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_H_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_H_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1_OFFENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1_OFFEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_A_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_A_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_A_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_A_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_A_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_A_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_ABGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_ABG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_N_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_N_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_N_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_N_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_N_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_N_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_NAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_NA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_H_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_H_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_H_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_H_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_H_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_H_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2_OFFENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2_OFFEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_A_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_A_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_A_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_A_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_A_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_A_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_ABGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_ABG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_N_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_N_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_N_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_N_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_N_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_N_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_NAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_NA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_H_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_H_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_H_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_H_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_H_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_H_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3_OFFENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3_OFFEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_A_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_A_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_A_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_A_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_A_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_A_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_ABGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_ABG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_N_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_N_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_N_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_N_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_N_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_N_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_NAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_NA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_H_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_H_A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_H_VColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_H_V
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_H_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_H_P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4_OFFENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4_OFFEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LSTG4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLSTG4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KST_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKST_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_NAME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_NAME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_NAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_NAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_NAME3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_NAME3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEARBEITERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEARBEITER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IST_VERTRIEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIST_VERTRIEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_ORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_ORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_KURZNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_KURZNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RG_MAXDATUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRG_MAXDATUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_INTERNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_INTERN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VLG_PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVLG_PERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRJ_VERTRIEBS_ANTEILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRJ_VERTRIEBS_ANTEIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PeriodenabrechnungRow
            Get
                Return CType(Me.Rows(index),PeriodenabrechnungRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PeriodenabrechnungRowChanging As PeriodenabrechnungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PeriodenabrechnungRowChanged As PeriodenabrechnungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PeriodenabrechnungRowDeleting As PeriodenabrechnungRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PeriodenabrechnungRowDeleted As PeriodenabrechnungRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPeriodenabrechnungRow(ByVal row As PeriodenabrechnungRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPeriodenabrechnungRow( _
                    ByVal PERIODE As Integer,  _
                    ByVal PERIODE_ID As Integer,  _
                    ByVal PRJ_NUMMER As Integer,  _
                    ByVal KOSTENSTELLE As Integer,  _
                    ByVal HAUPT_KST As Boolean,  _
                    ByVal SOLL_PERIODE_UMSATZ As Decimal,  _
                    ByVal SOLL_PERIODE_VORLAGE As Decimal,  _
                    ByVal SOLL_PERIODE_ILV As Decimal,  _
                    ByVal SOLL_PERIODE_ILV_VERTRIEB As Decimal,  _
                    ByVal SOLL_UMSATZ_GJ As Decimal,  _
                    ByVal SOLL_UMSATZ As Decimal,  _
                    ByVal SOLL_VORLAGE As Decimal,  _
                    ByVal SOLL_ILV As Decimal,  _
                    ByVal SOLL_ILV_VERTRIEB As Decimal,  _
                    ByVal RG_PERIODE_ABSCHLAG As Decimal,  _
                    ByVal RG_PERIODE As Decimal,  _
                    ByVal RG_ILV_PERIODE As Decimal,  _
                    ByVal RG_GESAMT_ABSCHLAG As Decimal,  _
                    ByVal RG_GESAMT As Decimal,  _
                    ByVal RG_ILV As Decimal,  _
                    ByVal DATUM_LETZTELEISTUNG As Date,  _
                    ByVal LSTG1_A_A As Decimal,  _
                    ByVal LSTG1_A_V As Decimal,  _
                    ByVal LSTG1_A_P As Decimal,  _
                    ByVal LSTG1_ABG As Decimal,  _
                    ByVal LSTG1_N_A As Decimal,  _
                    ByVal LSTG1_N_V As Decimal,  _
                    ByVal LSTG1_N_P As Decimal,  _
                    ByVal LSTG1_NA As Decimal,  _
                    ByVal LSTG1_H_A As Decimal,  _
                    ByVal LSTG1_H_V As Decimal,  _
                    ByVal LSTG1_H_P As Decimal,  _
                    ByVal LSTG1_OFFEN As Decimal,  _
                    ByVal LSTG1 As Decimal,  _
                    ByVal LSTG2_A_A As Decimal,  _
                    ByVal LSTG2_A_V As Decimal,  _
                    ByVal LSTG2_A_P As Decimal,  _
                    ByVal LSTG2_ABG As Decimal,  _
                    ByVal LSTG2_N_A As Decimal,  _
                    ByVal LSTG2_N_V As Decimal,  _
                    ByVal LSTG2_N_P As Decimal,  _
                    ByVal LSTG2_NA As Decimal,  _
                    ByVal LSTG2_H_A As Decimal,  _
                    ByVal LSTG2_H_V As Decimal,  _
                    ByVal LSTG2_H_P As Decimal,  _
                    ByVal LSTG2_OFFEN As Decimal,  _
                    ByVal LSTG2 As Decimal,  _
                    ByVal LSTG3_A_A As Decimal,  _
                    ByVal LSTG3_A_V As Decimal,  _
                    ByVal LSTG3_A_P As Decimal,  _
                    ByVal LSTG3_ABG As Decimal,  _
                    ByVal LSTG3_N_A As Decimal,  _
                    ByVal LSTG3_N_V As Decimal,  _
                    ByVal LSTG3_N_P As Decimal,  _
                    ByVal LSTG3_NA As Decimal,  _
                    ByVal LSTG3_H_A As Decimal,  _
                    ByVal LSTG3_H_V As Decimal,  _
                    ByVal LSTG3_H_P As Decimal,  _
                    ByVal LSTG3_OFFEN As Decimal,  _
                    ByVal LSTG3 As Decimal,  _
                    ByVal LSTG4_A_A As Decimal,  _
                    ByVal LSTG4_A_V As Decimal,  _
                    ByVal LSTG4_A_P As Decimal,  _
                    ByVal LSTG4_ABG As Decimal,  _
                    ByVal LSTG4_N_A As Decimal,  _
                    ByVal LSTG4_N_V As Decimal,  _
                    ByVal LSTG4_N_P As Decimal,  _
                    ByVal LSTG4_NA As Decimal,  _
                    ByVal LSTG4_H_A As Decimal,  _
                    ByVal LSTG4_H_V As Decimal,  _
                    ByVal LSTG4_H_P As Decimal,  _
                    ByVal LSTG4_OFFEN As Decimal,  _
                    ByVal LSTG4 As Decimal,  _
                    ByVal KST_NAME As String,  _
                    ByVal PRJ_NAME1 As String,  _
                    ByVal PRJ_NAME2 As String,  _
                    ByVal PRJ_NAME3 As String,  _
                    ByVal BEARBEITER As String,  _
                    ByVal IST_VERTRIEB As String,  _
                    ByVal PRJ_STATUS As Integer,  _
                    ByVal PRJ_ORT As String,  _
                    ByVal PRJ_KURZNAME As String,  _
                    ByVal RG_MAXDATUM As Date,  _
                    ByVal PRJ_INTERN As Boolean,  _
                    ByVal VLG_PERIODE As Decimal,  _
                    ByVal PRJ_VERTRIEBS_ANTEIL As Decimal) As PeriodenabrechnungRow
            Dim rowPeriodenabrechnungRow As PeriodenabrechnungRow = CType(Me.NewRow,PeriodenabrechnungRow)
            Dim columnValuesArray() As Object = New Object() {PERIODE, PERIODE_ID, PRJ_NUMMER, KOSTENSTELLE, HAUPT_KST, SOLL_PERIODE_UMSATZ, SOLL_PERIODE_VORLAGE, SOLL_PERIODE_ILV, SOLL_PERIODE_ILV_VERTRIEB, SOLL_UMSATZ_GJ, SOLL_UMSATZ, SOLL_VORLAGE, SOLL_ILV, SOLL_ILV_VERTRIEB, RG_PERIODE_ABSCHLAG, RG_PERIODE, RG_ILV_PERIODE, RG_GESAMT_ABSCHLAG, RG_GESAMT, RG_ILV, DATUM_LETZTELEISTUNG, LSTG1_A_A, LSTG1_A_V, LSTG1_A_P, LSTG1_ABG, LSTG1_N_A, LSTG1_N_V, LSTG1_N_P, LSTG1_NA, LSTG1_H_A, LSTG1_H_V, LSTG1_H_P, LSTG1_OFFEN, LSTG1, LSTG2_A_A, LSTG2_A_V, LSTG2_A_P, LSTG2_ABG, LSTG2_N_A, LSTG2_N_V, LSTG2_N_P, LSTG2_NA, LSTG2_H_A, LSTG2_H_V, LSTG2_H_P, LSTG2_OFFEN, LSTG2, LSTG3_A_A, LSTG3_A_V, LSTG3_A_P, LSTG3_ABG, LSTG3_N_A, LSTG3_N_V, LSTG3_N_P, LSTG3_NA, LSTG3_H_A, LSTG3_H_V, LSTG3_H_P, LSTG3_OFFEN, LSTG3, LSTG4_A_A, LSTG4_A_V, LSTG4_A_P, LSTG4_ABG, LSTG4_N_A, LSTG4_N_V, LSTG4_N_P, LSTG4_NA, LSTG4_H_A, LSTG4_H_V, LSTG4_H_P, LSTG4_OFFEN, LSTG4, KST_NAME, PRJ_NAME1, PRJ_NAME2, PRJ_NAME3, BEARBEITER, IST_VERTRIEB, PRJ_STATUS, PRJ_ORT, PRJ_KURZNAME, RG_MAXDATUM, PRJ_INTERN, VLG_PERIODE, PRJ_VERTRIEBS_ANTEIL}
            rowPeriodenabrechnungRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPeriodenabrechnungRow)
            Return rowPeriodenabrechnungRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PeriodenabrechnungDataTable = CType(MyBase.Clone,PeriodenabrechnungDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PeriodenabrechnungDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPERIODE = MyBase.Columns("PERIODE")
            Me.columnPERIODE_ID = MyBase.Columns("PERIODE_ID")
            Me.columnPRJ_NUMMER = MyBase.Columns("PRJ_NUMMER")
            Me.columnKOSTENSTELLE = MyBase.Columns("KOSTENSTELLE")
            Me.columnHAUPT_KST = MyBase.Columns("HAUPT_KST")
            Me.columnSOLL_PERIODE_UMSATZ = MyBase.Columns("SOLL_PERIODE_UMSATZ")
            Me.columnSOLL_PERIODE_VORLAGE = MyBase.Columns("SOLL_PERIODE_VORLAGE")
            Me.columnSOLL_PERIODE_ILV = MyBase.Columns("SOLL_PERIODE_ILV")
            Me.columnSOLL_PERIODE_ILV_VERTRIEB = MyBase.Columns("SOLL_PERIODE_ILV_VERTRIEB")
            Me.columnSOLL_UMSATZ_GJ = MyBase.Columns("SOLL_UMSATZ_GJ")
            Me.columnSOLL_UMSATZ = MyBase.Columns("SOLL_UMSATZ")
            Me.columnSOLL_VORLAGE = MyBase.Columns("SOLL_VORLAGE")
            Me.columnSOLL_ILV = MyBase.Columns("SOLL_ILV")
            Me.columnSOLL_ILV_VERTRIEB = MyBase.Columns("SOLL_ILV_VERTRIEB")
            Me.columnRG_PERIODE_ABSCHLAG = MyBase.Columns("RG_PERIODE_ABSCHLAG")
            Me.columnRG_PERIODE = MyBase.Columns("RG_PERIODE")
            Me.columnRG_ILV_PERIODE = MyBase.Columns("RG_ILV_PERIODE")
            Me.columnRG_GESAMT_ABSCHLAG = MyBase.Columns("RG_GESAMT_ABSCHLAG")
            Me.columnRG_GESAMT = MyBase.Columns("RG_GESAMT")
            Me.columnRG_ILV = MyBase.Columns("RG_ILV")
            Me.columnDATUM_LETZTELEISTUNG = MyBase.Columns("DATUM_LETZTELEISTUNG")
            Me.columnLSTG1_A_A = MyBase.Columns("LSTG1_A_A")
            Me.columnLSTG1_A_V = MyBase.Columns("LSTG1_A_V")
            Me.columnLSTG1_A_P = MyBase.Columns("LSTG1_A_P")
            Me.columnLSTG1_ABG = MyBase.Columns("LSTG1_ABG")
            Me.columnLSTG1_N_A = MyBase.Columns("LSTG1_N_A")
            Me.columnLSTG1_N_V = MyBase.Columns("LSTG1_N_V")
            Me.columnLSTG1_N_P = MyBase.Columns("LSTG1_N_P")
            Me.columnLSTG1_NA = MyBase.Columns("LSTG1_NA")
            Me.columnLSTG1_H_A = MyBase.Columns("LSTG1_H_A")
            Me.columnLSTG1_H_V = MyBase.Columns("LSTG1_H_V")
            Me.columnLSTG1_H_P = MyBase.Columns("LSTG1_H_P")
            Me.columnLSTG1_OFFEN = MyBase.Columns("LSTG1_OFFEN")
            Me.columnLSTG1 = MyBase.Columns("LSTG1")
            Me.columnLSTG2_A_A = MyBase.Columns("LSTG2_A_A")
            Me.columnLSTG2_A_V = MyBase.Columns("LSTG2_A_V")
            Me.columnLSTG2_A_P = MyBase.Columns("LSTG2_A_P")
            Me.columnLSTG2_ABG = MyBase.Columns("LSTG2_ABG")
            Me.columnLSTG2_N_A = MyBase.Columns("LSTG2_N_A")
            Me.columnLSTG2_N_V = MyBase.Columns("LSTG2_N_V")
            Me.columnLSTG2_N_P = MyBase.Columns("LSTG2_N_P")
            Me.columnLSTG2_NA = MyBase.Columns("LSTG2_NA")
            Me.columnLSTG2_H_A = MyBase.Columns("LSTG2_H_A")
            Me.columnLSTG2_H_V = MyBase.Columns("LSTG2_H_V")
            Me.columnLSTG2_H_P = MyBase.Columns("LSTG2_H_P")
            Me.columnLSTG2_OFFEN = MyBase.Columns("LSTG2_OFFEN")
            Me.columnLSTG2 = MyBase.Columns("LSTG2")
            Me.columnLSTG3_A_A = MyBase.Columns("LSTG3_A_A")
            Me.columnLSTG3_A_V = MyBase.Columns("LSTG3_A_V")
            Me.columnLSTG3_A_P = MyBase.Columns("LSTG3_A_P")
            Me.columnLSTG3_ABG = MyBase.Columns("LSTG3_ABG")
            Me.columnLSTG3_N_A = MyBase.Columns("LSTG3_N_A")
            Me.columnLSTG3_N_V = MyBase.Columns("LSTG3_N_V")
            Me.columnLSTG3_N_P = MyBase.Columns("LSTG3_N_P")
            Me.columnLSTG3_NA = MyBase.Columns("LSTG3_NA")
            Me.columnLSTG3_H_A = MyBase.Columns("LSTG3_H_A")
            Me.columnLSTG3_H_V = MyBase.Columns("LSTG3_H_V")
            Me.columnLSTG3_H_P = MyBase.Columns("LSTG3_H_P")
            Me.columnLSTG3_OFFEN = MyBase.Columns("LSTG3_OFFEN")
            Me.columnLSTG3 = MyBase.Columns("LSTG3")
            Me.columnLSTG4_A_A = MyBase.Columns("LSTG4_A_A")
            Me.columnLSTG4_A_V = MyBase.Columns("LSTG4_A_V")
            Me.columnLSTG4_A_P = MyBase.Columns("LSTG4_A_P")
            Me.columnLSTG4_ABG = MyBase.Columns("LSTG4_ABG")
            Me.columnLSTG4_N_A = MyBase.Columns("LSTG4_N_A")
            Me.columnLSTG4_N_V = MyBase.Columns("LSTG4_N_V")
            Me.columnLSTG4_N_P = MyBase.Columns("LSTG4_N_P")
            Me.columnLSTG4_NA = MyBase.Columns("LSTG4_NA")
            Me.columnLSTG4_H_A = MyBase.Columns("LSTG4_H_A")
            Me.columnLSTG4_H_V = MyBase.Columns("LSTG4_H_V")
            Me.columnLSTG4_H_P = MyBase.Columns("LSTG4_H_P")
            Me.columnLSTG4_OFFEN = MyBase.Columns("LSTG4_OFFEN")
            Me.columnLSTG4 = MyBase.Columns("LSTG4")
            Me.columnKST_NAME = MyBase.Columns("KST_NAME")
            Me.columnPRJ_NAME1 = MyBase.Columns("PRJ_NAME1")
            Me.columnPRJ_NAME2 = MyBase.Columns("PRJ_NAME2")
            Me.columnPRJ_NAME3 = MyBase.Columns("PRJ_NAME3")
            Me.columnBEARBEITER = MyBase.Columns("BEARBEITER")
            Me.columnIST_VERTRIEB = MyBase.Columns("IST_VERTRIEB")
            Me.columnPRJ_STATUS = MyBase.Columns("PRJ_STATUS")
            Me.columnPRJ_ORT = MyBase.Columns("PRJ_ORT")
            Me.columnPRJ_KURZNAME = MyBase.Columns("PRJ_KURZNAME")
            Me.columnRG_MAXDATUM = MyBase.Columns("RG_MAXDATUM")
            Me.columnPRJ_INTERN = MyBase.Columns("PRJ_INTERN")
            Me.columnVLG_PERIODE = MyBase.Columns("VLG_PERIODE")
            Me.columnPRJ_VERTRIEBS_ANTEIL = MyBase.Columns("PRJ_VERTRIEBS_ANTEIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPERIODE = New Global.System.Data.DataColumn("PERIODE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODE)
            Me.columnPERIODE_ID = New Global.System.Data.DataColumn("PERIODE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODE_ID)
            Me.columnPRJ_NUMMER = New Global.System.Data.DataColumn("PRJ_NUMMER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_NUMMER)
            Me.columnKOSTENSTELLE = New Global.System.Data.DataColumn("KOSTENSTELLE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOSTENSTELLE)
            Me.columnHAUPT_KST = New Global.System.Data.DataColumn("HAUPT_KST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHAUPT_KST)
            Me.columnSOLL_PERIODE_UMSATZ = New Global.System.Data.DataColumn("SOLL_PERIODE_UMSATZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_PERIODE_UMSATZ)
            Me.columnSOLL_PERIODE_VORLAGE = New Global.System.Data.DataColumn("SOLL_PERIODE_VORLAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_PERIODE_VORLAGE)
            Me.columnSOLL_PERIODE_ILV = New Global.System.Data.DataColumn("SOLL_PERIODE_ILV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_PERIODE_ILV)
            Me.columnSOLL_PERIODE_ILV_VERTRIEB = New Global.System.Data.DataColumn("SOLL_PERIODE_ILV_VERTRIEB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_PERIODE_ILV_VERTRIEB)
            Me.columnSOLL_UMSATZ_GJ = New Global.System.Data.DataColumn("SOLL_UMSATZ_GJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_UMSATZ_GJ)
            Me.columnSOLL_UMSATZ = New Global.System.Data.DataColumn("SOLL_UMSATZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_UMSATZ)
            Me.columnSOLL_VORLAGE = New Global.System.Data.DataColumn("SOLL_VORLAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_VORLAGE)
            Me.columnSOLL_ILV = New Global.System.Data.DataColumn("SOLL_ILV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_ILV)
            Me.columnSOLL_ILV_VERTRIEB = New Global.System.Data.DataColumn("SOLL_ILV_VERTRIEB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLL_ILV_VERTRIEB)
            Me.columnRG_PERIODE_ABSCHLAG = New Global.System.Data.DataColumn("RG_PERIODE_ABSCHLAG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_PERIODE_ABSCHLAG)
            Me.columnRG_PERIODE = New Global.System.Data.DataColumn("RG_PERIODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_PERIODE)
            Me.columnRG_ILV_PERIODE = New Global.System.Data.DataColumn("RG_ILV_PERIODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_ILV_PERIODE)
            Me.columnRG_GESAMT_ABSCHLAG = New Global.System.Data.DataColumn("RG_GESAMT_ABSCHLAG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_GESAMT_ABSCHLAG)
            Me.columnRG_GESAMT = New Global.System.Data.DataColumn("RG_GESAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_GESAMT)
            Me.columnRG_ILV = New Global.System.Data.DataColumn("RG_ILV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_ILV)
            Me.columnDATUM_LETZTELEISTUNG = New Global.System.Data.DataColumn("DATUM_LETZTELEISTUNG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATUM_LETZTELEISTUNG)
            Me.columnLSTG1_A_A = New Global.System.Data.DataColumn("LSTG1_A_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_A_A)
            Me.columnLSTG1_A_V = New Global.System.Data.DataColumn("LSTG1_A_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_A_V)
            Me.columnLSTG1_A_P = New Global.System.Data.DataColumn("LSTG1_A_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_A_P)
            Me.columnLSTG1_ABG = New Global.System.Data.DataColumn("LSTG1_ABG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_ABG)
            Me.columnLSTG1_N_A = New Global.System.Data.DataColumn("LSTG1_N_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_N_A)
            Me.columnLSTG1_N_V = New Global.System.Data.DataColumn("LSTG1_N_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_N_V)
            Me.columnLSTG1_N_P = New Global.System.Data.DataColumn("LSTG1_N_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_N_P)
            Me.columnLSTG1_NA = New Global.System.Data.DataColumn("LSTG1_NA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_NA)
            Me.columnLSTG1_H_A = New Global.System.Data.DataColumn("LSTG1_H_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_H_A)
            Me.columnLSTG1_H_V = New Global.System.Data.DataColumn("LSTG1_H_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_H_V)
            Me.columnLSTG1_H_P = New Global.System.Data.DataColumn("LSTG1_H_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_H_P)
            Me.columnLSTG1_OFFEN = New Global.System.Data.DataColumn("LSTG1_OFFEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1_OFFEN)
            Me.columnLSTG1 = New Global.System.Data.DataColumn("LSTG1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG1)
            Me.columnLSTG2_A_A = New Global.System.Data.DataColumn("LSTG2_A_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_A_A)
            Me.columnLSTG2_A_V = New Global.System.Data.DataColumn("LSTG2_A_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_A_V)
            Me.columnLSTG2_A_P = New Global.System.Data.DataColumn("LSTG2_A_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_A_P)
            Me.columnLSTG2_ABG = New Global.System.Data.DataColumn("LSTG2_ABG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_ABG)
            Me.columnLSTG2_N_A = New Global.System.Data.DataColumn("LSTG2_N_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_N_A)
            Me.columnLSTG2_N_V = New Global.System.Data.DataColumn("LSTG2_N_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_N_V)
            Me.columnLSTG2_N_P = New Global.System.Data.DataColumn("LSTG2_N_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_N_P)
            Me.columnLSTG2_NA = New Global.System.Data.DataColumn("LSTG2_NA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_NA)
            Me.columnLSTG2_H_A = New Global.System.Data.DataColumn("LSTG2_H_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_H_A)
            Me.columnLSTG2_H_V = New Global.System.Data.DataColumn("LSTG2_H_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_H_V)
            Me.columnLSTG2_H_P = New Global.System.Data.DataColumn("LSTG2_H_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_H_P)
            Me.columnLSTG2_OFFEN = New Global.System.Data.DataColumn("LSTG2_OFFEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2_OFFEN)
            Me.columnLSTG2 = New Global.System.Data.DataColumn("LSTG2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG2)
            Me.columnLSTG3_A_A = New Global.System.Data.DataColumn("LSTG3_A_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_A_A)
            Me.columnLSTG3_A_V = New Global.System.Data.DataColumn("LSTG3_A_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_A_V)
            Me.columnLSTG3_A_P = New Global.System.Data.DataColumn("LSTG3_A_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_A_P)
            Me.columnLSTG3_ABG = New Global.System.Data.DataColumn("LSTG3_ABG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_ABG)
            Me.columnLSTG3_N_A = New Global.System.Data.DataColumn("LSTG3_N_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_N_A)
            Me.columnLSTG3_N_V = New Global.System.Data.DataColumn("LSTG3_N_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_N_V)
            Me.columnLSTG3_N_P = New Global.System.Data.DataColumn("LSTG3_N_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_N_P)
            Me.columnLSTG3_NA = New Global.System.Data.DataColumn("LSTG3_NA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_NA)
            Me.columnLSTG3_H_A = New Global.System.Data.DataColumn("LSTG3_H_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_H_A)
            Me.columnLSTG3_H_V = New Global.System.Data.DataColumn("LSTG3_H_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_H_V)
            Me.columnLSTG3_H_P = New Global.System.Data.DataColumn("LSTG3_H_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_H_P)
            Me.columnLSTG3_OFFEN = New Global.System.Data.DataColumn("LSTG3_OFFEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3_OFFEN)
            Me.columnLSTG3 = New Global.System.Data.DataColumn("LSTG3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG3)
            Me.columnLSTG4_A_A = New Global.System.Data.DataColumn("LSTG4_A_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_A_A)
            Me.columnLSTG4_A_V = New Global.System.Data.DataColumn("LSTG4_A_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_A_V)
            Me.columnLSTG4_A_P = New Global.System.Data.DataColumn("LSTG4_A_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_A_P)
            Me.columnLSTG4_ABG = New Global.System.Data.DataColumn("LSTG4_ABG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_ABG)
            Me.columnLSTG4_N_A = New Global.System.Data.DataColumn("LSTG4_N_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_N_A)
            Me.columnLSTG4_N_V = New Global.System.Data.DataColumn("LSTG4_N_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_N_V)
            Me.columnLSTG4_N_P = New Global.System.Data.DataColumn("LSTG4_N_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_N_P)
            Me.columnLSTG4_NA = New Global.System.Data.DataColumn("LSTG4_NA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_NA)
            Me.columnLSTG4_H_A = New Global.System.Data.DataColumn("LSTG4_H_A", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_H_A)
            Me.columnLSTG4_H_V = New Global.System.Data.DataColumn("LSTG4_H_V", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_H_V)
            Me.columnLSTG4_H_P = New Global.System.Data.DataColumn("LSTG4_H_P", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_H_P)
            Me.columnLSTG4_OFFEN = New Global.System.Data.DataColumn("LSTG4_OFFEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4_OFFEN)
            Me.columnLSTG4 = New Global.System.Data.DataColumn("LSTG4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLSTG4)
            Me.columnKST_NAME = New Global.System.Data.DataColumn("KST_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKST_NAME)
            Me.columnPRJ_NAME1 = New Global.System.Data.DataColumn("PRJ_NAME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_NAME1)
            Me.columnPRJ_NAME2 = New Global.System.Data.DataColumn("PRJ_NAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_NAME2)
            Me.columnPRJ_NAME3 = New Global.System.Data.DataColumn("PRJ_NAME3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_NAME3)
            Me.columnBEARBEITER = New Global.System.Data.DataColumn("BEARBEITER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEARBEITER)
            Me.columnIST_VERTRIEB = New Global.System.Data.DataColumn("IST_VERTRIEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIST_VERTRIEB)
            Me.columnPRJ_STATUS = New Global.System.Data.DataColumn("PRJ_STATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_STATUS)
            Me.columnPRJ_ORT = New Global.System.Data.DataColumn("PRJ_ORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_ORT)
            Me.columnPRJ_KURZNAME = New Global.System.Data.DataColumn("PRJ_KURZNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_KURZNAME)
            Me.columnRG_MAXDATUM = New Global.System.Data.DataColumn("RG_MAXDATUM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRG_MAXDATUM)
            Me.columnPRJ_INTERN = New Global.System.Data.DataColumn("PRJ_INTERN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_INTERN)
            Me.columnVLG_PERIODE = New Global.System.Data.DataColumn("VLG_PERIODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVLG_PERIODE)
            Me.columnPRJ_VERTRIEBS_ANTEIL = New Global.System.Data.DataColumn("PRJ_VERTRIEBS_ANTEIL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRJ_VERTRIEBS_ANTEIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPERIODE, Me.columnPRJ_NUMMER, Me.columnKOSTENSTELLE}, false))
            Me.columnKST_NAME.MaxLength = 255
            Me.columnPRJ_NAME1.MaxLength = 255
            Me.columnPRJ_NAME2.MaxLength = 255
            Me.columnPRJ_NAME3.MaxLength = 255
            Me.columnBEARBEITER.MaxLength = 255
            Me.columnIST_VERTRIEB.MaxLength = 64
            Me.columnPRJ_ORT.MaxLength = 255
            Me.columnPRJ_KURZNAME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPeriodenabrechnungRow() As PeriodenabrechnungRow
            Return CType(Me.NewRow,PeriodenabrechnungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PeriodenabrechnungRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PeriodenabrechnungRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PeriodenabrechnungRowChangedEvent) Is Nothing) Then
                RaiseEvent PeriodenabrechnungRowChanged(Me, New PeriodenabrechnungRowChangeEvent(CType(e.Row,PeriodenabrechnungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PeriodenabrechnungRowChangingEvent) Is Nothing) Then
                RaiseEvent PeriodenabrechnungRowChanging(Me, New PeriodenabrechnungRowChangeEvent(CType(e.Row,PeriodenabrechnungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PeriodenabrechnungRowDeletedEvent) Is Nothing) Then
                RaiseEvent PeriodenabrechnungRowDeleted(Me, New PeriodenabrechnungRowChangeEvent(CType(e.Row,PeriodenabrechnungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PeriodenabrechnungRowDeletingEvent) Is Nothing) Then
                RaiseEvent PeriodenabrechnungRowDeleting(Me, New PeriodenabrechnungRowChangeEvent(CType(e.Row,PeriodenabrechnungRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePeriodenabrechnungRow(ByVal row As PeriodenabrechnungRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCRM = New dsCRM()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PeriodenabrechnungDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_TBL_CRM_Firma_IMPDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_TBL_CRM_Firma_IMPRow)
        
        Private columnFIRMA_ID As Global.System.Data.DataColumn
        
        Private columnNAME1 As Global.System.Data.DataColumn
        
        Private columnNAME2 As Global.System.Data.DataColumn
        
        Private columnNAME3 As Global.System.Data.DataColumn
        
        Private columnSTRASSE As Global.System.Data.DataColumn
        
        Private columnPLZ As Global.System.Data.DataColumn
        
        Private columnBL As Global.System.Data.DataColumn
        
        Private columnPF As Global.System.Data.DataColumn
        
        Private columnPF_ORT As Global.System.Data.DataColumn
        
        Private columnPF_PLZ As Global.System.Data.DataColumn
        
        Private columnWEBSITE As Global.System.Data.DataColumn
        
        Private columnKUERZEL_KONTAKT As Global.System.Data.DataColumn
        
        Private columnHPC_KONTAKT As Global.System.Data.DataColumn
        
        Private columnKST As Global.System.Data.DataColumn
        
        Private columnVERTRIEBS_MA As Global.System.Data.DataColumn
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnOrt As Global.System.Data.DataColumn
        
        Private columnLand As Global.System.Data.DataColumn
        
        Private columnStateCode As Global.System.Data.DataColumn
        
        Private columnTelefon As Global.System.Data.DataColumn
        
        Private columnFax As Global.System.Data.DataColumn
        
        Private columnEMail As Global.System.Data.DataColumn
        
        Private columnSprache As Global.System.Data.DataColumn
        
        Private columnaktiv As Global.System.Data.DataColumn
        
        Private columnStammkunde As Global.System.Data.DataColumn
        
        Private columnStammkundenbetreuer As Global.System.Data.DataColumn
        
        Private columnVertriebskunde As Global.System.Data.DataColumn
        
        Private columnGeschaeftsbeziehung As Global.System.Data.DataColumn
        
        Private columnFIRMENNUMMER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_TBL_CRM_Firma_IMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRMA_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMA_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAME3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STRASSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRASSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PF_ORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPF_ORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PF_PLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPF_PLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEBSITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEBSITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KUERZEL_KONTAKTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKUERZEL_KONTAKT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HPC_KONTAKTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHPC_KONTAKT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VERTRIEBS_MAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVERTRIEBS_MA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StateCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStateCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelefonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpracheColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSprache
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aktivColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaktiv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StammkundeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStammkunde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StammkundenbetreuerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStammkundenbetreuer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VertriebskundeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVertriebskunde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeschaeftsbeziehungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeschaeftsbeziehung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRMENNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_TBL_CRM_Firma_IMPRow
            Get
                Return CType(Me.Rows(index),VW_TBL_CRM_Firma_IMPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_IMPRowChanging As VW_TBL_CRM_Firma_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_IMPRowChanged As VW_TBL_CRM_Firma_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_IMPRowDeleting As VW_TBL_CRM_Firma_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_IMPRowDeleted As VW_TBL_CRM_Firma_IMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_TBL_CRM_Firma_IMPRow(ByVal row As VW_TBL_CRM_Firma_IMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_TBL_CRM_Firma_IMPRow( _
                    ByVal FIRMA_ID As String,  _
                    ByVal NAME1 As String,  _
                    ByVal NAME2 As String,  _
                    ByVal NAME3 As String,  _
                    ByVal STRASSE As String,  _
                    ByVal PLZ As String,  _
                    ByVal BL As String,  _
                    ByVal PF As String,  _
                    ByVal PF_ORT As String,  _
                    ByVal PF_PLZ As String,  _
                    ByVal WEBSITE As String,  _
                    ByVal KUERZEL_KONTAKT As String,  _
                    ByVal HPC_KONTAKT As String,  _
                    ByVal KST As String,  _
                    ByVal VERTRIEBS_MA As String,  _
                    ByVal Ort As String,  _
                    ByVal Land As String,  _
                    ByVal StateCode As Integer,  _
                    ByVal Telefon As String,  _
                    ByVal Fax As String,  _
                    ByVal EMail As String,  _
                    ByVal Sprache As String,  _
                    ByVal aktiv As Boolean,  _
                    ByVal Stammkunde As Boolean,  _
                    ByVal Stammkundenbetreuer As String,  _
                    ByVal Vertriebskunde As Boolean,  _
                    ByVal Geschaeftsbeziehung As String,  _
                    ByVal FIRMENNUMMER As String) As VW_TBL_CRM_Firma_IMPRow
            Dim rowVW_TBL_CRM_Firma_IMPRow As VW_TBL_CRM_Firma_IMPRow = CType(Me.NewRow,VW_TBL_CRM_Firma_IMPRow)
            Dim columnValuesArray() As Object = New Object() {FIRMA_ID, NAME1, NAME2, NAME3, STRASSE, PLZ, BL, PF, PF_ORT, PF_PLZ, WEBSITE, KUERZEL_KONTAKT, HPC_KONTAKT, KST, VERTRIEBS_MA, Nothing, Ort, Land, StateCode, Telefon, Fax, EMail, Sprache, aktiv, Stammkunde, Stammkundenbetreuer, Vertriebskunde, Geschaeftsbeziehung, FIRMENNUMMER}
            rowVW_TBL_CRM_Firma_IMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_TBL_CRM_Firma_IMPRow)
            Return rowVW_TBL_CRM_Firma_IMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As VW_TBL_CRM_Firma_IMPRow
            Return CType(Me.Rows.Find(New Object() {Id}),VW_TBL_CRM_Firma_IMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_TBL_CRM_Firma_IMPDataTable = CType(MyBase.Clone,VW_TBL_CRM_Firma_IMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_TBL_CRM_Firma_IMPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFIRMA_ID = MyBase.Columns("FIRMA_ID")
            Me.columnNAME1 = MyBase.Columns("NAME1")
            Me.columnNAME2 = MyBase.Columns("NAME2")
            Me.columnNAME3 = MyBase.Columns("NAME3")
            Me.columnSTRASSE = MyBase.Columns("STRASSE")
            Me.columnPLZ = MyBase.Columns("PLZ")
            Me.columnBL = MyBase.Columns("BL")
            Me.columnPF = MyBase.Columns("PF")
            Me.columnPF_ORT = MyBase.Columns("PF_ORT")
            Me.columnPF_PLZ = MyBase.Columns("PF_PLZ")
            Me.columnWEBSITE = MyBase.Columns("WEBSITE")
            Me.columnKUERZEL_KONTAKT = MyBase.Columns("KUERZEL_KONTAKT")
            Me.columnHPC_KONTAKT = MyBase.Columns("HPC_KONTAKT")
            Me.columnKST = MyBase.Columns("KST")
            Me.columnVERTRIEBS_MA = MyBase.Columns("VERTRIEBS_MA")
            Me.columnId = MyBase.Columns("Id")
            Me.columnOrt = MyBase.Columns("Ort")
            Me.columnLand = MyBase.Columns("Land")
            Me.columnStateCode = MyBase.Columns("StateCode")
            Me.columnTelefon = MyBase.Columns("Telefon")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnEMail = MyBase.Columns("EMail")
            Me.columnSprache = MyBase.Columns("Sprache")
            Me.columnaktiv = MyBase.Columns("aktiv")
            Me.columnStammkunde = MyBase.Columns("Stammkunde")
            Me.columnStammkundenbetreuer = MyBase.Columns("Stammkundenbetreuer")
            Me.columnVertriebskunde = MyBase.Columns("Vertriebskunde")
            Me.columnGeschaeftsbeziehung = MyBase.Columns("Geschaeftsbeziehung")
            Me.columnFIRMENNUMMER = MyBase.Columns("FIRMENNUMMER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFIRMA_ID = New Global.System.Data.DataColumn("FIRMA_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMA_ID)
            Me.columnNAME1 = New Global.System.Data.DataColumn("NAME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME1)
            Me.columnNAME2 = New Global.System.Data.DataColumn("NAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME2)
            Me.columnNAME3 = New Global.System.Data.DataColumn("NAME3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME3)
            Me.columnSTRASSE = New Global.System.Data.DataColumn("STRASSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRASSE)
            Me.columnPLZ = New Global.System.Data.DataColumn("PLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLZ)
            Me.columnBL = New Global.System.Data.DataColumn("BL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBL)
            Me.columnPF = New Global.System.Data.DataColumn("PF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPF)
            Me.columnPF_ORT = New Global.System.Data.DataColumn("PF_ORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPF_ORT)
            Me.columnPF_PLZ = New Global.System.Data.DataColumn("PF_PLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPF_PLZ)
            Me.columnWEBSITE = New Global.System.Data.DataColumn("WEBSITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEBSITE)
            Me.columnKUERZEL_KONTAKT = New Global.System.Data.DataColumn("KUERZEL_KONTAKT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKUERZEL_KONTAKT)
            Me.columnHPC_KONTAKT = New Global.System.Data.DataColumn("HPC_KONTAKT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHPC_KONTAKT)
            Me.columnKST = New Global.System.Data.DataColumn("KST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKST)
            Me.columnVERTRIEBS_MA = New Global.System.Data.DataColumn("VERTRIEBS_MA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVERTRIEBS_MA)
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnOrt = New Global.System.Data.DataColumn("Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrt)
            Me.columnLand = New Global.System.Data.DataColumn("Land", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLand)
            Me.columnStateCode = New Global.System.Data.DataColumn("StateCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStateCode)
            Me.columnTelefon = New Global.System.Data.DataColumn("Telefon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefon)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnEMail = New Global.System.Data.DataColumn("EMail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMail)
            Me.columnSprache = New Global.System.Data.DataColumn("Sprache", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSprache)
            Me.columnaktiv = New Global.System.Data.DataColumn("aktiv", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaktiv)
            Me.columnStammkunde = New Global.System.Data.DataColumn("Stammkunde", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStammkunde)
            Me.columnStammkundenbetreuer = New Global.System.Data.DataColumn("Stammkundenbetreuer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStammkundenbetreuer)
            Me.columnVertriebskunde = New Global.System.Data.DataColumn("Vertriebskunde", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVertriebskunde)
            Me.columnGeschaeftsbeziehung = New Global.System.Data.DataColumn("Geschaeftsbeziehung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeschaeftsbeziehung)
            Me.columnFIRMENNUMMER = New Global.System.Data.DataColumn("FIRMENNUMMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNUMMER)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnFIRMA_ID.MaxLength = 40
            Me.columnNAME1.AllowDBNull = false
            Me.columnNAME1.MaxLength = 160
            Me.columnNAME2.MaxLength = 160
            Me.columnNAME3.MaxLength = 160
            Me.columnSTRASSE.MaxLength = 250
            Me.columnPLZ.MaxLength = 20
            Me.columnBL.MaxLength = 255
            Me.columnPF.MaxLength = 64
            Me.columnPF_ORT.MaxLength = 255
            Me.columnPF_PLZ.MaxLength = 64
            Me.columnWEBSITE.MaxLength = 200
            Me.columnKUERZEL_KONTAKT.MaxLength = 25
            Me.columnHPC_KONTAKT.MaxLength = 20
            Me.columnKST.MaxLength = 20
            Me.columnVERTRIEBS_MA.MaxLength = 255
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnOrt.MaxLength = 80
            Me.columnLand.MaxLength = 80
            Me.columnTelefon.MaxLength = 50
            Me.columnFax.MaxLength = 50
            Me.columnEMail.MaxLength = 100
            Me.columnSprache.MaxLength = 20
            Me.columnStammkundenbetreuer.MaxLength = 255
            Me.columnGeschaeftsbeziehung.MaxLength = 255
            Me.columnFIRMENNUMMER.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_TBL_CRM_Firma_IMPRow() As VW_TBL_CRM_Firma_IMPRow
            Return CType(Me.NewRow,VW_TBL_CRM_Firma_IMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_TBL_CRM_Firma_IMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_TBL_CRM_Firma_IMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_TBL_CRM_Firma_IMPRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_IMPRowChanged(Me, New VW_TBL_CRM_Firma_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_TBL_CRM_Firma_IMPRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_IMPRowChanging(Me, New VW_TBL_CRM_Firma_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_TBL_CRM_Firma_IMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_IMPRowDeleted(Me, New VW_TBL_CRM_Firma_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_TBL_CRM_Firma_IMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_IMPRowDeleting(Me, New VW_TBL_CRM_Firma_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_TBL_CRM_Firma_IMPRow(ByVal row As VW_TBL_CRM_Firma_IMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCRM = New dsCRM()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_TBL_CRM_Firma_IMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnFIRMENNUMMER As Global.System.Data.DataColumn
        
        Private columnDEBITORNUMMER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_TBL_CRM_Firma_Debitor_LNK_IMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRMENNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEBITORNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBITORNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
            Get
                Return CType(Me.Rows(index),VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChanging As VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChanged As VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeleting As VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeleted As VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_TBL_CRM_Firma_Debitor_LNK_IMPRow(ByVal row As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_TBL_CRM_Firma_Debitor_LNK_IMPRow(ByVal FIRMENNUMMER As String, ByVal DEBITORNUMMER As String) As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
            Dim rowVW_TBL_CRM_Firma_Debitor_LNK_IMPRow As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow = CType(Me.NewRow,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FIRMENNUMMER, DEBITORNUMMER}
            rowVW_TBL_CRM_Firma_Debitor_LNK_IMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
            Return rowVW_TBL_CRM_Firma_Debitor_LNK_IMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable = CType(MyBase.Clone,VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnFIRMENNUMMER = MyBase.Columns("FIRMENNUMMER")
            Me.columnDEBITORNUMMER = MyBase.Columns("DEBITORNUMMER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnFIRMENNUMMER = New Global.System.Data.DataColumn("FIRMENNUMMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNUMMER)
            Me.columnDEBITORNUMMER = New Global.System.Data.DataColumn("DEBITORNUMMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBITORNUMMER)
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnFIRMENNUMMER.MaxLength = 20
            Me.columnDEBITORNUMMER.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_TBL_CRM_Firma_Debitor_LNK_IMPRow() As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
            Return CType(Me.NewRow,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_TBL_CRM_Firma_Debitor_LNK_IMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChanged(Me, New VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChanging(Me, New VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeleted(Me, New VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_TBL_CRM_Firma_Debitor_LNK_IMPRowDeleting(Me, New VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent(CType(e.Row,VW_TBL_CRM_Firma_Debitor_LNK_IMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_TBL_CRM_Firma_Debitor_LNK_IMPRow(ByVal row As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCRM = New dsCRM()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DebitorRow
        Inherits Global.System.Data.DataRow
        
        Private tableDebitor As DebitorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDebitor = CType(Me.Table,DebitorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableDebitor.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableDebitor.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirmenID() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.FirmenIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FirmenID in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.FirmenIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Debitornummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.DebitornummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Debitornummer in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.DebitornummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Firmenname1() As String
            Get
                Return CType(Me(Me.tableDebitor.Firmenname1Column),String)
            End Get
            Set
                Me(Me.tableDebitor.Firmenname1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Firmenname2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.Firmenname2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Firmenname2 in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.Firmenname2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Firmenname3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.Firmenname3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Firmenname3 in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.Firmenname3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Anschrift() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.AnschriftColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Anschrift in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.AnschriftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.PLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PLZ in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.PLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Ort in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Land() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.LandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Land in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.LandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telefon() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.TelefonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Telefon in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.TelefonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Fax in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Homepage() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.HomepageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Homepage in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.HomepageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sprache() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.SpracheColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Sprache in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.SpracheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMail() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.EMailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EMail in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.EMailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Besitzer() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.BesitzerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Besitzer in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.BesitzerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zielsystem() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.ZielsystemColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zielsystem in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.ZielsystemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kostenstelle() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.KostenstelleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kostenstelle in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.KostenstelleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KuerzelKontakt() As String
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.KuerzelKontaktColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KuerzelKontakt in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.KuerzelKontaktColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StateCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDebitor.StateCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte StateCode in Tabelle Debitor ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDebitor.StateCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirmenIDNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.FirmenIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirmenIDNull()
            Me(Me.tableDebitor.FirmenIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDebitornummerNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.DebitornummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDebitornummerNull()
            Me(Me.tableDebitor.DebitornummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirmenname2Null() As Boolean
            Return Me.IsNull(Me.tableDebitor.Firmenname2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirmenname2Null()
            Me(Me.tableDebitor.Firmenname2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirmenname3Null() As Boolean
            Return Me.IsNull(Me.tableDebitor.Firmenname3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirmenname3Null()
            Me(Me.tableDebitor.Firmenname3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnschriftNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.AnschriftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnschriftNull()
            Me(Me.tableDebitor.AnschriftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLZNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.PLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLZNull()
            Me(Me.tableDebitor.PLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrtNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrtNull()
            Me(Me.tableDebitor.OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLandNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.LandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLandNull()
            Me(Me.tableDebitor.LandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelefonNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.TelefonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelefonNull()
            Me(Me.tableDebitor.TelefonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFaxNull()
            Me(Me.tableDebitor.FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHomepageNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.HomepageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHomepageNull()
            Me(Me.tableDebitor.HomepageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpracheNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.SpracheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpracheNull()
            Me(Me.tableDebitor.SpracheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMailNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.EMailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMailNull()
            Me(Me.tableDebitor.EMailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBesitzerNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.BesitzerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBesitzerNull()
            Me(Me.tableDebitor.BesitzerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZielsystemNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.ZielsystemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZielsystemNull()
            Me(Me.tableDebitor.ZielsystemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKostenstelleNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.KostenstelleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKostenstelleNull()
            Me(Me.tableDebitor.KostenstelleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKuerzelKontaktNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.KuerzelKontaktColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKuerzelKontaktNull()
            Me(Me.tableDebitor.KuerzelKontaktColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStateCodeNull() As Boolean
            Return Me.IsNull(Me.tableDebitor.StateCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStateCodeNull()
            Me(Me.tableDebitor.StateCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ProjektRow
        Inherits Global.System.Data.DataRow
        
        Private tableProjekt As ProjektDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProjekt = CType(Me.Table,ProjektDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableProjekt.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableProjekt.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Projektnummer() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.ProjektnummerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Projektnummer in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.ProjektnummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Projektnummer_int() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.Projektnummer_intColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Projektnummer_int in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.Projektnummer_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Auftragsvolumen() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.AuftragsvolumenColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Auftragsvolumen in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.AuftragsvolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AuftragsvolumenGJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.AuftragsvolumenGJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AuftragsvolumenGJ in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.AuftragsvolumenGJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bezeichnung() As String
            Get
                Return CType(Me(Me.tableProjekt.BezeichnungColumn),String)
            End Get
            Set
                Me(Me.tableProjekt.BezeichnungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Geschaeftsjahr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.GeschaeftsjahrColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Geschaeftsjahr in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.GeschaeftsjahrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kostenstelle() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.KostenstelleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Kostenstelle in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.KostenstelleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirmenID() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.FirmenIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FirmenID in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.FirmenIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Firmennummer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.FirmennummerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Firmennummer in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.FirmennummerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Letzteabrechnungsperiode() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.LetzteabrechnungsperiodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Letzteabrechnungsperiode in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.LetzteabrechnungsperiodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OffeneLeistungen() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.OffeneLeistungenColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte OffeneLeistungen in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.OffeneLeistungenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PotRestumsatz() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.PotRestumsatzColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PotRestumsatz in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.PotRestumsatzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Projektleiter() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.ProjektleiterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Projektleiter in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.ProjektleiterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Projektstatus() As Integer
            Get
                Return CType(Me(Me.tableProjekt.ProjektstatusColumn),Integer)
            End Get
            Set
                Me(Me.tableProjekt.ProjektstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UmsatzGesamt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.UmsatzGesamtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UmsatzGesamt in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.UmsatzGesamtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UmsatzGJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.UmsatzGJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UmsatzGJ in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.UmsatzGJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UmsatzPeriode() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.UmsatzPeriodeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UmsatzPeriode in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.UmsatzPeriodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Besitzer() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.BesitzerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Besitzer in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.BesitzerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zielsystem() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProjekt.ZielsystemColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Zielsystem in Tabelle Projekt ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjekt.ZielsystemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjektnummerNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.ProjektnummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjektnummerNull()
            Me(Me.tableProjekt.ProjektnummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjektnummer_intNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.Projektnummer_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjektnummer_intNull()
            Me(Me.tableProjekt.Projektnummer_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAuftragsvolumenNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.AuftragsvolumenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAuftragsvolumenNull()
            Me(Me.tableProjekt.AuftragsvolumenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAuftragsvolumenGJNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.AuftragsvolumenGJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAuftragsvolumenGJNull()
            Me(Me.tableProjekt.AuftragsvolumenGJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeschaeftsjahrNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.GeschaeftsjahrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeschaeftsjahrNull()
            Me(Me.tableProjekt.GeschaeftsjahrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKostenstelleNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.KostenstelleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKostenstelleNull()
            Me(Me.tableProjekt.KostenstelleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirmenIDNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.FirmenIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirmenIDNull()
            Me(Me.tableProjekt.FirmenIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirmennummerNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.FirmennummerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirmennummerNull()
            Me(Me.tableProjekt.FirmennummerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLetzteabrechnungsperiodeNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.LetzteabrechnungsperiodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLetzteabrechnungsperiodeNull()
            Me(Me.tableProjekt.LetzteabrechnungsperiodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOffeneLeistungenNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.OffeneLeistungenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOffeneLeistungenNull()
            Me(Me.tableProjekt.OffeneLeistungenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPotRestumsatzNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.PotRestumsatzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPotRestumsatzNull()
            Me(Me.tableProjekt.PotRestumsatzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProjektleiterNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.ProjektleiterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProjektleiterNull()
            Me(Me.tableProjekt.ProjektleiterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUmsatzGesamtNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.UmsatzGesamtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUmsatzGesamtNull()
            Me(Me.tableProjekt.UmsatzGesamtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUmsatzGJNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.UmsatzGJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUmsatzGJNull()
            Me(Me.tableProjekt.UmsatzGJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUmsatzPeriodeNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.UmsatzPeriodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUmsatzPeriodeNull()
            Me(Me.tableProjekt.UmsatzPeriodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBesitzerNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.BesitzerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBesitzerNull()
            Me(Me.tableProjekt.BesitzerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZielsystemNull() As Boolean
            Return Me.IsNull(Me.tableProjekt.ZielsystemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZielsystemNull()
            Me(Me.tableProjekt.ZielsystemColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PeriodenabrechnungRow
        Inherits Global.System.Data.DataRow
        
        Private tablePeriodenabrechnung As PeriodenabrechnungDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePeriodenabrechnung = CType(Me.Table,PeriodenabrechnungDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PERIODEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PERIODE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODE_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PERIODE_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PERIODE_ID in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PERIODE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_NUMMER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_NUMMERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_NUMMER in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_NUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOSTENSTELLE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.KOSTENSTELLEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KOSTENSTELLE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.KOSTENSTELLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HAUPT_KST() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.HAUPT_KSTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HAUPT_KST in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.HAUPT_KSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_PERIODE_UMSATZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_UMSATZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_PERIODE_UMSATZ in Tabelle Periodenabrechnung ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_UMSATZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_PERIODE_VORLAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_VORLAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_PERIODE_VORLAGE in Tabelle Periodenabrechnung ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_VORLAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_PERIODE_ILV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_PERIODE_ILV in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_PERIODE_ILV_VERTRIEB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILV_VERTRIEBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_PERIODE_ILV_VERTRIEB in Tabelle Periodenabrechnung ist D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILV_VERTRIEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_UMSATZ_GJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_UMSATZ_GJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_UMSATZ_GJ in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_UMSATZ_GJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_UMSATZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_UMSATZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_UMSATZ in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_UMSATZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_VORLAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_VORLAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_VORLAGE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_VORLAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_ILV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_ILVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_ILV in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_ILVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLL_ILV_VERTRIEB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.SOLL_ILV_VERTRIEBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SOLL_ILV_VERTRIEB in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.SOLL_ILV_VERTRIEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_PERIODE_ABSCHLAG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_PERIODE_ABSCHLAGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_PERIODE_ABSCHLAG in Tabelle Periodenabrechnung ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_PERIODE_ABSCHLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_PERIODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_PERIODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_PERIODE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_ILV_PERIODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_ILV_PERIODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_ILV_PERIODE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_ILV_PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_GESAMT_ABSCHLAG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_GESAMT_ABSCHLAGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_GESAMT_ABSCHLAG in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_GESAMT_ABSCHLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_GESAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_GESAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_GESAMT in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_GESAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_ILV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_ILVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_ILV in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_ILVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATUM_LETZTELEISTUNG() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.DATUM_LETZTELEISTUNGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DATUM_LETZTELEISTUNG in Tabelle Periodenabrechnung ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.DATUM_LETZTELEISTUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_A_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_A_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_A_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_A_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_A_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_A_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_A_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_A_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_A_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_A_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_A_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_A_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_ABG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_ABGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_ABG in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_ABGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_N_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_N_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_N_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_N_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_N_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_N_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_N_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_N_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_N_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_N_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_N_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_N_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_NA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_NAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_NA in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_NAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_H_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_H_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_H_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_H_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_H_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_H_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_H_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_H_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_H_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_H_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_H_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_H_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1_OFFEN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1_OFFENColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1_OFFEN in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1_OFFENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG1 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_A_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_A_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_A_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_A_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_A_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_A_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_A_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_A_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_A_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_A_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_A_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_A_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_ABG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_ABGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_ABG in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_ABGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_N_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_N_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_N_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_N_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_N_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_N_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_N_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_N_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_N_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_N_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_N_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_N_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_NA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_NAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_NA in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_NAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_H_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_H_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_H_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_H_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_H_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_H_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_H_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_H_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_H_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_H_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_H_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_H_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2_OFFEN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2_OFFENColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2_OFFEN in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2_OFFENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG2 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_A_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_A_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_A_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_A_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_A_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_A_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_A_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_A_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_A_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_A_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_A_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_A_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_ABG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_ABGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_ABG in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_ABGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_N_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_N_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_N_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_N_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_N_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_N_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_N_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_N_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_N_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_N_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_N_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_N_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_NA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_NAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_NA in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_NAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_H_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_H_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_H_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_H_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_H_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_H_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_H_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_H_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_H_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_H_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_H_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_H_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3_OFFEN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3_OFFENColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3_OFFEN in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3_OFFENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG3 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_A_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_A_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_A_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_A_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_A_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_A_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_A_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_A_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_A_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_A_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_A_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_A_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_ABG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_ABGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_ABG in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_ABGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_N_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_N_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_N_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_N_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_N_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_N_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_N_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_N_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_N_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_N_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_N_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_N_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_NA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_NAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_NA in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_NAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_H_A() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_H_AColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_H_A in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_H_AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_H_V() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_H_VColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_H_V in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_H_VColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_H_P() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_H_PColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_H_P in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_H_PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4_OFFEN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4_OFFENColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4_OFFEN in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4_OFFENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LSTG4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.LSTG4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LSTG4 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.LSTG4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KST_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.KST_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KST_NAME in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.KST_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_NAME1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_NAME1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_NAME1 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_NAME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_NAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_NAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_NAME2 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_NAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_NAME3() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_NAME3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_NAME3 in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_NAME3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEARBEITER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.BEARBEITERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BEARBEITER in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.BEARBEITERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IST_VERTRIEB() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.IST_VERTRIEBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IST_VERTRIEB in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.IST_VERTRIEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_STATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_STATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_STATUS in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_ORT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_ORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_ORT in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_ORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_KURZNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_KURZNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_KURZNAME in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_KURZNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RG_MAXDATUM() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.RG_MAXDATUMColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte RG_MAXDATUM in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.RG_MAXDATUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_INTERN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_INTERNColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_INTERN in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_INTERNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VLG_PERIODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.VLG_PERIODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte VLG_PERIODE in Tabelle Periodenabrechnung ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.VLG_PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRJ_VERTRIEBS_ANTEIL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePeriodenabrechnung.PRJ_VERTRIEBS_ANTEILColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PRJ_VERTRIEBS_ANTEIL in Tabelle Periodenabrechnung ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePeriodenabrechnung.PRJ_VERTRIEBS_ANTEILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODENull()
            Me(Me.tablePeriodenabrechnung.PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODE_IDNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PERIODE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODE_IDNull()
            Me(Me.tablePeriodenabrechnung.PERIODE_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_NUMMERNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_NUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_NUMMERNull()
            Me(Me.tablePeriodenabrechnung.PRJ_NUMMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOSTENSTELLENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.KOSTENSTELLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOSTENSTELLENull()
            Me(Me.tablePeriodenabrechnung.KOSTENSTELLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHAUPT_KSTNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.HAUPT_KSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHAUPT_KSTNull()
            Me(Me.tablePeriodenabrechnung.HAUPT_KSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_PERIODE_UMSATZNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_PERIODE_UMSATZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_PERIODE_UMSATZNull()
            Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_UMSATZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_PERIODE_VORLAGENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_PERIODE_VORLAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_PERIODE_VORLAGENull()
            Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_VORLAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_PERIODE_ILVNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_PERIODE_ILVNull()
            Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_PERIODE_ILV_VERTRIEBNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILV_VERTRIEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_PERIODE_ILV_VERTRIEBNull()
            Me(Me.tablePeriodenabrechnung.SOLL_PERIODE_ILV_VERTRIEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_UMSATZ_GJNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_UMSATZ_GJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_UMSATZ_GJNull()
            Me(Me.tablePeriodenabrechnung.SOLL_UMSATZ_GJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_UMSATZNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_UMSATZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_UMSATZNull()
            Me(Me.tablePeriodenabrechnung.SOLL_UMSATZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_VORLAGENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_VORLAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_VORLAGENull()
            Me(Me.tablePeriodenabrechnung.SOLL_VORLAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_ILVNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_ILVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_ILVNull()
            Me(Me.tablePeriodenabrechnung.SOLL_ILVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLL_ILV_VERTRIEBNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.SOLL_ILV_VERTRIEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLL_ILV_VERTRIEBNull()
            Me(Me.tablePeriodenabrechnung.SOLL_ILV_VERTRIEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_PERIODE_ABSCHLAGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_PERIODE_ABSCHLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_PERIODE_ABSCHLAGNull()
            Me(Me.tablePeriodenabrechnung.RG_PERIODE_ABSCHLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_PERIODENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_PERIODENull()
            Me(Me.tablePeriodenabrechnung.RG_PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_ILV_PERIODENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_ILV_PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_ILV_PERIODENull()
            Me(Me.tablePeriodenabrechnung.RG_ILV_PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_GESAMT_ABSCHLAGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_GESAMT_ABSCHLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_GESAMT_ABSCHLAGNull()
            Me(Me.tablePeriodenabrechnung.RG_GESAMT_ABSCHLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_GESAMTNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_GESAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_GESAMTNull()
            Me(Me.tablePeriodenabrechnung.RG_GESAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_ILVNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_ILVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_ILVNull()
            Me(Me.tablePeriodenabrechnung.RG_ILVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATUM_LETZTELEISTUNGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.DATUM_LETZTELEISTUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATUM_LETZTELEISTUNGNull()
            Me(Me.tablePeriodenabrechnung.DATUM_LETZTELEISTUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_A_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_A_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_A_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG1_A_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_A_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_A_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_A_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_A_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_A_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_A_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_A_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_A_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_ABGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_ABGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_ABGNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_ABGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_N_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_N_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_N_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG1_N_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_N_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_N_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_N_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_N_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_N_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_N_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_N_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_N_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_NANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_NAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_NANull()
            Me(Me.tablePeriodenabrechnung.LSTG1_NAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_H_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_H_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_H_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG1_H_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_H_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_H_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_H_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_H_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_H_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_H_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_H_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_H_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1_OFFENNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1_OFFENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1_OFFENNull()
            Me(Me.tablePeriodenabrechnung.LSTG1_OFFENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG1Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG1Null()
            Me(Me.tablePeriodenabrechnung.LSTG1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_A_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_A_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_A_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG2_A_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_A_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_A_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_A_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_A_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_A_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_A_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_A_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_A_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_ABGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_ABGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_ABGNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_ABGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_N_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_N_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_N_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG2_N_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_N_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_N_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_N_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_N_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_N_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_N_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_N_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_N_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_NANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_NAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_NANull()
            Me(Me.tablePeriodenabrechnung.LSTG2_NAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_H_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_H_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_H_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG2_H_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_H_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_H_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_H_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_H_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_H_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_H_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_H_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_H_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2_OFFENNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2_OFFENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2_OFFENNull()
            Me(Me.tablePeriodenabrechnung.LSTG2_OFFENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG2Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG2Null()
            Me(Me.tablePeriodenabrechnung.LSTG2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_A_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_A_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_A_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG3_A_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_A_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_A_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_A_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_A_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_A_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_A_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_A_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_A_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_ABGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_ABGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_ABGNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_ABGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_N_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_N_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_N_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG3_N_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_N_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_N_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_N_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_N_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_N_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_N_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_N_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_N_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_NANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_NAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_NANull()
            Me(Me.tablePeriodenabrechnung.LSTG3_NAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_H_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_H_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_H_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG3_H_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_H_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_H_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_H_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_H_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_H_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_H_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_H_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_H_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3_OFFENNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3_OFFENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3_OFFENNull()
            Me(Me.tablePeriodenabrechnung.LSTG3_OFFENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG3Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG3Null()
            Me(Me.tablePeriodenabrechnung.LSTG3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_A_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_A_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_A_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG4_A_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_A_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_A_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_A_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_A_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_A_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_A_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_A_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_A_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_ABGNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_ABGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_ABGNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_ABGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_N_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_N_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_N_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG4_N_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_N_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_N_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_N_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_N_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_N_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_N_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_N_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_N_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_NANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_NAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_NANull()
            Me(Me.tablePeriodenabrechnung.LSTG4_NAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_H_ANull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_H_AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_H_ANull()
            Me(Me.tablePeriodenabrechnung.LSTG4_H_AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_H_VNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_H_VColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_H_VNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_H_VColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_H_PNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_H_PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_H_PNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_H_PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4_OFFENNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4_OFFENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4_OFFENNull()
            Me(Me.tablePeriodenabrechnung.LSTG4_OFFENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLSTG4Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.LSTG4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLSTG4Null()
            Me(Me.tablePeriodenabrechnung.LSTG4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKST_NAMENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.KST_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKST_NAMENull()
            Me(Me.tablePeriodenabrechnung.KST_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_NAME1Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_NAME1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_NAME1Null()
            Me(Me.tablePeriodenabrechnung.PRJ_NAME1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_NAME2Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_NAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_NAME2Null()
            Me(Me.tablePeriodenabrechnung.PRJ_NAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_NAME3Null() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_NAME3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_NAME3Null()
            Me(Me.tablePeriodenabrechnung.PRJ_NAME3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEARBEITERNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.BEARBEITERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEARBEITERNull()
            Me(Me.tablePeriodenabrechnung.BEARBEITERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIST_VERTRIEBNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.IST_VERTRIEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIST_VERTRIEBNull()
            Me(Me.tablePeriodenabrechnung.IST_VERTRIEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_STATUSNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_STATUSNull()
            Me(Me.tablePeriodenabrechnung.PRJ_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_ORTNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_ORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_ORTNull()
            Me(Me.tablePeriodenabrechnung.PRJ_ORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_KURZNAMENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_KURZNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_KURZNAMENull()
            Me(Me.tablePeriodenabrechnung.PRJ_KURZNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRG_MAXDATUMNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.RG_MAXDATUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRG_MAXDATUMNull()
            Me(Me.tablePeriodenabrechnung.RG_MAXDATUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_INTERNNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_INTERNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_INTERNNull()
            Me(Me.tablePeriodenabrechnung.PRJ_INTERNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVLG_PERIODENull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.VLG_PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVLG_PERIODENull()
            Me(Me.tablePeriodenabrechnung.VLG_PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRJ_VERTRIEBS_ANTEILNull() As Boolean
            Return Me.IsNull(Me.tablePeriodenabrechnung.PRJ_VERTRIEBS_ANTEILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRJ_VERTRIEBS_ANTEILNull()
            Me(Me.tablePeriodenabrechnung.PRJ_VERTRIEBS_ANTEILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_TBL_CRM_Firma_IMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_TBL_CRM_Firma_IMP As VW_TBL_CRM_Firma_IMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_TBL_CRM_Firma_IMP = CType(Me.Table,VW_TBL_CRM_Firma_IMPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRMA_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMA_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMA_ID in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMA_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAME1() As String
            Get
                Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME1Column),String)
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NAME2 in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAME3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte NAME3 in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STRASSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.STRASSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte STRASSE in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.STRASSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.PLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PLZ in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.PLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.BLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BL in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.BLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PF() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.PFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PF in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.PFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PF_ORT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_ORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PF_ORT in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_ORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PF_PLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_PLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PF_PLZ in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_PLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEBSITE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.WEBSITEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte WEBSITE in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.WEBSITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KUERZEL_KONTAKT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.KUERZEL_KONTAKTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KUERZEL_KONTAKT in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.KUERZEL_KONTAKTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HPC_KONTAKT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.HPC_KONTAKTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HPC_KONTAKT in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.HPC_KONTAKTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KST() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.KSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KST in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.KSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VERTRIEBS_MA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.VERTRIEBS_MAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte VERTRIEBS_MA in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.VERTRIEBS_MAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Ort in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Land() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.LandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Land in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.LandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StateCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.StateCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte StateCode in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.StateCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telefon() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.TelefonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Telefon in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.TelefonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Fax in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMail() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.EMailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EMail in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.EMailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sprache() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.SpracheColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Sprache in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.SpracheColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aktiv() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.aktivColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte aktiv in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.aktivColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stammkunde() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Stammkunde in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stammkundenbetreuer() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundenbetreuerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Stammkundenbetreuer in Tabelle VW_TBL_CRM_Firma_IMP ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundenbetreuerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vertriebskunde() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.VertriebskundeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Vertriebskunde in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.VertriebskundeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Geschaeftsbeziehung() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.GeschaeftsbeziehungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Geschaeftsbeziehung in Tabelle VW_TBL_CRM_Firma_IMP ist DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.GeschaeftsbeziehungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRMENNUMMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMENNUMMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNUMMER in Tabelle VW_TBL_CRM_Firma_IMP ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMENNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRMA_IDNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.FIRMA_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRMA_IDNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMA_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAME2Null() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.NAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAME2Null()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAME3Null() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.NAME3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAME3Null()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.NAME3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTRASSENull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.STRASSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTRASSENull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.STRASSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLZNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.PLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLZNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.PLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBLNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.BLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBLNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.BLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPFNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.PFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPFNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.PFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPF_ORTNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.PF_ORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPF_ORTNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_ORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPF_PLZNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.PF_PLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPF_PLZNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.PF_PLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEBSITENull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.WEBSITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEBSITENull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.WEBSITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKUERZEL_KONTAKTNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.KUERZEL_KONTAKTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKUERZEL_KONTAKTNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.KUERZEL_KONTAKTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHPC_KONTAKTNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.HPC_KONTAKTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHPC_KONTAKTNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.HPC_KONTAKTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKSTNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.KSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKSTNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.KSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVERTRIEBS_MANull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.VERTRIEBS_MAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVERTRIEBS_MANull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.VERTRIEBS_MAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrtNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrtNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLandNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.LandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLandNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.LandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStateCodeNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.StateCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStateCodeNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.StateCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelefonNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.TelefonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelefonNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.TelefonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFaxNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMailNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.EMailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMailNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.EMailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpracheNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.SpracheColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpracheNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.SpracheColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaktivNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.aktivColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaktivNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.aktivColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStammkundeNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.StammkundeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStammkundeNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStammkundenbetreuerNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.StammkundenbetreuerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStammkundenbetreuerNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.StammkundenbetreuerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVertriebskundeNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.VertriebskundeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVertriebskundeNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.VertriebskundeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeschaeftsbeziehungNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.GeschaeftsbeziehungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeschaeftsbeziehungNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.GeschaeftsbeziehungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRMENNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_IMP.FIRMENNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRMENNUMMERNull()
            Me(Me.tableVW_TBL_CRM_Firma_IMP.FIRMENNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_TBL_CRM_Firma_Debitor_LNK_IMP As VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP = CType(Me.Table,VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRMENNUMMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.FIRMENNUMMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNUMMER in Tabelle VW_TBL_CRM_Firma_Debitor_LNK_IMP ist "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.FIRMENNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEBITORNUMMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.DEBITORNUMMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DEBITORNUMMER in Tabelle VW_TBL_CRM_Firma_Debitor_LNK_IMP ist"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.DEBITORNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRMENNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.FIRMENNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRMENNUMMERNull()
            Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.FIRMENNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEBITORNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.DEBITORNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEBITORNUMMERNull()
            Me(Me.tableVW_TBL_CRM_Firma_Debitor_LNK_IMP.DEBITORNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DebitorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DebitorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DebitorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DebitorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ProjektRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ProjektRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ProjektRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ProjektRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PeriodenabrechnungRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PeriodenabrechnungRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PeriodenabrechnungRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PeriodenabrechnungRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_TBL_CRM_Firma_IMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_TBL_CRM_Firma_IMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_TBL_CRM_Firma_IMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_TBL_CRM_Firma_IMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_TBL_CRM_Firma_Debitor_LNK_IMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_TBL_CRM_Firma_Debitor_LNK_IMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsCRMTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DebitorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Debitor"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("FirmenID", "FirmenID")
            tableMapping.ColumnMappings.Add("Debitornummer", "Debitornummer")
            tableMapping.ColumnMappings.Add("Firmenname1", "Firmenname1")
            tableMapping.ColumnMappings.Add("Firmenname2", "Firmenname2")
            tableMapping.ColumnMappings.Add("Firmenname3", "Firmenname3")
            tableMapping.ColumnMappings.Add("Anschrift", "Anschrift")
            tableMapping.ColumnMappings.Add("PLZ", "PLZ")
            tableMapping.ColumnMappings.Add("Ort", "Ort")
            tableMapping.ColumnMappings.Add("Land", "Land")
            tableMapping.ColumnMappings.Add("Telefon", "Telefon")
            tableMapping.ColumnMappings.Add("Fax", "Fax")
            tableMapping.ColumnMappings.Add("Homepage", "Homepage")
            tableMapping.ColumnMappings.Add("Sprache", "Sprache")
            tableMapping.ColumnMappings.Add("EMail", "EMail")
            tableMapping.ColumnMappings.Add("Besitzer", "Besitzer")
            tableMapping.ColumnMappings.Add("Zielsystem", "Zielsystem")
            tableMapping.ColumnMappings.Add("Kostenstelle", "Kostenstelle")
            tableMapping.ColumnMappings.Add("KuerzelKontakt", "KuerzelKontakt")
            tableMapping.ColumnMappings.Add("StateCode", "StateCode")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Debitor] WHERE (([Id] = @Original_Id) AND ((@IsNull_FirmenID ="& _ 
                " 1 AND [FirmenID] IS NULL) OR ([FirmenID] = @Original_FirmenID)) AND ((@IsNull_D"& _ 
                "ebitornummer = 1 AND [Debitornummer] IS NULL) OR ([Debitornummer] = @Original_De"& _ 
                "bitornummer)) AND ([Firmenname1] = @Original_Firmenname1) AND ((@IsNull_Firmenna"& _ 
                "me2 = 1 AND [Firmenname2] IS NULL) OR ([Firmenname2] = @Original_Firmenname2)) A"& _ 
                "ND ((@IsNull_Firmenname3 = 1 AND [Firmenname3] IS NULL) OR ([Firmenname3] = @Ori"& _ 
                "ginal_Firmenname3)) AND ((@IsNull_Anschrift = 1 AND [Anschrift] IS NULL) OR ([An"& _ 
                "schrift] = @Original_Anschrift)) AND ((@IsNull_PLZ = 1 AND [PLZ] IS NULL) OR ([P"& _ 
                "LZ] = @Original_PLZ)) AND ((@IsNull_Ort = 1 AND [Ort] IS NULL) OR ([Ort] = @Orig"& _ 
                "inal_Ort)) AND ((@IsNull_Land = 1 AND [Land] IS NULL) OR ([Land] = @Original_Lan"& _ 
                "d)) AND ((@IsNull_Telefon = 1 AND [Telefon] IS NULL) OR ([Telefon] = @Original_T"& _ 
                "elefon)) AND ((@IsNull_Fax = 1 AND [Fax] IS NULL) OR ([Fax] = @Original_Fax)) AN"& _ 
                "D ((@IsNull_Homepage = 1 AND [Homepage] IS NULL) OR ([Homepage] = @Original_Home"& _ 
                "page)) AND ((@IsNull_Sprache = 1 AND [Sprache] IS NULL) OR ([Sprache] = @Origina"& _ 
                "l_Sprache)) AND ((@IsNull_EMail = 1 AND [EMail] IS NULL) OR ([EMail] = @Original"& _ 
                "_EMail)) AND ((@IsNull_Besitzer = 1 AND [Besitzer] IS NULL) OR ([Besitzer] = @Or"& _ 
                "iginal_Besitzer)) AND ((@IsNull_Zielsystem = 1 AND [Zielsystem] IS NULL) OR ([Zi"& _ 
                "elsystem] = @Original_Zielsystem)) AND ((@IsNull_Kostenstelle = 1 AND [Kostenste"& _ 
                "lle] IS NULL) OR ([Kostenstelle] = @Original_Kostenstelle)) AND ((@IsNull_Kuerze"& _ 
                "lKontakt = 1 AND [KuerzelKontakt] IS NULL) OR ([KuerzelKontakt] = @Original_Kuer"& _ 
                "zelKontakt)) AND ((@IsNull_StateCode = 1 AND [StateCode] IS NULL) OR ([StateCode"& _ 
                "] = @Original_StateCode)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirmenID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Debitornummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Debitornummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmenname2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmenname3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Anschrift", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Anschrift", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLZ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLZ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Land", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Land", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telefon", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telefon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Fax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Homepage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Homepage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sprache", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sprache", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Besitzer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Kostenstelle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KuerzelKontakt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KuerzelKontakt", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Debitor] ([FirmenID], [Debitornummer], [Firmenname1], [Firmenn"& _ 
                "ame2], [Firmenname3], [Anschrift], [PLZ], [Ort], [Land], [Telefon], [Fax], [Home"& _ 
                "page], [Sprache], [EMail], [Besitzer], [Zielsystem], [Kostenstelle], [KuerzelKon"& _ 
                "takt], [StateCode]) VALUES (@FirmenID, @Debitornummer, @Firmenname1, @Firmenname"& _ 
                "2, @Firmenname3, @Anschrift, @PLZ, @Ort, @Land, @Telefon, @Fax, @Homepage, @Spra"& _ 
                "che, @EMail, @Besitzer, @Zielsystem, @Kostenstelle, @KuerzelKontakt, @StateCode)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenname3, An"& _ 
                "schrift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitzer, Ziels"& _ 
                "ystem, Kostenstelle, KuerzelKontakt, StateCode FROM Debitor WHERE (Id = SCOPE_ID"& _ 
                "ENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Debitornummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Anschrift", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLZ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Land", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telefon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Homepage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sprache", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KuerzelKontakt", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Debitor] SET [FirmenID] = @FirmenID, [Debitornummer] = @Debitornumm"& _ 
                "er, [Firmenname1] = @Firmenname1, [Firmenname2] = @Firmenname2, [Firmenname3] = "& _ 
                "@Firmenname3, [Anschrift] = @Anschrift, [PLZ] = @PLZ, [Ort] = @Ort, [Land] = @La"& _ 
                "nd, [Telefon] = @Telefon, [Fax] = @Fax, [Homepage] = @Homepage, [Sprache] = @Spr"& _ 
                "ache, [EMail] = @EMail, [Besitzer] = @Besitzer, [Zielsystem] = @Zielsystem, [Kos"& _ 
                "tenstelle] = @Kostenstelle, [KuerzelKontakt] = @KuerzelKontakt, [StateCode] = @S"& _ 
                "tateCode WHERE (([Id] = @Original_Id) AND ((@IsNull_FirmenID = 1 AND [FirmenID] "& _ 
                "IS NULL) OR ([FirmenID] = @Original_FirmenID)) AND ((@IsNull_Debitornummer = 1 A"& _ 
                "ND [Debitornummer] IS NULL) OR ([Debitornummer] = @Original_Debitornummer)) AND "& _ 
                "([Firmenname1] = @Original_Firmenname1) AND ((@IsNull_Firmenname2 = 1 AND [Firme"& _ 
                "nname2] IS NULL) OR ([Firmenname2] = @Original_Firmenname2)) AND ((@IsNull_Firme"& _ 
                "nname3 = 1 AND [Firmenname3] IS NULL) OR ([Firmenname3] = @Original_Firmenname3)"& _ 
                ") AND ((@IsNull_Anschrift = 1 AND [Anschrift] IS NULL) OR ([Anschrift] = @Origin"& _ 
                "al_Anschrift)) AND ((@IsNull_PLZ = 1 AND [PLZ] IS NULL) OR ([PLZ] = @Original_PL"& _ 
                "Z)) AND ((@IsNull_Ort = 1 AND [Ort] IS NULL) OR ([Ort] = @Original_Ort)) AND ((@"& _ 
                "IsNull_Land = 1 AND [Land] IS NULL) OR ([Land] = @Original_Land)) AND ((@IsNull_"& _ 
                "Telefon = 1 AND [Telefon] IS NULL) OR ([Telefon] = @Original_Telefon)) AND ((@Is"& _ 
                "Null_Fax = 1 AND [Fax] IS NULL) OR ([Fax] = @Original_Fax)) AND ((@IsNull_Homepa"& _ 
                "ge = 1 AND [Homepage] IS NULL) OR ([Homepage] = @Original_Homepage)) AND ((@IsNu"& _ 
                "ll_Sprache = 1 AND [Sprache] IS NULL) OR ([Sprache] = @Original_Sprache)) AND (("& _ 
                "@IsNull_EMail = 1 AND [EMail] IS NULL) OR ([EMail] = @Original_EMail)) AND ((@Is"& _ 
                "Null_Besitzer = 1 AND [Besitzer] IS NULL) OR ([Besitzer] = @Original_Besitzer)) "& _ 
                "AND ((@IsNull_Zielsystem = 1 AND [Zielsystem] IS NULL) OR ([Zielsystem] = @Origi"& _ 
                "nal_Zielsystem)) AND ((@IsNull_Kostenstelle = 1 AND [Kostenstelle] IS NULL) OR ("& _ 
                "[Kostenstelle] = @Original_Kostenstelle)) AND ((@IsNull_KuerzelKontakt = 1 AND ["& _ 
                "KuerzelKontakt] IS NULL) OR ([KuerzelKontakt] = @Original_KuerzelKontakt)) AND ("& _ 
                "(@IsNull_StateCode = 1 AND [StateCode] IS NULL) OR ([StateCode] = @Original_Stat"& _ 
                "eCode)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenn"& _ 
                "ame3, Anschrift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitze"& _ 
                "r, Zielsystem, Kostenstelle, KuerzelKontakt, StateCode FROM Debitor WHERE (Id = "& _ 
                "@Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Debitornummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmenname3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Anschrift", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLZ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Land", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telefon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Homepage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sprache", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KuerzelKontakt", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirmenID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Debitornummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Debitornummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmenname2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmenname3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmenname3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmenname3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Anschrift", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Anschrift", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Anschrift", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLZ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLZ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLZ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Land", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Land", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Land", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telefon", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telefon", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telefon", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Fax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Homepage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Homepage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Homepage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sprache", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sprache", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprache", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Besitzer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Kostenstelle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KuerzelKontakt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KuerzelKontakt", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KuerzelKontakt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StateCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StateCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.CRM_Prins_tstConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenname3, Anschr"& _ 
                "ift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitzer, Zielsyste"& _ 
                "m, Kostenstelle, KuerzelKontakt, StateCode FROM dbo.Debitor"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        Id, FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenname3,"& _ 
                " Anschrift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitzer, Zi"& _ 
                "elsystem, Kostenstelle, KuerzelKontakt, StateCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Debitor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (Debitornummer = @DebitorNr)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DebitorNr", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Debitornummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCRM.DebitorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCRM.DebitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCRM.DebitorDataTable = New dsCRM.DebitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDebitorNr(ByVal dataTable As dsCRM.DebitorDataTable, ByVal DebitorNr As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DebitorNr Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DebitorNr,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDebitorNr(ByVal DebitorNr As String) As dsCRM.DebitorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DebitorNr Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DebitorNr,String)
            End If
            Dim dataTable As dsCRM.DebitorDataTable = New dsCRM.DebitorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCRM.DebitorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCRM) As Integer
            Return Me.Adapter.Update(dataSet, "Debitor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Debitornummer As String,  _
                    ByVal Original_Firmenname1 As String,  _
                    ByVal Original_Firmenname2 As String,  _
                    ByVal Original_Firmenname3 As String,  _
                    ByVal Original_Anschrift As String,  _
                    ByVal Original_PLZ As String,  _
                    ByVal Original_Ort As String,  _
                    ByVal Original_Land As String,  _
                    ByVal Original_Telefon As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_Homepage As String,  _
                    ByVal Original_Sprache As String,  _
                    ByVal Original_EMail As String,  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_KuerzelKontakt As String,  _
                    ByVal Original_StateCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_FirmenID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FirmenID,String)
            End If
            If (Original_Debitornummer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Debitornummer,String)
            End If
            If (Original_Firmenname1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Firmenname1")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Firmenname1,String)
            End If
            If (Original_Firmenname2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Firmenname2,String)
            End If
            If (Original_Firmenname3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Firmenname3,String)
            End If
            If (Original_Anschrift Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Anschrift,String)
            End If
            If (Original_PLZ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_PLZ,String)
            End If
            If (Original_Ort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Ort,String)
            End If
            If (Original_Land Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Land,String)
            End If
            If (Original_Telefon Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Telefon,String)
            End If
            If (Original_Fax Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Fax,String)
            End If
            If (Original_Homepage Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Homepage,String)
            End If
            If (Original_Sprache Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Sprache,String)
            End If
            If (Original_EMail Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_EMail,String)
            End If
            If (Original_Besitzer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Besitzer,String)
            End If
            If (Original_Zielsystem.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Zielsystem.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_Kostenstelle Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Kostenstelle,String)
            End If
            If (Original_KuerzelKontakt Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_KuerzelKontakt,String)
            End If
            If (Original_StateCode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_StateCode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal FirmenID As String,  _
                    ByVal Debitornummer As String,  _
                    ByVal Firmenname1 As String,  _
                    ByVal Firmenname2 As String,  _
                    ByVal Firmenname3 As String,  _
                    ByVal Anschrift As String,  _
                    ByVal PLZ As String,  _
                    ByVal Ort As String,  _
                    ByVal Land As String,  _
                    ByVal Telefon As String,  _
                    ByVal Fax As String,  _
                    ByVal Homepage As String,  _
                    ByVal Sprache As String,  _
                    ByVal EMail As String,  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal KuerzelKontakt As String,  _
                    ByVal StateCode As Global.System.Nullable(Of Integer)) As Integer
            If (FirmenID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FirmenID,String)
            End If
            If (Debitornummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Debitornummer,String)
            End If
            If (Firmenname1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Firmenname1")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Firmenname1,String)
            End If
            If (Firmenname2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Firmenname2,String)
            End If
            If (Firmenname3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Firmenname3,String)
            End If
            If (Anschrift Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Anschrift,String)
            End If
            If (PLZ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PLZ,String)
            End If
            If (Ort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Ort,String)
            End If
            If (Land Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Land,String)
            End If
            If (Telefon Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Telefon,String)
            End If
            If (Fax Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Fax,String)
            End If
            If (Homepage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Homepage,String)
            End If
            If (Sprache Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Sprache,String)
            End If
            If (EMail Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(EMail,String)
            End If
            If (Besitzer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Besitzer,String)
            End If
            If (Zielsystem.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Zielsystem.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Kostenstelle,String)
            End If
            If (KuerzelKontakt Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(KuerzelKontakt,String)
            End If
            If (StateCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(StateCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FirmenID As String,  _
                    ByVal Debitornummer As String,  _
                    ByVal Firmenname1 As String,  _
                    ByVal Firmenname2 As String,  _
                    ByVal Firmenname3 As String,  _
                    ByVal Anschrift As String,  _
                    ByVal PLZ As String,  _
                    ByVal Ort As String,  _
                    ByVal Land As String,  _
                    ByVal Telefon As String,  _
                    ByVal Fax As String,  _
                    ByVal Homepage As String,  _
                    ByVal Sprache As String,  _
                    ByVal EMail As String,  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal KuerzelKontakt As String,  _
                    ByVal StateCode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Debitornummer As String,  _
                    ByVal Original_Firmenname1 As String,  _
                    ByVal Original_Firmenname2 As String,  _
                    ByVal Original_Firmenname3 As String,  _
                    ByVal Original_Anschrift As String,  _
                    ByVal Original_PLZ As String,  _
                    ByVal Original_Ort As String,  _
                    ByVal Original_Land As String,  _
                    ByVal Original_Telefon As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_Homepage As String,  _
                    ByVal Original_Sprache As String,  _
                    ByVal Original_EMail As String,  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_KuerzelKontakt As String,  _
                    ByVal Original_StateCode As Global.System.Nullable(Of Integer),  _
                    ByVal Id As Integer) As Integer
            If (FirmenID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FirmenID,String)
            End If
            If (Debitornummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Debitornummer,String)
            End If
            If (Firmenname1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Firmenname1")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Firmenname1,String)
            End If
            If (Firmenname2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Firmenname2,String)
            End If
            If (Firmenname3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Firmenname3,String)
            End If
            If (Anschrift Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Anschrift,String)
            End If
            If (PLZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PLZ,String)
            End If
            If (Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Ort,String)
            End If
            If (Land Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Land,String)
            End If
            If (Telefon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Telefon,String)
            End If
            If (Fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Fax,String)
            End If
            If (Homepage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Homepage,String)
            End If
            If (Sprache Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Sprache,String)
            End If
            If (EMail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(EMail,String)
            End If
            If (Besitzer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Besitzer,String)
            End If
            If (Zielsystem.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Zielsystem.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Kostenstelle,String)
            End If
            If (KuerzelKontakt Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(KuerzelKontakt,String)
            End If
            If (StateCode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(StateCode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Id,Integer)
            If (Original_FirmenID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_FirmenID,String)
            End If
            If (Original_Debitornummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_Debitornummer,String)
            End If
            If (Original_Firmenname1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Firmenname1")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_Firmenname1,String)
            End If
            If (Original_Firmenname2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_Firmenname2,String)
            End If
            If (Original_Firmenname3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_Firmenname3,String)
            End If
            If (Original_Anschrift Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Anschrift,String)
            End If
            If (Original_PLZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_PLZ,String)
            End If
            If (Original_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Ort,String)
            End If
            If (Original_Land Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Land,String)
            End If
            If (Original_Telefon Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Telefon,String)
            End If
            If (Original_Fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_Fax,String)
            End If
            If (Original_Homepage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Homepage,String)
            End If
            If (Original_Sprache Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Sprache,String)
            End If
            If (Original_EMail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_EMail,String)
            End If
            If (Original_Besitzer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Besitzer,String)
            End If
            If (Original_Zielsystem.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Zielsystem.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_Kostenstelle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Kostenstelle,String)
            End If
            If (Original_KuerzelKontakt Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_KuerzelKontakt,String)
            End If
            If (Original_StateCode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_StateCode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FirmenID As String,  _
                    ByVal Debitornummer As String,  _
                    ByVal Firmenname1 As String,  _
                    ByVal Firmenname2 As String,  _
                    ByVal Firmenname3 As String,  _
                    ByVal Anschrift As String,  _
                    ByVal PLZ As String,  _
                    ByVal Ort As String,  _
                    ByVal Land As String,  _
                    ByVal Telefon As String,  _
                    ByVal Fax As String,  _
                    ByVal Homepage As String,  _
                    ByVal Sprache As String,  _
                    ByVal EMail As String,  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal KuerzelKontakt As String,  _
                    ByVal StateCode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Debitornummer As String,  _
                    ByVal Original_Firmenname1 As String,  _
                    ByVal Original_Firmenname2 As String,  _
                    ByVal Original_Firmenname3 As String,  _
                    ByVal Original_Anschrift As String,  _
                    ByVal Original_PLZ As String,  _
                    ByVal Original_Ort As String,  _
                    ByVal Original_Land As String,  _
                    ByVal Original_Telefon As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_Homepage As String,  _
                    ByVal Original_Sprache As String,  _
                    ByVal Original_EMail As String,  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_KuerzelKontakt As String,  _
                    ByVal Original_StateCode As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(FirmenID, Debitornummer, Firmenname1, Firmenname2, Firmenname3, Anschrift, PLZ, Ort, Land, Telefon, Fax, Homepage, Sprache, EMail, Besitzer, Zielsystem, Kostenstelle, KuerzelKontakt, StateCode, Original_Id, Original_FirmenID, Original_Debitornummer, Original_Firmenname1, Original_Firmenname2, Original_Firmenname3, Original_Anschrift, Original_PLZ, Original_Ort, Original_Land, Original_Telefon, Original_Fax, Original_Homepage, Original_Sprache, Original_EMail, Original_Besitzer, Original_Zielsystem, Original_Kostenstelle, Original_KuerzelKontakt, Original_StateCode, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ProjektTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Projekt"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Projektnummer", "Projektnummer")
            tableMapping.ColumnMappings.Add("Projektnummer_int", "Projektnummer_int")
            tableMapping.ColumnMappings.Add("Auftragsvolumen", "Auftragsvolumen")
            tableMapping.ColumnMappings.Add("AuftragsvolumenGJ", "AuftragsvolumenGJ")
            tableMapping.ColumnMappings.Add("Bezeichnung", "Bezeichnung")
            tableMapping.ColumnMappings.Add("Geschaeftsjahr", "Geschaeftsjahr")
            tableMapping.ColumnMappings.Add("Kostenstelle", "Kostenstelle")
            tableMapping.ColumnMappings.Add("FirmenID", "FirmenID")
            tableMapping.ColumnMappings.Add("Firmennummer", "Firmennummer")
            tableMapping.ColumnMappings.Add("Letzteabrechnungsperiode", "Letzteabrechnungsperiode")
            tableMapping.ColumnMappings.Add("OffeneLeistungen", "OffeneLeistungen")
            tableMapping.ColumnMappings.Add("PotRestumsatz", "PotRestumsatz")
            tableMapping.ColumnMappings.Add("Projektleiter", "Projektleiter")
            tableMapping.ColumnMappings.Add("Projektstatus", "Projektstatus")
            tableMapping.ColumnMappings.Add("UmsatzGesamt", "UmsatzGesamt")
            tableMapping.ColumnMappings.Add("UmsatzGJ", "UmsatzGJ")
            tableMapping.ColumnMappings.Add("UmsatzPeriode", "UmsatzPeriode")
            tableMapping.ColumnMappings.Add("Besitzer", "Besitzer")
            tableMapping.ColumnMappings.Add("Zielsystem", "Zielsystem")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Projekt] WHERE (([Id] = @Original_Id) AND ((@IsNull_Projektnum"& _ 
                "mer = 1 AND [Projektnummer] IS NULL) OR ([Projektnummer] = @Original_Projektnumm"& _ 
                "er)) AND ((@IsNull_Projektnummer_int = 1 AND [Projektnummer_int] IS NULL) OR ([P"& _ 
                "rojektnummer_int] = @Original_Projektnummer_int)) AND ((@IsNull_Auftragsvolumen "& _ 
                "= 1 AND [Auftragsvolumen] IS NULL) OR ([Auftragsvolumen] = @Original_Auftragsvol"& _ 
                "umen)) AND ((@IsNull_AuftragsvolumenGJ = 1 AND [AuftragsvolumenGJ] IS NULL) OR ("& _ 
                "[AuftragsvolumenGJ] = @Original_AuftragsvolumenGJ)) AND ([Bezeichnung] = @Origin"& _ 
                "al_Bezeichnung) AND ((@IsNull_Geschaeftsjahr = 1 AND [Geschaeftsjahr] IS NULL) O"& _ 
                "R ([Geschaeftsjahr] = @Original_Geschaeftsjahr)) AND ((@IsNull_Kostenstelle = 1 "& _ 
                "AND [Kostenstelle] IS NULL) OR ([Kostenstelle] = @Original_Kostenstelle)) AND (("& _ 
                "@IsNull_FirmenID = 1 AND [FirmenID] IS NULL) OR ([FirmenID] = @Original_FirmenID"& _ 
                ")) AND ((@IsNull_Firmennummer = 1 AND [Firmennummer] IS NULL) OR ([Firmennummer]"& _ 
                " = @Original_Firmennummer)) AND ((@IsNull_Letzteabrechnungsperiode = 1 AND [Letz"& _ 
                "teabrechnungsperiode] IS NULL) OR ([Letzteabrechnungsperiode] = @Original_Letzte"& _ 
                "abrechnungsperiode)) AND ((@IsNull_OffeneLeistungen = 1 AND [OffeneLeistungen] I"& _ 
                "S NULL) OR ([OffeneLeistungen] = @Original_OffeneLeistungen)) AND ((@IsNull_PotR"& _ 
                "estumsatz = 1 AND [PotRestumsatz] IS NULL) OR ([PotRestumsatz] = @Original_PotRe"& _ 
                "stumsatz)) AND ((@IsNull_Projektleiter = 1 AND [Projektleiter] IS NULL) OR ([Pro"& _ 
                "jektleiter] = @Original_Projektleiter)) AND ([Projektstatus] = @Original_Projekt"& _ 
                "status) AND ((@IsNull_UmsatzGesamt = 1 AND [UmsatzGesamt] IS NULL) OR ([UmsatzGe"& _ 
                "samt] = @Original_UmsatzGesamt)) AND ((@IsNull_UmsatzGJ = 1 AND [UmsatzGJ] IS NU"& _ 
                "LL) OR ([UmsatzGJ] = @Original_UmsatzGJ)) AND ((@IsNull_UmsatzPeriode = 1 AND [U"& _ 
                "msatzPeriode] IS NULL) OR ([UmsatzPeriode] = @Original_UmsatzPeriode)) AND ((@Is"& _ 
                "Null_Besitzer = 1 AND [Besitzer] IS NULL) OR ([Besitzer] = @Original_Besitzer)) "& _ 
                "AND ((@IsNull_Zielsystem = 1 AND [Zielsystem] IS NULL) OR ([Zielsystem] = @Origi"& _ 
                "nal_Zielsystem)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektnummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Auftragsvolumen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auftragsvolumen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Auftragsvolumen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "Auftragsvolumen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuftragsvolumenGJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuftragsvolumenGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Kostenstelle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirmenID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Letzteabrechnungsperiode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Letzteabrechnungsperiode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OffeneLeistungen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OffeneLeistungen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OffeneLeistungen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "OffeneLeistungen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PotRestumsatz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PotRestumsatz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PotRestumsatz", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PotRestumsatz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektleiter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektleiter", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektstatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektstatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzGesamt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzGesamt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzGesamt", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGesamt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzGJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzGJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzPeriode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzPeriode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzPeriode", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzPeriode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Besitzer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Projekt] ([Projektnummer], [Projektnummer_int], [Auftragsvolum"& _ 
                "en], [AuftragsvolumenGJ], [Bezeichnung], [Geschaeftsjahr], [Kostenstelle], [Firm"& _ 
                "enID], [Firmennummer], [Letzteabrechnungsperiode], [OffeneLeistungen], [PotRestu"& _ 
                "msatz], [Projektleiter], [Projektstatus], [UmsatzGesamt], [UmsatzGJ], [UmsatzPer"& _ 
                "iode], [Besitzer], [Zielsystem]) VALUES (@Projektnummer, @Projektnummer_int, @Au"& _ 
                "ftragsvolumen, @AuftragsvolumenGJ, @Bezeichnung, @Geschaeftsjahr, @Kostenstelle,"& _ 
                " @FirmenID, @Firmennummer, @Letzteabrechnungsperiode, @OffeneLeistungen, @PotRes"& _ 
                "tumsatz, @Projektleiter, @Projektstatus, @UmsatzGesamt, @UmsatzGJ, @UmsatzPeriod"& _ 
                "e, @Besitzer, @Zielsystem);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, Projektnummer, Projektnummer_int, Auftra"& _ 
                "gsvolumen, AuftragsvolumenGJ, Bezeichnung, Geschaeftsjahr, Kostenstelle, FirmenI"& _ 
                "D, Firmennummer, Letzteabrechnungsperiode, OffeneLeistungen, PotRestumsatz, Proj"& _ 
                "ektleiter, Projektstatus, UmsatzGesamt, UmsatzGJ, UmsatzPeriode, Besitzer, Ziels"& _ 
                "ystem FROM Projekt WHERE (Id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auftragsvolumen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "Auftragsvolumen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuftragsvolumenGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Letzteabrechnungsperiode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OffeneLeistungen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "OffeneLeistungen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PotRestumsatz", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PotRestumsatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektleiter", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektstatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzGesamt", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGesamt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzPeriode", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzPeriode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Projekt] SET [Projektnummer] = @Projektnummer, [Projektnummer_int] "& _ 
                "= @Projektnummer_int, [Auftragsvolumen] = @Auftragsvolumen, [AuftragsvolumenGJ] "& _ 
                "= @AuftragsvolumenGJ, [Bezeichnung] = @Bezeichnung, [Geschaeftsjahr] = @Geschaef"& _ 
                "tsjahr, [Kostenstelle] = @Kostenstelle, [FirmenID] = @FirmenID, [Firmennummer] ="& _ 
                " @Firmennummer, [Letzteabrechnungsperiode] = @Letzteabrechnungsperiode, [OffeneL"& _ 
                "eistungen] = @OffeneLeistungen, [PotRestumsatz] = @PotRestumsatz, [Projektleiter"& _ 
                "] = @Projektleiter, [Projektstatus] = @Projektstatus, [UmsatzGesamt] = @UmsatzGe"& _ 
                "samt, [UmsatzGJ] = @UmsatzGJ, [UmsatzPeriode] = @UmsatzPeriode, [Besitzer] = @Be"& _ 
                "sitzer, [Zielsystem] = @Zielsystem WHERE (([Id] = @Original_Id) AND ((@IsNull_Pr"& _ 
                "ojektnummer = 1 AND [Projektnummer] IS NULL) OR ([Projektnummer] = @Original_Pro"& _ 
                "jektnummer)) AND ((@IsNull_Projektnummer_int = 1 AND [Projektnummer_int] IS NULL"& _ 
                ") OR ([Projektnummer_int] = @Original_Projektnummer_int)) AND ((@IsNull_Auftrags"& _ 
                "volumen = 1 AND [Auftragsvolumen] IS NULL) OR ([Auftragsvolumen] = @Original_Auf"& _ 
                "tragsvolumen)) AND ((@IsNull_AuftragsvolumenGJ = 1 AND [AuftragsvolumenGJ] IS NU"& _ 
                "LL) OR ([AuftragsvolumenGJ] = @Original_AuftragsvolumenGJ)) AND ([Bezeichnung] ="& _ 
                " @Original_Bezeichnung) AND ((@IsNull_Geschaeftsjahr = 1 AND [Geschaeftsjahr] IS"& _ 
                " NULL) OR ([Geschaeftsjahr] = @Original_Geschaeftsjahr)) AND ((@IsNull_Kostenste"& _ 
                "lle = 1 AND [Kostenstelle] IS NULL) OR ([Kostenstelle] = @Original_Kostenstelle)"& _ 
                ") AND ((@IsNull_FirmenID = 1 AND [FirmenID] IS NULL) OR ([FirmenID] = @Original_"& _ 
                "FirmenID)) AND ((@IsNull_Firmennummer = 1 AND [Firmennummer] IS NULL) OR ([Firme"& _ 
                "nnummer] = @Original_Firmennummer)) AND ((@IsNull_Letzteabrechnungsperiode = 1 A"& _ 
                "ND [Letzteabrechnungsperiode] IS NULL) OR ([Letzteabrechnungsperiode] = @Origina"& _ 
                "l_Letzteabrechnungsperiode)) AND ((@IsNull_OffeneLeistungen = 1 AND [OffeneLeist"& _ 
                "ungen] IS NULL) OR ([OffeneLeistungen] = @Original_OffeneLeistungen)) AND ((@IsN"& _ 
                "ull_PotRestumsatz = 1 AND [PotRestumsatz] IS NULL) OR ([PotRestumsatz] = @Origin"& _ 
                "al_PotRestumsatz)) AND ((@IsNull_Projektleiter = 1 AND [Projektleiter] IS NULL) "& _ 
                "OR ([Projektleiter] = @Original_Projektleiter)) AND ([Projektstatus] = @Original"& _ 
                "_Projektstatus) AND ((@IsNull_UmsatzGesamt = 1 AND [UmsatzGesamt] IS NULL) OR (["& _ 
                "UmsatzGesamt] = @Original_UmsatzGesamt)) AND ((@IsNull_UmsatzGJ = 1 AND [UmsatzG"& _ 
                "J] IS NULL) OR ([UmsatzGJ] = @Original_UmsatzGJ)) AND ((@IsNull_UmsatzPeriode = "& _ 
                "1 AND [UmsatzPeriode] IS NULL) OR ([UmsatzPeriode] = @Original_UmsatzPeriode)) A"& _ 
                "ND ((@IsNull_Besitzer = 1 AND [Besitzer] IS NULL) OR ([Besitzer] = @Original_Bes"& _ 
                "itzer)) AND ((@IsNull_Zielsystem = 1 AND [Zielsystem] IS NULL) OR ([Zielsystem] "& _ 
                "= @Original_Zielsystem)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id, Projektnummer, Projektnummer_int, Auftrag"& _ 
                "svolumen, AuftragsvolumenGJ, Bezeichnung, Geschaeftsjahr, Kostenstelle, FirmenID"& _ 
                ", Firmennummer, Letzteabrechnungsperiode, OffeneLeistungen, PotRestumsatz, Proje"& _ 
                "ktleiter, Projektstatus, UmsatzGesamt, UmsatzGJ, UmsatzPeriode, Besitzer, Zielsy"& _ 
                "stem FROM Projekt WHERE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Auftragsvolumen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "Auftragsvolumen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AuftragsvolumenGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Letzteabrechnungsperiode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OffeneLeistungen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "OffeneLeistungen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PotRestumsatz", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PotRestumsatz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektleiter", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Projektstatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzGesamt", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGesamt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UmsatzPeriode", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzPeriode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektnummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektnummer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektnummer_int", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektnummer_int", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Auftragsvolumen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Auftragsvolumen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Auftragsvolumen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "Auftragsvolumen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AuftragsvolumenGJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AuftragsvolumenGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AuftragsvolumenGJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Bezeichnung", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bezeichnung", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Geschaeftsjahr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geschaeftsjahr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Kostenstelle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kostenstelle", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kostenstelle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirmenID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirmenID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirmenID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Firmennummer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Firmennummer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Letzteabrechnungsperiode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Letzteabrechnungsperiode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Letzteabrechnungsperiode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OffeneLeistungen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OffeneLeistungen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OffeneLeistungen", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "OffeneLeistungen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PotRestumsatz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PotRestumsatz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PotRestumsatz", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PotRestumsatz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Projektleiter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektleiter", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektleiter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Projektstatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Projektstatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzGesamt", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzGesamt", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzGesamt", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGesamt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzGJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzGJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzGJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzGJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UmsatzPeriode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UmsatzPeriode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UmsatzPeriode", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "UmsatzPeriode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Besitzer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Besitzer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Besitzer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Zielsystem", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zielsystem", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.CRM_Prins_tstConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Projektnummer, Projektnummer_int, Auftragsvolumen, AuftragsvolumenGJ, "& _ 
                "Bezeichnung, Geschaeftsjahr, Kostenstelle, FirmenID, Firmennummer, Letzteabrechn"& _ 
                "ungsperiode, OffeneLeistungen, PotRestumsatz, Projektleiter, Projektstatus, Umsa"& _ 
                "tzGesamt, UmsatzGJ, UmsatzPeriode, Besitzer, Zielsystem FROM dbo.Projekt"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCRM.ProjektDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCRM.ProjektDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCRM.ProjektDataTable = New dsCRM.ProjektDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCRM.ProjektDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCRM) As Integer
            Return Me.Adapter.Update(dataSet, "Projekt")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Projektnummer As String,  _
                    ByVal Original_Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Bezeichnung As String,  _
                    ByVal Original_Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Letzteabrechnungsperiode As String,  _
                    ByVal Original_OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Projektleiter As String,  _
                    ByVal Original_Projektstatus As Integer,  _
                    ByVal Original_UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Projektnummer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Projektnummer,String)
            End If
            If (Original_Projektnummer_int.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Projektnummer_int.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_Auftragsvolumen.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Auftragsvolumen.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_AuftragsvolumenGJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_AuftragsvolumenGJ.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Bezeichnung Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bezeichnung")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Bezeichnung,String)
            End If
            If (Original_Geschaeftsjahr.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Geschaeftsjahr.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_Kostenstelle Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Kostenstelle,String)
            End If
            If (Original_FirmenID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_FirmenID,String)
            End If
            If (Original_Firmennummer.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Firmennummer.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_Letzteabrechnungsperiode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Letzteabrechnungsperiode,String)
            End If
            If (Original_OffeneLeistungen.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_OffeneLeistungen.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_PotRestumsatz.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_PotRestumsatz.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_Projektleiter Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Projektleiter,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Projektstatus,Integer)
            If (Original_UmsatzGesamt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_UmsatzGesamt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_UmsatzGJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_UmsatzGJ.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_UmsatzPeriode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_UmsatzPeriode.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_Besitzer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Besitzer,String)
            End If
            If (Original_Zielsystem.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Zielsystem.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Projektnummer As String,  _
                    ByVal Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Bezeichnung As String,  _
                    ByVal Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal FirmenID As String,  _
                    ByVal Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Letzteabrechnungsperiode As String,  _
                    ByVal OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Projektleiter As String,  _
                    ByVal Projektstatus As Integer,  _
                    ByVal UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer)) As Integer
            If (Projektnummer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Projektnummer,String)
            End If
            If (Projektnummer_int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Projektnummer_int.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Auftragsvolumen.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Auftragsvolumen.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AuftragsvolumenGJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AuftragsvolumenGJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Bezeichnung Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bezeichnung")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Bezeichnung,String)
            End If
            If (Geschaeftsjahr.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Geschaeftsjahr.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Kostenstelle,String)
            End If
            If (FirmenID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FirmenID,String)
            End If
            If (Firmennummer.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Firmennummer.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Letzteabrechnungsperiode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Letzteabrechnungsperiode,String)
            End If
            If (OffeneLeistungen.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(OffeneLeistungen.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PotRestumsatz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PotRestumsatz.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Projektleiter Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Projektleiter,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Projektstatus,Integer)
            If (UmsatzGesamt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(UmsatzGesamt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (UmsatzGJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(UmsatzGJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (UmsatzPeriode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(UmsatzPeriode.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Besitzer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Besitzer,String)
            End If
            If (Zielsystem.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Zielsystem.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Projektnummer As String,  _
                    ByVal Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Bezeichnung As String,  _
                    ByVal Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal FirmenID As String,  _
                    ByVal Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Letzteabrechnungsperiode As String,  _
                    ByVal OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Projektleiter As String,  _
                    ByVal Projektstatus As Integer,  _
                    ByVal UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Projektnummer As String,  _
                    ByVal Original_Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Bezeichnung As String,  _
                    ByVal Original_Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Letzteabrechnungsperiode As String,  _
                    ByVal Original_OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Projektleiter As String,  _
                    ByVal Original_Projektstatus As Integer,  _
                    ByVal Original_UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Id As Integer) As Integer
            If (Projektnummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Projektnummer,String)
            End If
            If (Projektnummer_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Projektnummer_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Auftragsvolumen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Auftragsvolumen.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AuftragsvolumenGJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(AuftragsvolumenGJ.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Bezeichnung Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bezeichnung")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Bezeichnung,String)
            End If
            If (Geschaeftsjahr.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Geschaeftsjahr.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Kostenstelle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Kostenstelle,String)
            End If
            If (FirmenID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(FirmenID,String)
            End If
            If (Firmennummer.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Firmennummer.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Letzteabrechnungsperiode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Letzteabrechnungsperiode,String)
            End If
            If (OffeneLeistungen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(OffeneLeistungen.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PotRestumsatz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PotRestumsatz.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Projektleiter Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Projektleiter,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Projektstatus,Integer)
            If (UmsatzGesamt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(UmsatzGesamt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (UmsatzGJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(UmsatzGJ.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (UmsatzPeriode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(UmsatzPeriode.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Besitzer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Besitzer,String)
            End If
            If (Zielsystem.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Zielsystem.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Id,Integer)
            If (Original_Projektnummer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Projektnummer,String)
            End If
            If (Original_Projektnummer_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_Projektnummer_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_Auftragsvolumen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_Auftragsvolumen.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_AuftragsvolumenGJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_AuftragsvolumenGJ.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_Bezeichnung Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bezeichnung")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_Bezeichnung,String)
            End If
            If (Original_Geschaeftsjahr.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Geschaeftsjahr.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_Kostenstelle Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Kostenstelle,String)
            End If
            If (Original_FirmenID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_FirmenID,String)
            End If
            If (Original_Firmennummer.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Firmennummer.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_Letzteabrechnungsperiode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Letzteabrechnungsperiode,String)
            End If
            If (Original_OffeneLeistungen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_OffeneLeistungen.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_PotRestumsatz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_PotRestumsatz.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_Projektleiter Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Projektleiter,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Projektstatus,Integer)
            If (Original_UmsatzGesamt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_UmsatzGesamt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_UmsatzGJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_UmsatzGJ.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_UmsatzPeriode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_UmsatzPeriode.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_Besitzer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_Besitzer,String)
            End If
            If (Original_Zielsystem.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_Zielsystem.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Projektnummer As String,  _
                    ByVal Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Bezeichnung As String,  _
                    ByVal Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Kostenstelle As String,  _
                    ByVal FirmenID As String,  _
                    ByVal Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Letzteabrechnungsperiode As String,  _
                    ByVal OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Projektleiter As String,  _
                    ByVal Projektstatus As Integer,  _
                    ByVal UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Besitzer As String,  _
                    ByVal Zielsystem As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Projektnummer As String,  _
                    ByVal Original_Projektnummer_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Auftragsvolumen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AuftragsvolumenGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Bezeichnung As String,  _
                    ByVal Original_Geschaeftsjahr As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Kostenstelle As String,  _
                    ByVal Original_FirmenID As String,  _
                    ByVal Original_Firmennummer As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Letzteabrechnungsperiode As String,  _
                    ByVal Original_OffeneLeistungen As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PotRestumsatz As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Projektleiter As String,  _
                    ByVal Original_Projektstatus As Integer,  _
                    ByVal Original_UmsatzGesamt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzGJ As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UmsatzPeriode As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Besitzer As String,  _
                    ByVal Original_Zielsystem As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Projektnummer, Projektnummer_int, Auftragsvolumen, AuftragsvolumenGJ, Bezeichnung, Geschaeftsjahr, Kostenstelle, FirmenID, Firmennummer, Letzteabrechnungsperiode, OffeneLeistungen, PotRestumsatz, Projektleiter, Projektstatus, UmsatzGesamt, UmsatzGJ, UmsatzPeriode, Besitzer, Zielsystem, Original_Id, Original_Projektnummer, Original_Projektnummer_int, Original_Auftragsvolumen, Original_AuftragsvolumenGJ, Original_Bezeichnung, Original_Geschaeftsjahr, Original_Kostenstelle, Original_FirmenID, Original_Firmennummer, Original_Letzteabrechnungsperiode, Original_OffeneLeistungen, Original_PotRestumsatz, Original_Projektleiter, Original_Projektstatus, Original_UmsatzGesamt, Original_UmsatzGJ, Original_UmsatzPeriode, Original_Besitzer, Original_Zielsystem, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PeriodenabrechnungTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Periodenabrechnung"
            tableMapping.ColumnMappings.Add("PERIODE", "PERIODE")
            tableMapping.ColumnMappings.Add("PERIODE_ID", "PERIODE_ID")
            tableMapping.ColumnMappings.Add("PRJ_NUMMER", "PRJ_NUMMER")
            tableMapping.ColumnMappings.Add("KOSTENSTELLE", "KOSTENSTELLE")
            tableMapping.ColumnMappings.Add("HAUPT_KST", "HAUPT_KST")
            tableMapping.ColumnMappings.Add("SOLL_PERIODE_UMSATZ", "SOLL_PERIODE_UMSATZ")
            tableMapping.ColumnMappings.Add("SOLL_PERIODE_VORLAGE", "SOLL_PERIODE_VORLAGE")
            tableMapping.ColumnMappings.Add("SOLL_PERIODE_ILV", "SOLL_PERIODE_ILV")
            tableMapping.ColumnMappings.Add("SOLL_PERIODE_ILV_VERTRIEB", "SOLL_PERIODE_ILV_VERTRIEB")
            tableMapping.ColumnMappings.Add("SOLL_UMSATZ_GJ", "SOLL_UMSATZ_GJ")
            tableMapping.ColumnMappings.Add("SOLL_UMSATZ", "SOLL_UMSATZ")
            tableMapping.ColumnMappings.Add("SOLL_VORLAGE", "SOLL_VORLAGE")
            tableMapping.ColumnMappings.Add("SOLL_ILV", "SOLL_ILV")
            tableMapping.ColumnMappings.Add("SOLL_ILV_VERTRIEB", "SOLL_ILV_VERTRIEB")
            tableMapping.ColumnMappings.Add("RG_PERIODE_ABSCHLAG", "RG_PERIODE_ABSCHLAG")
            tableMapping.ColumnMappings.Add("RG_PERIODE", "RG_PERIODE")
            tableMapping.ColumnMappings.Add("RG_ILV_PERIODE", "RG_ILV_PERIODE")
            tableMapping.ColumnMappings.Add("RG_GESAMT_ABSCHLAG", "RG_GESAMT_ABSCHLAG")
            tableMapping.ColumnMappings.Add("RG_GESAMT", "RG_GESAMT")
            tableMapping.ColumnMappings.Add("RG_ILV", "RG_ILV")
            tableMapping.ColumnMappings.Add("DATUM_LETZTELEISTUNG", "DATUM_LETZTELEISTUNG")
            tableMapping.ColumnMappings.Add("LSTG1_A_A", "LSTG1_A_A")
            tableMapping.ColumnMappings.Add("LSTG1_A_V", "LSTG1_A_V")
            tableMapping.ColumnMappings.Add("LSTG1_A_P", "LSTG1_A_P")
            tableMapping.ColumnMappings.Add("LSTG1_ABG", "LSTG1_ABG")
            tableMapping.ColumnMappings.Add("LSTG1_N_A", "LSTG1_N_A")
            tableMapping.ColumnMappings.Add("LSTG1_N_V", "LSTG1_N_V")
            tableMapping.ColumnMappings.Add("LSTG1_N_P", "LSTG1_N_P")
            tableMapping.ColumnMappings.Add("LSTG1_NA", "LSTG1_NA")
            tableMapping.ColumnMappings.Add("LSTG1_H_A", "LSTG1_H_A")
            tableMapping.ColumnMappings.Add("LSTG1_H_V", "LSTG1_H_V")
            tableMapping.ColumnMappings.Add("LSTG1_H_P", "LSTG1_H_P")
            tableMapping.ColumnMappings.Add("LSTG1_OFFEN", "LSTG1_OFFEN")
            tableMapping.ColumnMappings.Add("LSTG1", "LSTG1")
            tableMapping.ColumnMappings.Add("LSTG2_A_A", "LSTG2_A_A")
            tableMapping.ColumnMappings.Add("LSTG2_A_V", "LSTG2_A_V")
            tableMapping.ColumnMappings.Add("LSTG2_A_P", "LSTG2_A_P")
            tableMapping.ColumnMappings.Add("LSTG2_ABG", "LSTG2_ABG")
            tableMapping.ColumnMappings.Add("LSTG2_N_A", "LSTG2_N_A")
            tableMapping.ColumnMappings.Add("LSTG2_N_V", "LSTG2_N_V")
            tableMapping.ColumnMappings.Add("LSTG2_N_P", "LSTG2_N_P")
            tableMapping.ColumnMappings.Add("LSTG2_NA", "LSTG2_NA")
            tableMapping.ColumnMappings.Add("LSTG2_H_A", "LSTG2_H_A")
            tableMapping.ColumnMappings.Add("LSTG2_H_V", "LSTG2_H_V")
            tableMapping.ColumnMappings.Add("LSTG2_H_P", "LSTG2_H_P")
            tableMapping.ColumnMappings.Add("LSTG2_OFFEN", "LSTG2_OFFEN")
            tableMapping.ColumnMappings.Add("LSTG2", "LSTG2")
            tableMapping.ColumnMappings.Add("LSTG3_A_A", "LSTG3_A_A")
            tableMapping.ColumnMappings.Add("LSTG3_A_V", "LSTG3_A_V")
            tableMapping.ColumnMappings.Add("LSTG3_A_P", "LSTG3_A_P")
            tableMapping.ColumnMappings.Add("LSTG3_ABG", "LSTG3_ABG")
            tableMapping.ColumnMappings.Add("LSTG3_N_A", "LSTG3_N_A")
            tableMapping.ColumnMappings.Add("LSTG3_N_V", "LSTG3_N_V")
            tableMapping.ColumnMappings.Add("LSTG3_N_P", "LSTG3_N_P")
            tableMapping.ColumnMappings.Add("LSTG3_NA", "LSTG3_NA")
            tableMapping.ColumnMappings.Add("LSTG3_H_A", "LSTG3_H_A")
            tableMapping.ColumnMappings.Add("LSTG3_H_V", "LSTG3_H_V")
            tableMapping.ColumnMappings.Add("LSTG3_H_P", "LSTG3_H_P")
            tableMapping.ColumnMappings.Add("LSTG3_OFFEN", "LSTG3_OFFEN")
            tableMapping.ColumnMappings.Add("LSTG3", "LSTG3")
            tableMapping.ColumnMappings.Add("LSTG4_A_A", "LSTG4_A_A")
            tableMapping.ColumnMappings.Add("LSTG4_A_V", "LSTG4_A_V")
            tableMapping.ColumnMappings.Add("LSTG4_A_P", "LSTG4_A_P")
            tableMapping.ColumnMappings.Add("LSTG4_ABG", "LSTG4_ABG")
            tableMapping.ColumnMappings.Add("LSTG4_N_A", "LSTG4_N_A")
            tableMapping.ColumnMappings.Add("LSTG4_N_V", "LSTG4_N_V")
            tableMapping.ColumnMappings.Add("LSTG4_N_P", "LSTG4_N_P")
            tableMapping.ColumnMappings.Add("LSTG4_NA", "LSTG4_NA")
            tableMapping.ColumnMappings.Add("LSTG4_H_A", "LSTG4_H_A")
            tableMapping.ColumnMappings.Add("LSTG4_H_V", "LSTG4_H_V")
            tableMapping.ColumnMappings.Add("LSTG4_H_P", "LSTG4_H_P")
            tableMapping.ColumnMappings.Add("LSTG4_OFFEN", "LSTG4_OFFEN")
            tableMapping.ColumnMappings.Add("LSTG4", "LSTG4")
            tableMapping.ColumnMappings.Add("KST_NAME", "KST_NAME")
            tableMapping.ColumnMappings.Add("PRJ_NAME1", "PRJ_NAME1")
            tableMapping.ColumnMappings.Add("PRJ_NAME2", "PRJ_NAME2")
            tableMapping.ColumnMappings.Add("PRJ_NAME3", "PRJ_NAME3")
            tableMapping.ColumnMappings.Add("BEARBEITER", "BEARBEITER")
            tableMapping.ColumnMappings.Add("IST_VERTRIEB", "IST_VERTRIEB")
            tableMapping.ColumnMappings.Add("PRJ_STATUS", "PRJ_STATUS")
            tableMapping.ColumnMappings.Add("PRJ_ORT", "PRJ_ORT")
            tableMapping.ColumnMappings.Add("PRJ_KURZNAME", "PRJ_KURZNAME")
            tableMapping.ColumnMappings.Add("RG_MAXDATUM", "RG_MAXDATUM")
            tableMapping.ColumnMappings.Add("PRJ_INTERN", "PRJ_INTERN")
            tableMapping.ColumnMappings.Add("VLG_PERIODE", "VLG_PERIODE")
            tableMapping.ColumnMappings.Add("PRJ_VERTRIEBS_ANTEIL", "PRJ_VERTRIEBS_ANTEIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Periodenabrechnung] ([PERIODE], [PERIODE_ID], [PRJ_NUMMER], [K"& _ 
                "OSTENSTELLE], [HAUPT_KST], [SOLL_PERIODE_UMSATZ], [SOLL_PERIODE_VORLAGE], [SOLL_"& _ 
                "PERIODE_ILV], [SOLL_PERIODE_ILV_VERTRIEB], [SOLL_UMSATZ_GJ], [SOLL_UMSATZ], [SOL"& _ 
                "L_VORLAGE], [SOLL_ILV], [SOLL_ILV_VERTRIEB], [RG_PERIODE_ABSCHLAG], [RG_PERIODE]"& _ 
                ", [RG_ILV_PERIODE], [RG_GESAMT_ABSCHLAG], [RG_GESAMT], [RG_ILV], [DATUM_LETZTELE"& _ 
                "ISTUNG], [LSTG1_A_A], [LSTG1_A_V], [LSTG1_A_P], [LSTG1_ABG], [LSTG1_N_A], [LSTG1"& _ 
                "_N_V], [LSTG1_N_P], [LSTG1_NA], [LSTG1_H_A], [LSTG1_H_V], [LSTG1_H_P], [LSTG1_OF"& _ 
                "FEN], [LSTG1], [LSTG2_A_A], [LSTG2_A_V], [LSTG2_A_P], [LSTG2_ABG], [LSTG2_N_A], "& _ 
                "[LSTG2_N_V], [LSTG2_N_P], [LSTG2_NA], [LSTG2_H_A], [LSTG2_H_V], [LSTG2_H_P], [LS"& _ 
                "TG2_OFFEN], [LSTG2], [LSTG3_A_A], [LSTG3_A_V], [LSTG3_A_P], [LSTG3_ABG], [LSTG3_"& _ 
                "N_A], [LSTG3_N_V], [LSTG3_N_P], [LSTG3_NA], [LSTG3_H_A], [LSTG3_H_V], [LSTG3_H_P"& _ 
                "], [LSTG3_OFFEN], [LSTG3], [LSTG4_A_A], [LSTG4_A_V], [LSTG4_A_P], [LSTG4_ABG], ["& _ 
                "LSTG4_N_A], [LSTG4_N_V], [LSTG4_N_P], [LSTG4_NA], [LSTG4_H_A], [LSTG4_H_V], [LST"& _ 
                "G4_H_P], [LSTG4_OFFEN], [LSTG4], [KST_NAME], [PRJ_NAME1], [PRJ_NAME2], [PRJ_NAME"& _ 
                "3], [BEARBEITER], [IST_VERTRIEB], [PRJ_STATUS], [PRJ_ORT], [PRJ_KURZNAME], [RG_M"& _ 
                "AXDATUM], [PRJ_INTERN], [VLG_PERIODE], [PRJ_VERTRIEBS_ANTEIL]) VALUES (@PERIODE,"& _ 
                " @PERIODE_ID, @PRJ_NUMMER, @KOSTENSTELLE, @HAUPT_KST, @SOLL_PERIODE_UMSATZ, @SOL"& _ 
                "L_PERIODE_VORLAGE, @SOLL_PERIODE_ILV, @SOLL_PERIODE_ILV_VERTRIEB, @SOLL_UMSATZ_G"& _ 
                "J, @SOLL_UMSATZ, @SOLL_VORLAGE, @SOLL_ILV, @SOLL_ILV_VERTRIEB, @RG_PERIODE_ABSCH"& _ 
                "LAG, @RG_PERIODE, @RG_ILV_PERIODE, @RG_GESAMT_ABSCHLAG, @RG_GESAMT, @RG_ILV, @DA"& _ 
                "TUM_LETZTELEISTUNG, @LSTG1_A_A, @LSTG1_A_V, @LSTG1_A_P, @LSTG1_ABG, @LSTG1_N_A, "& _ 
                "@LSTG1_N_V, @LSTG1_N_P, @LSTG1_NA, @LSTG1_H_A, @LSTG1_H_V, @LSTG1_H_P, @LSTG1_OF"& _ 
                "FEN, @LSTG1, @LSTG2_A_A, @LSTG2_A_V, @LSTG2_A_P, @LSTG2_ABG, @LSTG2_N_A, @LSTG2_"& _ 
                "N_V, @LSTG2_N_P, @LSTG2_NA, @LSTG2_H_A, @LSTG2_H_V, @LSTG2_H_P, @LSTG2_OFFEN, @L"& _ 
                "STG2, @LSTG3_A_A, @LSTG3_A_V, @LSTG3_A_P, @LSTG3_ABG, @LSTG3_N_A, @LSTG3_N_V, @L"& _ 
                "STG3_N_P, @LSTG3_NA, @LSTG3_H_A, @LSTG3_H_V, @LSTG3_H_P, @LSTG3_OFFEN, @LSTG3, @"& _ 
                "LSTG4_A_A, @LSTG4_A_V, @LSTG4_A_P, @LSTG4_ABG, @LSTG4_N_A, @LSTG4_N_V, @LSTG4_N_"& _ 
                "P, @LSTG4_NA, @LSTG4_H_A, @LSTG4_H_V, @LSTG4_H_P, @LSTG4_OFFEN, @LSTG4, @KST_NAM"& _ 
                "E, @PRJ_NAME1, @PRJ_NAME2, @PRJ_NAME3, @BEARBEITER, @IST_VERTRIEB, @PRJ_STATUS, "& _ 
                "@PRJ_ORT, @PRJ_KURZNAME, @RG_MAXDATUM, @PRJ_INTERN, @VLG_PERIODE, @PRJ_VERTRIEBS"& _ 
                "_ANTEIL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIODE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIODE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_NUMMER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_NUMMER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KOSTENSTELLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KOSTENSTELLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HAUPT_KST", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HAUPT_KST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_PERIODE_UMSATZ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_PERIODE_UMSATZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_PERIODE_VORLAGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_PERIODE_VORLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_PERIODE_ILV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_PERIODE_ILV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_PERIODE_ILV_VERTRIEB", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_PERIODE_ILV_VERTRIEB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_UMSATZ_GJ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_UMSATZ_GJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_UMSATZ", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_UMSATZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_VORLAGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_VORLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_ILV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_ILV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOLL_ILV_VERTRIEB", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SOLL_ILV_VERTRIEB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_PERIODE_ABSCHLAG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_PERIODE_ABSCHLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_PERIODE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_ILV_PERIODE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_ILV_PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_GESAMT_ABSCHLAG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_GESAMT_ABSCHLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_GESAMT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_GESAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_ILV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "RG_ILV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATUM_LETZTELEISTUNG", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATUM_LETZTELEISTUNG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_A_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_A_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_A_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_A_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_A_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_A_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_ABG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_ABG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_N_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_N_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_N_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_N_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_N_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_N_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_NA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_NA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_H_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_H_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_H_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_H_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_H_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_H_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1_OFFEN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1_OFFEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_A_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_A_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_A_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_A_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_A_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_A_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_ABG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_ABG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_N_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_N_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_N_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_N_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_N_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_N_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_NA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_NA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_H_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_H_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_H_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_H_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_H_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_H_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2_OFFEN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2_OFFEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_A_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_A_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_A_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_A_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_A_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_A_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_ABG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_ABG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_N_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_N_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_N_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_N_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_N_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_N_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_NA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_NA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_H_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_H_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_H_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_H_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_H_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_H_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3_OFFEN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3_OFFEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG3", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_A_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_A_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_A_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_A_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_A_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_A_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_ABG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_ABG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_N_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_N_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_N_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_N_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_N_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_N_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_NA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_NA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_H_A", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_H_A", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_H_V", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_H_V", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_H_P", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_H_P", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4_OFFEN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4_OFFEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LSTG4", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LSTG4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KST_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KST_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_NAME1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_NAME1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_NAME2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_NAME2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_NAME3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_NAME3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BEARBEITER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BEARBEITER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IST_VERTRIEB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IST_VERTRIEB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_ORT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_ORT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_KURZNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_KURZNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RG_MAXDATUM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RG_MAXDATUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_INTERN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRJ_INTERN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLG_PERIODE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "VLG_PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRJ_VERTRIEBS_ANTEIL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PRJ_VERTRIEBS_ANTEIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.CRM_Prins_tstConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PERIODE, PERIODE_ID, PRJ_NUMMER, KOSTENSTELLE, HAUPT_KST, SOLL_PERIODE_UMS"& _ 
                "ATZ, SOLL_PERIODE_VORLAGE, SOLL_PERIODE_ILV, SOLL_PERIODE_ILV_VERTRIEB, SOLL_UMS"& _ 
                "ATZ_GJ, SOLL_UMSATZ, SOLL_VORLAGE, SOLL_ILV, SOLL_ILV_VERTRIEB, RG_PERIODE_ABSCH"& _ 
                "LAG, RG_PERIODE, RG_ILV_PERIODE, RG_GESAMT_ABSCHLAG, RG_GESAMT, RG_ILV, DATUM_LE"& _ 
                "TZTELEISTUNG, LSTG1_A_A, LSTG1_A_V, LSTG1_A_P, LSTG1_ABG, LSTG1_N_A, LSTG1_N_V, "& _ 
                "LSTG1_N_P, LSTG1_NA, LSTG1_H_A, LSTG1_H_V, LSTG1_H_P, LSTG1_OFFEN, LSTG1, LSTG2_"& _ 
                "A_A, LSTG2_A_V, LSTG2_A_P, LSTG2_ABG, LSTG2_N_A, LSTG2_N_V, LSTG2_N_P, LSTG2_NA,"& _ 
                " LSTG2_H_A, LSTG2_H_V, LSTG2_H_P, LSTG2_OFFEN, LSTG2, LSTG3_A_A, LSTG3_A_V, LSTG"& _ 
                "3_A_P, LSTG3_ABG, LSTG3_N_A, LSTG3_N_V, LSTG3_N_P, LSTG3_NA, LSTG3_H_A, LSTG3_H_"& _ 
                "V, LSTG3_H_P, LSTG3_OFFEN, LSTG3, LSTG4_A_A, LSTG4_A_V, LSTG4_A_P, LSTG4_ABG, LS"& _ 
                "TG4_N_A, LSTG4_N_V, LSTG4_N_P, LSTG4_NA, LSTG4_H_A, LSTG4_H_V, LSTG4_H_P, LSTG4_"& _ 
                "OFFEN, LSTG4, KST_NAME, PRJ_NAME1, PRJ_NAME2, PRJ_NAME3, BEARBEITER, IST_VERTRIE"& _ 
                "B, PRJ_STATUS, PRJ_ORT, PRJ_KURZNAME, RG_MAXDATUM, PRJ_INTERN, VLG_PERIODE, PRJ_"& _ 
                "VERTRIEBS_ANTEIL FROM dbo.Periodenabrechnung"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCRM.PeriodenabrechnungDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCRM.PeriodenabrechnungDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCRM.PeriodenabrechnungDataTable = New dsCRM.PeriodenabrechnungDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCRM.PeriodenabrechnungDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCRM) As Integer
            Return Me.Adapter.Update(dataSet, "Periodenabrechnung")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PERIODE As Global.System.Nullable(Of Integer),  _
                    ByVal PERIODE_ID As Global.System.Nullable(Of Integer),  _
                    ByVal PRJ_NUMMER As Global.System.Nullable(Of Integer),  _
                    ByVal KOSTENSTELLE As Global.System.Nullable(Of Integer),  _
                    ByVal HAUPT_KST As Global.System.Nullable(Of Boolean),  _
                    ByVal SOLL_PERIODE_UMSATZ As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_PERIODE_VORLAGE As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_PERIODE_ILV As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_PERIODE_ILV_VERTRIEB As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_UMSATZ_GJ As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_UMSATZ As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_VORLAGE As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_ILV As Global.System.Nullable(Of Decimal),  _
                    ByVal SOLL_ILV_VERTRIEB As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_PERIODE_ABSCHLAG As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_PERIODE As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_ILV_PERIODE As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_GESAMT_ABSCHLAG As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_GESAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal RG_ILV As Global.System.Nullable(Of Decimal),  _
                    ByVal DATUM_LETZTELEISTUNG As Global.System.Nullable(Of Date),  _
                    ByVal LSTG1_A_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_A_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_A_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_ABG As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_N_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_N_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_N_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_NA As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_H_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_H_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_H_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1_OFFEN As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG1 As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_A_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_A_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_A_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_ABG As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_N_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_N_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_N_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_NA As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_H_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_H_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_H_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2_OFFEN As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_A_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_A_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_A_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_ABG As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_N_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_N_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_N_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_NA As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_H_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_H_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_H_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3_OFFEN As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG3 As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_A_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_A_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_A_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_ABG As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_N_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_N_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_N_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_NA As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_H_A As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_H_V As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_H_P As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4_OFFEN As Global.System.Nullable(Of Decimal),  _
                    ByVal LSTG4 As Global.System.Nullable(Of Decimal),  _
                    ByVal KST_NAME As String,  _
                    ByVal PRJ_NAME1 As String,  _
                    ByVal PRJ_NAME2 As String,  _
                    ByVal PRJ_NAME3 As String,  _
                    ByVal BEARBEITER As String,  _
                    ByVal IST_VERTRIEB As String,  _
                    ByVal PRJ_STATUS As Global.System.Nullable(Of Integer),  _
                    ByVal PRJ_ORT As String,  _
                    ByVal PRJ_KURZNAME As String,  _
                    ByVal RG_MAXDATUM As Global.System.Nullable(Of Date),  _
                    ByVal PRJ_INTERN As Global.System.Nullable(Of Boolean),  _
                    ByVal VLG_PERIODE As Global.System.Nullable(Of Decimal),  _
                    ByVal PRJ_VERTRIEBS_ANTEIL As Global.System.Nullable(Of Decimal)) As Integer
            If (PERIODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PERIODE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (PERIODE_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PERIODE_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PRJ_NUMMER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRJ_NUMMER.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (KOSTENSTELLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(KOSTENSTELLE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (HAUPT_KST.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(HAUPT_KST.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SOLL_PERIODE_UMSATZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SOLL_PERIODE_UMSATZ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SOLL_PERIODE_VORLAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SOLL_PERIODE_VORLAGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SOLL_PERIODE_ILV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SOLL_PERIODE_ILV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SOLL_PERIODE_ILV_VERTRIEB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SOLL_PERIODE_ILV_VERTRIEB.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SOLL_UMSATZ_GJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SOLL_UMSATZ_GJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (SOLL_UMSATZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SOLL_UMSATZ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SOLL_VORLAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SOLL_VORLAGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (SOLL_ILV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SOLL_ILV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SOLL_ILV_VERTRIEB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SOLL_ILV_VERTRIEB.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (RG_PERIODE_ABSCHLAG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(RG_PERIODE_ABSCHLAG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RG_PERIODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RG_PERIODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RG_ILV_PERIODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RG_ILV_PERIODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RG_GESAMT_ABSCHLAG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RG_GESAMT_ABSCHLAG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (RG_GESAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RG_GESAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RG_ILV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RG_ILV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (DATUM_LETZTELEISTUNG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DATUM_LETZTELEISTUNG.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_A_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(LSTG1_A_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_A_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(LSTG1_A_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_A_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(LSTG1_A_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_ABG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(LSTG1_ABG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_N_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(LSTG1_N_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_N_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(LSTG1_N_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_N_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LSTG1_N_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_NA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(LSTG1_NA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_H_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(LSTG1_H_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_H_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(LSTG1_H_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_H_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(LSTG1_H_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (LSTG1_OFFEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(LSTG1_OFFEN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (LSTG1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(LSTG1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_A_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(LSTG2_A_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_A_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(LSTG2_A_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_A_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(LSTG2_A_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_ABG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(LSTG2_ABG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_N_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(LSTG2_N_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_N_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(LSTG2_N_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_N_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(LSTG2_N_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_NA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(LSTG2_NA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_H_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(LSTG2_H_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_H_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(LSTG2_H_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_H_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(LSTG2_H_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (LSTG2_OFFEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(LSTG2_OFFEN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (LSTG2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(LSTG2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_A_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(LSTG3_A_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_A_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(LSTG3_A_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_A_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(LSTG3_A_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_ABG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(LSTG3_ABG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_N_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(LSTG3_N_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_N_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(LSTG3_N_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_N_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(LSTG3_N_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_NA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(LSTG3_NA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_H_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(LSTG3_H_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_H_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(LSTG3_H_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_H_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(LSTG3_H_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (LSTG3_OFFEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(LSTG3_OFFEN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (LSTG3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(LSTG3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_A_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(LSTG4_A_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_A_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(LSTG4_A_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_A_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(LSTG4_A_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_ABG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(LSTG4_ABG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_N_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(LSTG4_N_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_N_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(LSTG4_N_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_N_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(LSTG4_N_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_NA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(LSTG4_NA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_H_A.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(LSTG4_H_A.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_H_V.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(LSTG4_H_V.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_H_P.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(LSTG4_H_P.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (LSTG4_OFFEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(LSTG4_OFFEN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (LSTG4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(LSTG4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (KST_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(KST_NAME,String)
            End If
            If (PRJ_NAME1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(PRJ_NAME1,String)
            End If
            If (PRJ_NAME2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(PRJ_NAME2,String)
            End If
            If (PRJ_NAME3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(PRJ_NAME3,String)
            End If
            If (BEARBEITER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(BEARBEITER,String)
            End If
            If (IST_VERTRIEB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(IST_VERTRIEB,String)
            End If
            If (PRJ_STATUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(PRJ_STATUS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (PRJ_ORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(PRJ_ORT,String)
            End If
            If (PRJ_KURZNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(PRJ_KURZNAME,String)
            End If
            If (RG_MAXDATUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(RG_MAXDATUM.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (PRJ_INTERN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(PRJ_INTERN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (VLG_PERIODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(VLG_PERIODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (PRJ_VERTRIEBS_ANTEIL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(PRJ_VERTRIEBS_ANTEIL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_TBL_CRM_Firma_IMPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_TBL_CRM_Firma_IMP"
            tableMapping.ColumnMappings.Add("FIRMA_ID", "FIRMA_ID")
            tableMapping.ColumnMappings.Add("NAME1", "NAME1")
            tableMapping.ColumnMappings.Add("NAME2", "NAME2")
            tableMapping.ColumnMappings.Add("NAME3", "NAME3")
            tableMapping.ColumnMappings.Add("STRASSE", "STRASSE")
            tableMapping.ColumnMappings.Add("PLZ", "PLZ")
            tableMapping.ColumnMappings.Add("BL", "BL")
            tableMapping.ColumnMappings.Add("PF", "PF")
            tableMapping.ColumnMappings.Add("PF_ORT", "PF_ORT")
            tableMapping.ColumnMappings.Add("PF_PLZ", "PF_PLZ")
            tableMapping.ColumnMappings.Add("WEBSITE", "WEBSITE")
            tableMapping.ColumnMappings.Add("KUERZEL_KONTAKT", "KUERZEL_KONTAKT")
            tableMapping.ColumnMappings.Add("HPC_KONTAKT", "HPC_KONTAKT")
            tableMapping.ColumnMappings.Add("KST", "KST")
            tableMapping.ColumnMappings.Add("VERTRIEBS_MA", "VERTRIEBS_MA")
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Ort", "Ort")
            tableMapping.ColumnMappings.Add("Land", "Land")
            tableMapping.ColumnMappings.Add("StateCode", "StateCode")
            tableMapping.ColumnMappings.Add("Telefon", "Telefon")
            tableMapping.ColumnMappings.Add("Fax", "Fax")
            tableMapping.ColumnMappings.Add("EMail", "EMail")
            tableMapping.ColumnMappings.Add("Sprache", "Sprache")
            tableMapping.ColumnMappings.Add("aktiv", "aktiv")
            tableMapping.ColumnMappings.Add("Stammkunde", "Stammkunde")
            tableMapping.ColumnMappings.Add("Stammkundenbetreuer", "Stammkundenbetreuer")
            tableMapping.ColumnMappings.Add("Vertriebskunde", "Vertriebskunde")
            tableMapping.ColumnMappings.Add("Geschaeftsbeziehung", "Geschaeftsbeziehung")
            tableMapping.ColumnMappings.Add("FIRMENNUMMER", "FIRMENNUMMER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.CRM_Prins_tstConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        Id, FIRMA_ID, NAME1, NAME2, NAME3, STRASSE, PLZ, Ort, BL, Land, Sta"& _ 
                "teCode, PF, PF_ORT, PF_PLZ, Telefon, Fax, EMail, WEBSITE, Sprache, KUERZEL_KONTA"& _ 
                "KT, aktiv, HPC_KONTAKT, KST, Stammkunde, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Stammkundenb"& _ 
                "etreuer, Vertriebskunde, VERTRIEBS_MA, Geschaeftsbeziehung, FIRMENNUMMER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM  "& _ 
                "          VW_TBL_CRM_Firma_IMP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCRM.VW_TBL_CRM_Firma_IMPDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCRM.VW_TBL_CRM_Firma_IMPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCRM.VW_TBL_CRM_Firma_IMPDataTable = New dsCRM.VW_TBL_CRM_Firma_IMPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_TBL_CRM_Firma_Debitor_LNK_IMPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_TBL_CRM_Firma_Debitor_LNK_IMP"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("FIRMENNUMMER", "FIRMENNUMMER")
            tableMapping.ColumnMappings.Add("DEBITORNUMMER", "DEBITORNUMMER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.CRM_Prins_tstConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, FIRMENNUMMER, DEBITORNUMMER FROM dbo.VW_TBL_CRM_Firma_Debitor_LNK_IMP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCRM.VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCRM.VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCRM.VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable = New dsCRM.VW_TBL_CRM_Firma_Debitor_LNK_IMPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _debitorTableAdapter As DebitorTableAdapter
        
        Private _projektTableAdapter As ProjektTableAdapter
        
        Private _periodenabrechnungTableAdapter As PeriodenabrechnungTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DebitorTableAdapter() As DebitorTableAdapter
            Get
                Return Me._debitorTableAdapter
            End Get
            Set
                Me._debitorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ProjektTableAdapter() As ProjektTableAdapter
            Get
                Return Me._projektTableAdapter
            End Get
            Set
                Me._projektTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PeriodenabrechnungTableAdapter() As PeriodenabrechnungTableAdapter
            Get
                Return Me._periodenabrechnungTableAdapter
            End Get
            Set
                Me._periodenabrechnungTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._debitorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._debitorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._debitorTableAdapter.Connection
                End If
                If ((Not (Me._projektTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._projektTableAdapter.Connection) Is Nothing)) Then
                    Return Me._projektTableAdapter.Connection
                End If
                If ((Not (Me._periodenabrechnungTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._periodenabrechnungTableAdapter.Connection) Is Nothing)) Then
                    Return Me._periodenabrechnungTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._debitorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._projektTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsCRM, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._debitorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Debitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._debitorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._projektTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Projekt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._projektTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Periodenabrechnung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._periodenabrechnungTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsCRM, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._debitorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Debitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._debitorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._projektTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Projekt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._projektTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Periodenabrechnung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._periodenabrechnungTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsCRM, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Periodenabrechnung.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._periodenabrechnungTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._projektTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Projekt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._projektTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._debitorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Debitor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._debitorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsCRM) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._debitorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._debitorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            If ((Not (Me._projektTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._projektTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            If ((Not (Me._periodenabrechnungTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._periodenabrechnungTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._debitorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._debitorTableAdapter, Me._debitorTableAdapter.Connection)
                    Me._debitorTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._debitorTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._debitorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._debitorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._debitorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._projektTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._projektTableAdapter, Me._projektTableAdapter.Connection)
                    Me._projektTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._projektTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._projektTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._projektTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._projektTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._periodenabrechnungTableAdapter, Me._periodenabrechnungTableAdapter.Connection)
                    Me._periodenabrechnungTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._periodenabrechnungTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._periodenabrechnungTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._periodenabrechnungTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._periodenabrechnungTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._debitorTableAdapter) Is Nothing) Then
                    Me._debitorTableAdapter.Connection = CType(revertConnections(Me._debitorTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._debitorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._projektTableAdapter) Is Nothing) Then
                    Me._projektTableAdapter.Connection = CType(revertConnections(Me._projektTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._projektTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._periodenabrechnungTableAdapter) Is Nothing) Then
                    Me._periodenabrechnungTableAdapter.Connection = CType(revertConnections(Me._periodenabrechnungTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._periodenabrechnungTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
