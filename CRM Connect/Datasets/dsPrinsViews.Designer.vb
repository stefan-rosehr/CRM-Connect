'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPrinsViews"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPrinsViews
    Inherits Global.System.Data.DataSet
    
    Private tableVW_KUNDEN_TO_CRM As VW_KUNDEN_TO_CRMDataTable
    
    Private tableVW_ADRESSEN_FIRMA_CRM As VW_ADRESSEN_FIRMA_CRMDataTable
    
    Private tableVW_PROJEKT_CRM As VW_PROJEKT_CRMDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VW_KUNDEN_TO_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_KUNDEN_TO_CRMDataTable(ds.Tables("VW_KUNDEN_TO_CRM")))
            End If
            If (Not (ds.Tables("VW_ADRESSEN_FIRMA_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_ADRESSEN_FIRMA_CRMDataTable(ds.Tables("VW_ADRESSEN_FIRMA_CRM")))
            End If
            If (Not (ds.Tables("VW_PROJEKT_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PROJEKT_CRMDataTable(ds.Tables("VW_PROJEKT_CRM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_KUNDEN_TO_CRM() As VW_KUNDEN_TO_CRMDataTable
        Get
            Return Me.tableVW_KUNDEN_TO_CRM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_ADRESSEN_FIRMA_CRM() As VW_ADRESSEN_FIRMA_CRMDataTable
        Get
            Return Me.tableVW_ADRESSEN_FIRMA_CRM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_PROJEKT_CRM() As VW_PROJEKT_CRMDataTable
        Get
            Return Me.tableVW_PROJEKT_CRM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPrinsViews = CType(MyBase.Clone,dsPrinsViews)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("VW_KUNDEN_TO_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_KUNDEN_TO_CRMDataTable(ds.Tables("VW_KUNDEN_TO_CRM")))
            End If
            If (Not (ds.Tables("VW_ADRESSEN_FIRMA_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_ADRESSEN_FIRMA_CRMDataTable(ds.Tables("VW_ADRESSEN_FIRMA_CRM")))
            End If
            If (Not (ds.Tables("VW_PROJEKT_CRM")) Is Nothing) Then
                MyBase.Tables.Add(New VW_PROJEKT_CRMDataTable(ds.Tables("VW_PROJEKT_CRM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVW_KUNDEN_TO_CRM = CType(MyBase.Tables("VW_KUNDEN_TO_CRM"),VW_KUNDEN_TO_CRMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_KUNDEN_TO_CRM) Is Nothing) Then
                Me.tableVW_KUNDEN_TO_CRM.InitVars
            End If
        End If
        Me.tableVW_ADRESSEN_FIRMA_CRM = CType(MyBase.Tables("VW_ADRESSEN_FIRMA_CRM"),VW_ADRESSEN_FIRMA_CRMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_ADRESSEN_FIRMA_CRM) Is Nothing) Then
                Me.tableVW_ADRESSEN_FIRMA_CRM.InitVars
            End If
        End If
        Me.tableVW_PROJEKT_CRM = CType(MyBase.Tables("VW_PROJEKT_CRM"),VW_PROJEKT_CRMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_PROJEKT_CRM) Is Nothing) Then
                Me.tableVW_PROJEKT_CRM.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPrinsViews"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPrinsViews.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVW_KUNDEN_TO_CRM = New VW_KUNDEN_TO_CRMDataTable()
        MyBase.Tables.Add(Me.tableVW_KUNDEN_TO_CRM)
        Me.tableVW_ADRESSEN_FIRMA_CRM = New VW_ADRESSEN_FIRMA_CRMDataTable()
        MyBase.Tables.Add(Me.tableVW_ADRESSEN_FIRMA_CRM)
        Me.tableVW_PROJEKT_CRM = New VW_PROJEKT_CRMDataTable()
        MyBase.Tables.Add(Me.tableVW_PROJEKT_CRM)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeVW_KUNDEN_TO_CRM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeVW_ADRESSEN_FIRMA_CRM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeVW_PROJEKT_CRM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPrinsViews = New dsPrinsViews()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub VW_KUNDEN_TO_CRMRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_KUNDEN_TO_CRMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub VW_ADRESSEN_FIRMA_CRMRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_ADRESSEN_FIRMA_CRMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub VW_PROJEKT_CRMRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_PROJEKT_CRMRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_KUNDEN_TO_CRMDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_KUNDEN_TO_CRMRow)
        
        Private columnFIRMENID As Global.System.Data.DataColumn
        
        Private columnFIRMENNUMMER As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME1 As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME2 As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME3 As Global.System.Data.DataColumn
        
        Private columnANSCHRIFT As Global.System.Data.DataColumn
        
        Private columnPLZ As Global.System.Data.DataColumn
        
        Private columnORT As Global.System.Data.DataColumn
        
        Private columnTELEFON As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnHOMEPAGE As Global.System.Data.DataColumn
        
        Private columnSPRACHE As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnLAND As Global.System.Data.DataColumn
        
        Private columnZIELSYSTEM As Global.System.Data.DataColumn
        
        Private columnBESITZER As Global.System.Data.DataColumn
        
        Private columnKOSTENSTELLE As Global.System.Data.DataColumn
        
        Private columnKUERZELKONTAKT As Global.System.Data.DataColumn
        
        Private columnSTATECODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_KUNDEN_TO_CRM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ANSCHRIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANSCHRIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HOMEPAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOMEPAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SPRACHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPRACHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZIELSYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIELSYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BESITZERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBESITZER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KOSTENSTELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOSTENSTELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KUERZELKONTAKTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKUERZELKONTAKT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property STATECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_KUNDEN_TO_CRMRow
            Get
                Return CType(Me.Rows(index),VW_KUNDEN_TO_CRMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_KUNDEN_TO_CRMRowChanging As VW_KUNDEN_TO_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_KUNDEN_TO_CRMRowChanged As VW_KUNDEN_TO_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_KUNDEN_TO_CRMRowDeleting As VW_KUNDEN_TO_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_KUNDEN_TO_CRMRowDeleted As VW_KUNDEN_TO_CRMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddVW_KUNDEN_TO_CRMRow(ByVal row As VW_KUNDEN_TO_CRMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddVW_KUNDEN_TO_CRMRow( _
                    ByVal FIRMENID As String,  _
                    ByVal FIRMENNUMMER As Integer,  _
                    ByVal FIRMENNAME1 As String,  _
                    ByVal FIRMENNAME2 As String,  _
                    ByVal FIRMENNAME3 As String,  _
                    ByVal ANSCHRIFT As String,  _
                    ByVal PLZ As String,  _
                    ByVal ORT As String,  _
                    ByVal TELEFON As String,  _
                    ByVal FAX As String,  _
                    ByVal HOMEPAGE As String,  _
                    ByVal SPRACHE As String,  _
                    ByVal EMAIL As String,  _
                    ByVal LAND As String,  _
                    ByVal ZIELSYSTEM As Integer,  _
                    ByVal BESITZER As String,  _
                    ByVal KOSTENSTELLE As Integer,  _
                    ByVal KUERZELKONTAKT As String,  _
                    ByVal STATECODE As Integer) As VW_KUNDEN_TO_CRMRow
            Dim rowVW_KUNDEN_TO_CRMRow As VW_KUNDEN_TO_CRMRow = CType(Me.NewRow,VW_KUNDEN_TO_CRMRow)
            Dim columnValuesArray() As Object = New Object() {FIRMENID, FIRMENNUMMER, FIRMENNAME1, FIRMENNAME2, FIRMENNAME3, ANSCHRIFT, PLZ, ORT, TELEFON, FAX, HOMEPAGE, SPRACHE, EMAIL, LAND, ZIELSYSTEM, BESITZER, KOSTENSTELLE, KUERZELKONTAKT, STATECODE}
            rowVW_KUNDEN_TO_CRMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_KUNDEN_TO_CRMRow)
            Return rowVW_KUNDEN_TO_CRMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_KUNDEN_TO_CRMDataTable = CType(MyBase.Clone,VW_KUNDEN_TO_CRMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_KUNDEN_TO_CRMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFIRMENID = MyBase.Columns("FIRMENID")
            Me.columnFIRMENNUMMER = MyBase.Columns("FIRMENNUMMER")
            Me.columnFIRMENNAME1 = MyBase.Columns("FIRMENNAME1")
            Me.columnFIRMENNAME2 = MyBase.Columns("FIRMENNAME2")
            Me.columnFIRMENNAME3 = MyBase.Columns("FIRMENNAME3")
            Me.columnANSCHRIFT = MyBase.Columns("ANSCHRIFT")
            Me.columnPLZ = MyBase.Columns("PLZ")
            Me.columnORT = MyBase.Columns("ORT")
            Me.columnTELEFON = MyBase.Columns("TELEFON")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnHOMEPAGE = MyBase.Columns("HOMEPAGE")
            Me.columnSPRACHE = MyBase.Columns("SPRACHE")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnLAND = MyBase.Columns("LAND")
            Me.columnZIELSYSTEM = MyBase.Columns("ZIELSYSTEM")
            Me.columnBESITZER = MyBase.Columns("BESITZER")
            Me.columnKOSTENSTELLE = MyBase.Columns("KOSTENSTELLE")
            Me.columnKUERZELKONTAKT = MyBase.Columns("KUERZELKONTAKT")
            Me.columnSTATECODE = MyBase.Columns("STATECODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFIRMENID = New Global.System.Data.DataColumn("FIRMENID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENID)
            Me.columnFIRMENNUMMER = New Global.System.Data.DataColumn("FIRMENNUMMER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNUMMER)
            Me.columnFIRMENNAME1 = New Global.System.Data.DataColumn("FIRMENNAME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME1)
            Me.columnFIRMENNAME2 = New Global.System.Data.DataColumn("FIRMENNAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME2)
            Me.columnFIRMENNAME3 = New Global.System.Data.DataColumn("FIRMENNAME3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME3)
            Me.columnANSCHRIFT = New Global.System.Data.DataColumn("ANSCHRIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANSCHRIFT)
            Me.columnPLZ = New Global.System.Data.DataColumn("PLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLZ)
            Me.columnORT = New Global.System.Data.DataColumn("ORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORT)
            Me.columnTELEFON = New Global.System.Data.DataColumn("TELEFON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFON)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnHOMEPAGE = New Global.System.Data.DataColumn("HOMEPAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOMEPAGE)
            Me.columnSPRACHE = New Global.System.Data.DataColumn("SPRACHE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPRACHE)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnLAND = New Global.System.Data.DataColumn("LAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAND)
            Me.columnZIELSYSTEM = New Global.System.Data.DataColumn("ZIELSYSTEM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIELSYSTEM)
            Me.columnBESITZER = New Global.System.Data.DataColumn("BESITZER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBESITZER)
            Me.columnKOSTENSTELLE = New Global.System.Data.DataColumn("KOSTENSTELLE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOSTENSTELLE)
            Me.columnKUERZELKONTAKT = New Global.System.Data.DataColumn("KUERZELKONTAKT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKUERZELKONTAKT)
            Me.columnSTATECODE = New Global.System.Data.DataColumn("STATECODE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATECODE)
            Me.columnFIRMENID.MaxLength = 64
            Me.columnFIRMENNAME1.MaxLength = 255
            Me.columnFIRMENNAME2.MaxLength = 255
            Me.columnFIRMENNAME3.MaxLength = 255
            Me.columnANSCHRIFT.MaxLength = 255
            Me.columnPLZ.MaxLength = 64
            Me.columnORT.MaxLength = 255
            Me.columnTELEFON.MaxLength = 255
            Me.columnFAX.MaxLength = 255
            Me.columnHOMEPAGE.MaxLength = 64
            Me.columnSPRACHE.MaxLength = 10
            Me.columnEMAIL.MaxLength = 255
            Me.columnLAND.MaxLength = 64
            Me.columnZIELSYSTEM.ReadOnly = true
            Me.columnBESITZER.ReadOnly = true
            Me.columnBESITZER.MaxLength = 64
            Me.columnKUERZELKONTAKT.MaxLength = 64
            Me.columnSTATECODE.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewVW_KUNDEN_TO_CRMRow() As VW_KUNDEN_TO_CRMRow
            Return CType(Me.NewRow,VW_KUNDEN_TO_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_KUNDEN_TO_CRMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_KUNDEN_TO_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_KUNDEN_TO_CRMRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_KUNDEN_TO_CRMRowChanged(Me, New VW_KUNDEN_TO_CRMRowChangeEvent(CType(e.Row,VW_KUNDEN_TO_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_KUNDEN_TO_CRMRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_KUNDEN_TO_CRMRowChanging(Me, New VW_KUNDEN_TO_CRMRowChangeEvent(CType(e.Row,VW_KUNDEN_TO_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_KUNDEN_TO_CRMRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_KUNDEN_TO_CRMRowDeleted(Me, New VW_KUNDEN_TO_CRMRowChangeEvent(CType(e.Row,VW_KUNDEN_TO_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_KUNDEN_TO_CRMRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_KUNDEN_TO_CRMRowDeleting(Me, New VW_KUNDEN_TO_CRMRowChangeEvent(CType(e.Row,VW_KUNDEN_TO_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveVW_KUNDEN_TO_CRMRow(ByVal row As VW_KUNDEN_TO_CRMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPrinsViews = New dsPrinsViews()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_KUNDEN_TO_CRMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_ADRESSEN_FIRMA_CRMDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_ADRESSEN_FIRMA_CRMRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnFIRMENID As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME1 As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME2 As Global.System.Data.DataColumn
        
        Private columnFIRMENNAME3 As Global.System.Data.DataColumn
        
        Private columnANSCHRIFT As Global.System.Data.DataColumn
        
        Private columnPLZ As Global.System.Data.DataColumn
        
        Private columnORT As Global.System.Data.DataColumn
        
        Private columnTELEFON As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnHOMEPAGE As Global.System.Data.DataColumn
        
        Private columnSPRACHE As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnLAND As Global.System.Data.DataColumn
        
        Private columnZIELSYSTEM As Global.System.Data.DataColumn
        
        Private columnBESITZER As Global.System.Data.DataColumn
        
        Private columnAKTIV As Global.System.Data.DataColumn
        
        Private columnADRESSEN_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_ADRESSEN_FIRMA_CRM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNAME3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNAME3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ANSCHRIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANSCHRIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEFONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HOMEPAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOMEPAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SPRACHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPRACHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZIELSYSTEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIELSYSTEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BESITZERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBESITZER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AKTIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAKTIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADRESSEN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADRESSEN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_ADRESSEN_FIRMA_CRMRow
            Get
                Return CType(Me.Rows(index),VW_ADRESSEN_FIRMA_CRMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_ADRESSEN_FIRMA_CRMRowChanging As VW_ADRESSEN_FIRMA_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_ADRESSEN_FIRMA_CRMRowChanged As VW_ADRESSEN_FIRMA_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_ADRESSEN_FIRMA_CRMRowDeleting As VW_ADRESSEN_FIRMA_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_ADRESSEN_FIRMA_CRMRowDeleted As VW_ADRESSEN_FIRMA_CRMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddVW_ADRESSEN_FIRMA_CRMRow(ByVal row As VW_ADRESSEN_FIRMA_CRMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddVW_ADRESSEN_FIRMA_CRMRow( _
                    ByVal ID As Integer,  _
                    ByVal FIRMENID As String,  _
                    ByVal FIRMENNAME1 As String,  _
                    ByVal FIRMENNAME2 As String,  _
                    ByVal FIRMENNAME3 As String,  _
                    ByVal ANSCHRIFT As String,  _
                    ByVal PLZ As String,  _
                    ByVal ORT As String,  _
                    ByVal TELEFON As String,  _
                    ByVal FAX As String,  _
                    ByVal HOMEPAGE As String,  _
                    ByVal SPRACHE As String,  _
                    ByVal EMAIL As String,  _
                    ByVal LAND As String,  _
                    ByVal ZIELSYSTEM As Integer,  _
                    ByVal BESITZER As String,  _
                    ByVal AKTIV As Integer,  _
                    ByVal ADRESSEN_ID As Integer) As VW_ADRESSEN_FIRMA_CRMRow
            Dim rowVW_ADRESSEN_FIRMA_CRMRow As VW_ADRESSEN_FIRMA_CRMRow = CType(Me.NewRow,VW_ADRESSEN_FIRMA_CRMRow)
            Dim columnValuesArray() As Object = New Object() {ID, FIRMENID, FIRMENNAME1, FIRMENNAME2, FIRMENNAME3, ANSCHRIFT, PLZ, ORT, TELEFON, FAX, HOMEPAGE, SPRACHE, EMAIL, LAND, ZIELSYSTEM, BESITZER, AKTIV, ADRESSEN_ID}
            rowVW_ADRESSEN_FIRMA_CRMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_ADRESSEN_FIRMA_CRMRow)
            Return rowVW_ADRESSEN_FIRMA_CRMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_ADRESSEN_FIRMA_CRMDataTable = CType(MyBase.Clone,VW_ADRESSEN_FIRMA_CRMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_ADRESSEN_FIRMA_CRMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnFIRMENID = MyBase.Columns("FIRMENID")
            Me.columnFIRMENNAME1 = MyBase.Columns("FIRMENNAME1")
            Me.columnFIRMENNAME2 = MyBase.Columns("FIRMENNAME2")
            Me.columnFIRMENNAME3 = MyBase.Columns("FIRMENNAME3")
            Me.columnANSCHRIFT = MyBase.Columns("ANSCHRIFT")
            Me.columnPLZ = MyBase.Columns("PLZ")
            Me.columnORT = MyBase.Columns("ORT")
            Me.columnTELEFON = MyBase.Columns("TELEFON")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnHOMEPAGE = MyBase.Columns("HOMEPAGE")
            Me.columnSPRACHE = MyBase.Columns("SPRACHE")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnLAND = MyBase.Columns("LAND")
            Me.columnZIELSYSTEM = MyBase.Columns("ZIELSYSTEM")
            Me.columnBESITZER = MyBase.Columns("BESITZER")
            Me.columnAKTIV = MyBase.Columns("AKTIV")
            Me.columnADRESSEN_ID = MyBase.Columns("ADRESSEN_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnFIRMENID = New Global.System.Data.DataColumn("FIRMENID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENID)
            Me.columnFIRMENNAME1 = New Global.System.Data.DataColumn("FIRMENNAME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME1)
            Me.columnFIRMENNAME2 = New Global.System.Data.DataColumn("FIRMENNAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME2)
            Me.columnFIRMENNAME3 = New Global.System.Data.DataColumn("FIRMENNAME3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNAME3)
            Me.columnANSCHRIFT = New Global.System.Data.DataColumn("ANSCHRIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANSCHRIFT)
            Me.columnPLZ = New Global.System.Data.DataColumn("PLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLZ)
            Me.columnORT = New Global.System.Data.DataColumn("ORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORT)
            Me.columnTELEFON = New Global.System.Data.DataColumn("TELEFON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFON)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnHOMEPAGE = New Global.System.Data.DataColumn("HOMEPAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOMEPAGE)
            Me.columnSPRACHE = New Global.System.Data.DataColumn("SPRACHE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPRACHE)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnLAND = New Global.System.Data.DataColumn("LAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAND)
            Me.columnZIELSYSTEM = New Global.System.Data.DataColumn("ZIELSYSTEM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIELSYSTEM)
            Me.columnBESITZER = New Global.System.Data.DataColumn("BESITZER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBESITZER)
            Me.columnAKTIV = New Global.System.Data.DataColumn("AKTIV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAKTIV)
            Me.columnADRESSEN_ID = New Global.System.Data.DataColumn("ADRESSEN_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADRESSEN_ID)
            Me.columnFIRMENID.MaxLength = 64
            Me.columnFIRMENNAME1.MaxLength = 255
            Me.columnFIRMENNAME2.MaxLength = 255
            Me.columnFIRMENNAME3.MaxLength = 255
            Me.columnANSCHRIFT.MaxLength = 255
            Me.columnPLZ.MaxLength = 64
            Me.columnORT.MaxLength = 255
            Me.columnTELEFON.MaxLength = 64
            Me.columnFAX.MaxLength = 64
            Me.columnHOMEPAGE.MaxLength = 255
            Me.columnSPRACHE.ReadOnly = true
            Me.columnSPRACHE.MaxLength = 8
            Me.columnEMAIL.MaxLength = 64
            Me.columnLAND.MaxLength = 64
            Me.columnZIELSYSTEM.ReadOnly = true
            Me.columnBESITZER.MaxLength = 128
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewVW_ADRESSEN_FIRMA_CRMRow() As VW_ADRESSEN_FIRMA_CRMRow
            Return CType(Me.NewRow,VW_ADRESSEN_FIRMA_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_ADRESSEN_FIRMA_CRMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_ADRESSEN_FIRMA_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_ADRESSEN_FIRMA_CRMRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_ADRESSEN_FIRMA_CRMRowChanged(Me, New VW_ADRESSEN_FIRMA_CRMRowChangeEvent(CType(e.Row,VW_ADRESSEN_FIRMA_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_ADRESSEN_FIRMA_CRMRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_ADRESSEN_FIRMA_CRMRowChanging(Me, New VW_ADRESSEN_FIRMA_CRMRowChangeEvent(CType(e.Row,VW_ADRESSEN_FIRMA_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_ADRESSEN_FIRMA_CRMRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_ADRESSEN_FIRMA_CRMRowDeleted(Me, New VW_ADRESSEN_FIRMA_CRMRowChangeEvent(CType(e.Row,VW_ADRESSEN_FIRMA_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_ADRESSEN_FIRMA_CRMRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_ADRESSEN_FIRMA_CRMRowDeleting(Me, New VW_ADRESSEN_FIRMA_CRMRowChangeEvent(CType(e.Row,VW_ADRESSEN_FIRMA_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveVW_ADRESSEN_FIRMA_CRMRow(ByVal row As VW_ADRESSEN_FIRMA_CRMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPrinsViews = New dsPrinsViews()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_ADRESSEN_FIRMA_CRMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_PROJEKT_CRMDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_PROJEKT_CRMRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnFIRMENID As Global.System.Data.DataColumn
        
        Private columnGESCHAEFTSJAHR As Global.System.Data.DataColumn
        
        Private columnPROJEKTNUMMER As Global.System.Data.DataColumn
        
        Private columnPROJEKTID As Global.System.Data.DataColumn
        
        Private columnBEZEICHNUNG As Global.System.Data.DataColumn
        
        Private columnBESITZER As Global.System.Data.DataColumn
        
        Private columnKOSTENSTELLE As Global.System.Data.DataColumn
        
        Private columnPROJEKTSTATUS As Global.System.Data.DataColumn
        
        Private columnPOTRESTUMSATZ As Global.System.Data.DataColumn
        
        Private columnAUFTRAGSVOLUMEN As Global.System.Data.DataColumn
        
        Private columnAUFTRAGSVOLUMENGJ As Global.System.Data.DataColumn
        
        Private columnLETZTEABRECHNUNGSPERIODE As Global.System.Data.DataColumn
        
        Private columnUMSATZPERIODE As Global.System.Data.DataColumn
        
        Private columnOFFENELEISTUNGEN As Global.System.Data.DataColumn
        
        Private columnUMSATZGESAMT As Global.System.Data.DataColumn
        
        Private columnFIRMENNUMMER As Global.System.Data.DataColumn
        
        Private columnPROJEKTLEITER As Global.System.Data.DataColumn
        
        Private columnUMSATZGJ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_PROJEKT_CRM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GESCHAEFTSJAHRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGESCHAEFTSJAHR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKTNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKTNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BEZEICHNUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEZEICHNUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BESITZERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBESITZER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KOSTENSTELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOSTENSTELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKTSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKTSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property POTRESTUMSATZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOTRESTUMSATZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AUFTRAGSVOLUMENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUFTRAGSVOLUMEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AUFTRAGSVOLUMENGJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUFTRAGSVOLUMENGJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LETZTEABRECHNUNGSPERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLETZTEABRECHNUNGSPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UMSATZPERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUMSATZPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OFFENELEISTUNGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFFENELEISTUNGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UMSATZGESAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUMSATZGESAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FIRMENNUMMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRMENNUMMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKTLEITERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKTLEITER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UMSATZGJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUMSATZGJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_PROJEKT_CRMRow
            Get
                Return CType(Me.Rows(index),VW_PROJEKT_CRMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_PROJEKT_CRMRowChanging As VW_PROJEKT_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_PROJEKT_CRMRowChanged As VW_PROJEKT_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_PROJEKT_CRMRowDeleting As VW_PROJEKT_CRMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VW_PROJEKT_CRMRowDeleted As VW_PROJEKT_CRMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddVW_PROJEKT_CRMRow(ByVal row As VW_PROJEKT_CRMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddVW_PROJEKT_CRMRow( _
                    ByVal ID As Integer,  _
                    ByVal FIRMENID As String,  _
                    ByVal GESCHAEFTSJAHR As Integer,  _
                    ByVal PROJEKTNUMMER As Integer,  _
                    ByVal PROJEKTID As String,  _
                    ByVal BEZEICHNUNG As String,  _
                    ByVal BESITZER As String,  _
                    ByVal KOSTENSTELLE As String,  _
                    ByVal PROJEKTSTATUS As Integer,  _
                    ByVal POTRESTUMSATZ As Decimal,  _
                    ByVal AUFTRAGSVOLUMEN As Double,  _
                    ByVal AUFTRAGSVOLUMENGJ As Double,  _
                    ByVal LETZTEABRECHNUNGSPERIODE As String,  _
                    ByVal UMSATZPERIODE As Double,  _
                    ByVal OFFENELEISTUNGEN As Double,  _
                    ByVal UMSATZGESAMT As Double,  _
                    ByVal FIRMENNUMMER As Integer,  _
                    ByVal PROJEKTLEITER As String,  _
                    ByVal UMSATZGJ As Double) As VW_PROJEKT_CRMRow
            Dim rowVW_PROJEKT_CRMRow As VW_PROJEKT_CRMRow = CType(Me.NewRow,VW_PROJEKT_CRMRow)
            Dim columnValuesArray() As Object = New Object() {ID, FIRMENID, GESCHAEFTSJAHR, PROJEKTNUMMER, PROJEKTID, BEZEICHNUNG, BESITZER, KOSTENSTELLE, PROJEKTSTATUS, POTRESTUMSATZ, AUFTRAGSVOLUMEN, AUFTRAGSVOLUMENGJ, LETZTEABRECHNUNGSPERIODE, UMSATZPERIODE, OFFENELEISTUNGEN, UMSATZGESAMT, FIRMENNUMMER, PROJEKTLEITER, UMSATZGJ}
            rowVW_PROJEKT_CRMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_PROJEKT_CRMRow)
            Return rowVW_PROJEKT_CRMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_PROJEKT_CRMDataTable = CType(MyBase.Clone,VW_PROJEKT_CRMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_PROJEKT_CRMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnFIRMENID = MyBase.Columns("FIRMENID")
            Me.columnGESCHAEFTSJAHR = MyBase.Columns("GESCHAEFTSJAHR")
            Me.columnPROJEKTNUMMER = MyBase.Columns("PROJEKTNUMMER")
            Me.columnPROJEKTID = MyBase.Columns("PROJEKTID")
            Me.columnBEZEICHNUNG = MyBase.Columns("BEZEICHNUNG")
            Me.columnBESITZER = MyBase.Columns("BESITZER")
            Me.columnKOSTENSTELLE = MyBase.Columns("KOSTENSTELLE")
            Me.columnPROJEKTSTATUS = MyBase.Columns("PROJEKTSTATUS")
            Me.columnPOTRESTUMSATZ = MyBase.Columns("POTRESTUMSATZ")
            Me.columnAUFTRAGSVOLUMEN = MyBase.Columns("AUFTRAGSVOLUMEN")
            Me.columnAUFTRAGSVOLUMENGJ = MyBase.Columns("AUFTRAGSVOLUMENGJ")
            Me.columnLETZTEABRECHNUNGSPERIODE = MyBase.Columns("LETZTEABRECHNUNGSPERIODE")
            Me.columnUMSATZPERIODE = MyBase.Columns("UMSATZPERIODE")
            Me.columnOFFENELEISTUNGEN = MyBase.Columns("OFFENELEISTUNGEN")
            Me.columnUMSATZGESAMT = MyBase.Columns("UMSATZGESAMT")
            Me.columnFIRMENNUMMER = MyBase.Columns("FIRMENNUMMER")
            Me.columnPROJEKTLEITER = MyBase.Columns("PROJEKTLEITER")
            Me.columnUMSATZGJ = MyBase.Columns("UMSATZGJ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnFIRMENID = New Global.System.Data.DataColumn("FIRMENID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENID)
            Me.columnGESCHAEFTSJAHR = New Global.System.Data.DataColumn("GESCHAEFTSJAHR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGESCHAEFTSJAHR)
            Me.columnPROJEKTNUMMER = New Global.System.Data.DataColumn("PROJEKTNUMMER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKTNUMMER)
            Me.columnPROJEKTID = New Global.System.Data.DataColumn("PROJEKTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKTID)
            Me.columnBEZEICHNUNG = New Global.System.Data.DataColumn("BEZEICHNUNG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEZEICHNUNG)
            Me.columnBESITZER = New Global.System.Data.DataColumn("BESITZER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBESITZER)
            Me.columnKOSTENSTELLE = New Global.System.Data.DataColumn("KOSTENSTELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOSTENSTELLE)
            Me.columnPROJEKTSTATUS = New Global.System.Data.DataColumn("PROJEKTSTATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKTSTATUS)
            Me.columnPOTRESTUMSATZ = New Global.System.Data.DataColumn("POTRESTUMSATZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOTRESTUMSATZ)
            Me.columnAUFTRAGSVOLUMEN = New Global.System.Data.DataColumn("AUFTRAGSVOLUMEN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUFTRAGSVOLUMEN)
            Me.columnAUFTRAGSVOLUMENGJ = New Global.System.Data.DataColumn("AUFTRAGSVOLUMENGJ", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUFTRAGSVOLUMENGJ)
            Me.columnLETZTEABRECHNUNGSPERIODE = New Global.System.Data.DataColumn("LETZTEABRECHNUNGSPERIODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLETZTEABRECHNUNGSPERIODE)
            Me.columnUMSATZPERIODE = New Global.System.Data.DataColumn("UMSATZPERIODE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUMSATZPERIODE)
            Me.columnOFFENELEISTUNGEN = New Global.System.Data.DataColumn("OFFENELEISTUNGEN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFFENELEISTUNGEN)
            Me.columnUMSATZGESAMT = New Global.System.Data.DataColumn("UMSATZGESAMT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUMSATZGESAMT)
            Me.columnFIRMENNUMMER = New Global.System.Data.DataColumn("FIRMENNUMMER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRMENNUMMER)
            Me.columnPROJEKTLEITER = New Global.System.Data.DataColumn("PROJEKTLEITER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKTLEITER)
            Me.columnUMSATZGJ = New Global.System.Data.DataColumn("UMSATZGJ", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUMSATZGJ)
            Me.columnFIRMENID.MaxLength = 64
            Me.columnGESCHAEFTSJAHR.ReadOnly = true
            Me.columnPROJEKTID.MaxLength = 64
            Me.columnBEZEICHNUNG.MaxLength = 255
            Me.columnBESITZER.ReadOnly = true
            Me.columnBESITZER.MaxLength = 64
            Me.columnKOSTENSTELLE.ReadOnly = true
            Me.columnKOSTENSTELLE.MaxLength = 52
            Me.columnPOTRESTUMSATZ.ReadOnly = true
            Me.columnLETZTEABRECHNUNGSPERIODE.ReadOnly = true
            Me.columnLETZTEABRECHNUNGSPERIODE.MaxLength = 23
            Me.columnUMSATZPERIODE.ReadOnly = true
            Me.columnUMSATZGESAMT.ReadOnly = true
            Me.columnPROJEKTLEITER.MaxLength = 40
            Me.columnUMSATZGJ.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewVW_PROJEKT_CRMRow() As VW_PROJEKT_CRMRow
            Return CType(Me.NewRow,VW_PROJEKT_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_PROJEKT_CRMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_PROJEKT_CRMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_PROJEKT_CRMRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_PROJEKT_CRMRowChanged(Me, New VW_PROJEKT_CRMRowChangeEvent(CType(e.Row,VW_PROJEKT_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_PROJEKT_CRMRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_PROJEKT_CRMRowChanging(Me, New VW_PROJEKT_CRMRowChangeEvent(CType(e.Row,VW_PROJEKT_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_PROJEKT_CRMRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_PROJEKT_CRMRowDeleted(Me, New VW_PROJEKT_CRMRowChangeEvent(CType(e.Row,VW_PROJEKT_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_PROJEKT_CRMRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_PROJEKT_CRMRowDeleting(Me, New VW_PROJEKT_CRMRowChangeEvent(CType(e.Row,VW_PROJEKT_CRMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveVW_PROJEKT_CRMRow(ByVal row As VW_PROJEKT_CRMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPrinsViews = New dsPrinsViews()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_PROJEKT_CRMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_KUNDEN_TO_CRMRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_KUNDEN_TO_CRM As VW_KUNDEN_TO_CRMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_KUNDEN_TO_CRM = CType(Me.Table,VW_KUNDEN_TO_CRMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENID in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNUMMER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNUMMERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNUMMER in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME1 in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME2 in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME3 in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ANSCHRIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.ANSCHRIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ANSCHRIFT in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.ANSCHRIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.PLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PLZ in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.PLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ORT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.ORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ORT in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.ORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.TELEFONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TELEFON in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.TELEFONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FAX() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.FAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FAX in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HOMEPAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.HOMEPAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HOMEPAGE in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.HOMEPAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SPRACHE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.SPRACHEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPRACHE in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.SPRACHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EMAIL in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LAND() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.LANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LAND in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.LANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZIELSYSTEM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.ZIELSYSTEMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ZIELSYSTEM in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.ZIELSYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BESITZER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.BESITZERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BESITZER in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.BESITZERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KOSTENSTELLE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.KOSTENSTELLEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KOSTENSTELLE in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.KOSTENSTELLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KUERZELKONTAKT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.KUERZELKONTAKTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KUERZELKONTAKT in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.KUERZELKONTAKTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property STATECODE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_KUNDEN_TO_CRM.STATECODEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte STATECODE in Tabelle VW_KUNDEN_TO_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_KUNDEN_TO_CRM.STATECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FIRMENIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENIDNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FIRMENNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNUMMERNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME1Null() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME1Null()
            Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME2Null() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME2Null()
            Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME3Null() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME3Null()
            Me(Me.tableVW_KUNDEN_TO_CRM.FIRMENNAME3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsANSCHRIFTNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.ANSCHRIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetANSCHRIFTNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.ANSCHRIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPLZNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.PLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPLZNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.PLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsORTNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.ORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetORTNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.ORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.TELEFONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.TELEFONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.FAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFAXNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.FAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHOMEPAGENull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.HOMEPAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHOMEPAGENull()
            Me(Me.tableVW_KUNDEN_TO_CRM.HOMEPAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSPRACHENull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.SPRACHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSPRACHENull()
            Me(Me.tableVW_KUNDEN_TO_CRM.SPRACHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLANDNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.LANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLANDNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.LANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZIELSYSTEMNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.ZIELSYSTEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZIELSYSTEMNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.ZIELSYSTEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBESITZERNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.BESITZERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBESITZERNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.BESITZERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKOSTENSTELLENull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.KOSTENSTELLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKOSTENSTELLENull()
            Me(Me.tableVW_KUNDEN_TO_CRM.KOSTENSTELLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKUERZELKONTAKTNull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.KUERZELKONTAKTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKUERZELKONTAKTNull()
            Me(Me.tableVW_KUNDEN_TO_CRM.KUERZELKONTAKTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSTATECODENull() As Boolean
            Return Me.IsNull(Me.tableVW_KUNDEN_TO_CRM.STATECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSTATECODENull()
            Me(Me.tableVW_KUNDEN_TO_CRM.STATECODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_ADRESSEN_FIRMA_CRMRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_ADRESSEN_FIRMA_CRM As VW_ADRESSEN_FIRMA_CRMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_ADRESSEN_FIRMA_CRM = CType(Me.Table,VW_ADRESSEN_FIRMA_CRMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENID in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME1 in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME2 in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNAME3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNAME3 in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ANSCHRIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ANSCHRIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ANSCHRIFT in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ANSCHRIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.PLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PLZ in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.PLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ORT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ORT in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEFON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.TELEFONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TELEFON in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.TELEFONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FAX() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FAX in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HOMEPAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.HOMEPAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HOMEPAGE in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.HOMEPAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SPRACHE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.SPRACHEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SPRACHE in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.SPRACHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EMAIL in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LAND() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.LANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LAND in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.LANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZIELSYSTEM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ZIELSYSTEMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ZIELSYSTEM in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ZIELSYSTEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BESITZER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.BESITZERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BESITZER in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.BESITZERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AKTIV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.AKTIVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AKTIV in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.AKTIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADRESSEN_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ADRESSEN_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ADRESSEN_ID in Tabelle VW_ADRESSEN_FIRMA_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ADRESSEN_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENIDNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME1Null() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME1Null()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME2Null() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME2Null()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNAME3Null() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNAME3Null()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FIRMENNAME3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsANSCHRIFTNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.ANSCHRIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetANSCHRIFTNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ANSCHRIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPLZNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.PLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPLZNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.PLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsORTNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.ORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetORTNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTELEFONNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.TELEFONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTELEFONNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.TELEFONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.FAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFAXNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.FAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHOMEPAGENull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.HOMEPAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHOMEPAGENull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.HOMEPAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSPRACHENull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.SPRACHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSPRACHENull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.SPRACHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLANDNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.LANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLANDNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.LANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZIELSYSTEMNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.ZIELSYSTEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZIELSYSTEMNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ZIELSYSTEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBESITZERNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.BESITZERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBESITZERNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.BESITZERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAKTIVNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.AKTIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAKTIVNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.AKTIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADRESSEN_IDNull() As Boolean
            Return Me.IsNull(Me.tableVW_ADRESSEN_FIRMA_CRM.ADRESSEN_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADRESSEN_IDNull()
            Me(Me.tableVW_ADRESSEN_FIRMA_CRM.ADRESSEN_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_PROJEKT_CRMRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_PROJEKT_CRM As VW_PROJEKT_CRMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_PROJEKT_CRM = CType(Me.Table,VW_PROJEKT_CRMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.FIRMENIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENID in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.FIRMENIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GESCHAEFTSJAHR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.GESCHAEFTSJAHRColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte GESCHAEFTSJAHR in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.GESCHAEFTSJAHRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKTNUMMER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.PROJEKTNUMMERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKTNUMMER in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.PROJEKTNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.PROJEKTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKTID in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.PROJEKTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BEZEICHNUNG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.BEZEICHNUNGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BEZEICHNUNG in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.BEZEICHNUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BESITZER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.BESITZERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BESITZER in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.BESITZERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property KOSTENSTELLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.KOSTENSTELLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte KOSTENSTELLE in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.KOSTENSTELLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKTSTATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.PROJEKTSTATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKTSTATUS in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.PROJEKTSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property POTRESTUMSATZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.POTRESTUMSATZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte POTRESTUMSATZ in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.POTRESTUMSATZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AUFTRAGSVOLUMEN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AUFTRAGSVOLUMEN in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AUFTRAGSVOLUMENGJ() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENGJColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte AUFTRAGSVOLUMENGJ in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENGJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LETZTEABRECHNUNGSPERIODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.LETZTEABRECHNUNGSPERIODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LETZTEABRECHNUNGSPERIODE in Tabelle VW_PROJEKT_CRM ist DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.LETZTEABRECHNUNGSPERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UMSATZPERIODE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.UMSATZPERIODEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UMSATZPERIODE in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.UMSATZPERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OFFENELEISTUNGEN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.OFFENELEISTUNGENColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte OFFENELEISTUNGEN in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.OFFENELEISTUNGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UMSATZGESAMT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.UMSATZGESAMTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UMSATZGESAMT in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.UMSATZGESAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FIRMENNUMMER() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.FIRMENNUMMERColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FIRMENNUMMER in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.FIRMENNUMMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKTLEITER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.PROJEKTLEITERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKTLEITER in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.PROJEKTLEITERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UMSATZGJ() As Double
            Get
                Try 
                    Return CType(Me(Me.tableVW_PROJEKT_CRM.UMSATZGJColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte UMSATZGJ in Tabelle VW_PROJEKT_CRM ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_PROJEKT_CRM.UMSATZGJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableVW_PROJEKT_CRM.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.FIRMENIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENIDNull()
            Me(Me.tableVW_PROJEKT_CRM.FIRMENIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGESCHAEFTSJAHRNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.GESCHAEFTSJAHRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGESCHAEFTSJAHRNull()
            Me(Me.tableVW_PROJEKT_CRM.GESCHAEFTSJAHRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKTNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.PROJEKTNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKTNUMMERNull()
            Me(Me.tableVW_PROJEKT_CRM.PROJEKTNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKTIDNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.PROJEKTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKTIDNull()
            Me(Me.tableVW_PROJEKT_CRM.PROJEKTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBEZEICHNUNGNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.BEZEICHNUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBEZEICHNUNGNull()
            Me(Me.tableVW_PROJEKT_CRM.BEZEICHNUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBESITZERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.BESITZERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBESITZERNull()
            Me(Me.tableVW_PROJEKT_CRM.BESITZERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKOSTENSTELLENull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.KOSTENSTELLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKOSTENSTELLENull()
            Me(Me.tableVW_PROJEKT_CRM.KOSTENSTELLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKTSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.PROJEKTSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKTSTATUSNull()
            Me(Me.tableVW_PROJEKT_CRM.PROJEKTSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPOTRESTUMSATZNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.POTRESTUMSATZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPOTRESTUMSATZNull()
            Me(Me.tableVW_PROJEKT_CRM.POTRESTUMSATZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAUFTRAGSVOLUMENNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAUFTRAGSVOLUMENNull()
            Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAUFTRAGSVOLUMENGJNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENGJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAUFTRAGSVOLUMENGJNull()
            Me(Me.tableVW_PROJEKT_CRM.AUFTRAGSVOLUMENGJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLETZTEABRECHNUNGSPERIODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.LETZTEABRECHNUNGSPERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLETZTEABRECHNUNGSPERIODENull()
            Me(Me.tableVW_PROJEKT_CRM.LETZTEABRECHNUNGSPERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUMSATZPERIODENull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.UMSATZPERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUMSATZPERIODENull()
            Me(Me.tableVW_PROJEKT_CRM.UMSATZPERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOFFENELEISTUNGENNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.OFFENELEISTUNGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOFFENELEISTUNGENNull()
            Me(Me.tableVW_PROJEKT_CRM.OFFENELEISTUNGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUMSATZGESAMTNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.UMSATZGESAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUMSATZGESAMTNull()
            Me(Me.tableVW_PROJEKT_CRM.UMSATZGESAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFIRMENNUMMERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.FIRMENNUMMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFIRMENNUMMERNull()
            Me(Me.tableVW_PROJEKT_CRM.FIRMENNUMMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKTLEITERNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.PROJEKTLEITERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKTLEITERNull()
            Me(Me.tableVW_PROJEKT_CRM.PROJEKTLEITERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUMSATZGJNull() As Boolean
            Return Me.IsNull(Me.tableVW_PROJEKT_CRM.UMSATZGJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUMSATZGJNull()
            Me(Me.tableVW_PROJEKT_CRM.UMSATZGJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class VW_KUNDEN_TO_CRMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_KUNDEN_TO_CRMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As VW_KUNDEN_TO_CRMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As VW_KUNDEN_TO_CRMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class VW_ADRESSEN_FIRMA_CRMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_ADRESSEN_FIRMA_CRMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As VW_ADRESSEN_FIRMA_CRMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As VW_ADRESSEN_FIRMA_CRMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class VW_PROJEKT_CRMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_PROJEKT_CRMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As VW_PROJEKT_CRMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As VW_PROJEKT_CRMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsPrinsViewsTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_KUNDEN_TO_CRMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_KUNDEN_TO_CRM"
            tableMapping.ColumnMappings.Add("FIRMENID", "FIRMENID")
            tableMapping.ColumnMappings.Add("FIRMENNUMMER", "FIRMENNUMMER")
            tableMapping.ColumnMappings.Add("FIRMENNAME1", "FIRMENNAME1")
            tableMapping.ColumnMappings.Add("FIRMENNAME2", "FIRMENNAME2")
            tableMapping.ColumnMappings.Add("FIRMENNAME3", "FIRMENNAME3")
            tableMapping.ColumnMappings.Add("ANSCHRIFT", "ANSCHRIFT")
            tableMapping.ColumnMappings.Add("PLZ", "PLZ")
            tableMapping.ColumnMappings.Add("ORT", "ORT")
            tableMapping.ColumnMappings.Add("TELEFON", "TELEFON")
            tableMapping.ColumnMappings.Add("FAX", "FAX")
            tableMapping.ColumnMappings.Add("HOMEPAGE", "HOMEPAGE")
            tableMapping.ColumnMappings.Add("SPRACHE", "SPRACHE")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("LAND", "LAND")
            tableMapping.ColumnMappings.Add("ZIELSYSTEM", "ZIELSYSTEM")
            tableMapping.ColumnMappings.Add("BESITZER", "BESITZER")
            tableMapping.ColumnMappings.Add("KOSTENSTELLE", "KOSTENSTELLE")
            tableMapping.ColumnMappings.Add("KUERZELKONTAKT", "KUERZELKONTAKT")
            tableMapping.ColumnMappings.Add("STATECODE", "STATECODE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM TBL_CRM_STAGEING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SOURCE_TABLE = 'KUNDEN') AND (SOURCE_"& _ 
                "ID = @FirmenNummer)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FirmenNummer"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FIRMENNUMMER"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.PRINSConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        FIRMENID, FIRMENNUMMER, FIRMENNAME1, FIRMENNAME2, FIRMENNAME3, ANSC"& _ 
                "HRIFT, PLZ, ORT, TELEFON, FAX, HOMEPAGE, SPRACHE, EMAIL, LAND, ZIELSYSTEM, BESIT"& _ 
                "ZER, KOSTENSTELLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KUERZELKONTAKT, STATECODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "         VW_KUNDEN_TO_CRM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPrinsViews.VW_KUNDEN_TO_CRMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPrinsViews.VW_KUNDEN_TO_CRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPrinsViews.VW_KUNDEN_TO_CRMDataTable = New dsPrinsViews.VW_KUNDEN_TO_CRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPrinsViews.VW_KUNDEN_TO_CRMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPrinsViews) As Integer
            Return Me.Adapter.Update(dataSet, "VW_KUNDEN_TO_CRM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_ADRESSEN_FIRMA_CRMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_ADRESSEN_FIRMA_CRM"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("FIRMENID", "FIRMENID")
            tableMapping.ColumnMappings.Add("FIRMENNAME1", "FIRMENNAME1")
            tableMapping.ColumnMappings.Add("FIRMENNAME2", "FIRMENNAME2")
            tableMapping.ColumnMappings.Add("FIRMENNAME3", "FIRMENNAME3")
            tableMapping.ColumnMappings.Add("ANSCHRIFT", "ANSCHRIFT")
            tableMapping.ColumnMappings.Add("PLZ", "PLZ")
            tableMapping.ColumnMappings.Add("ORT", "ORT")
            tableMapping.ColumnMappings.Add("TELEFON", "TELEFON")
            tableMapping.ColumnMappings.Add("FAX", "FAX")
            tableMapping.ColumnMappings.Add("HOMEPAGE", "HOMEPAGE")
            tableMapping.ColumnMappings.Add("SPRACHE", "SPRACHE")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("LAND", "LAND")
            tableMapping.ColumnMappings.Add("ZIELSYSTEM", "ZIELSYSTEM")
            tableMapping.ColumnMappings.Add("BESITZER", "BESITZER")
            tableMapping.ColumnMappings.Add("AKTIV", "AKTIV")
            tableMapping.ColumnMappings.Add("ADRESSEN_ID", "ADRESSEN_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM TBL_CRM_STAGEING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ID = @ID)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.PRINSConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(1) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, FIRMENID, FIRMENNAME1, FIRMENNAME2, FIRMENNAME3, ANSCHRIFT, PLZ"& _ 
                ", ORT, TELEFON, FAX, HOMEPAGE, SPRACHE, EMAIL, LAND, ZIELSYSTEM, BESITZER, ADRES"& _ 
                "SEN_ID, AKTIV, KOSTENSTELLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         KUERZELKONTAKT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        VW_ADRESSEN_FIRMA_CRM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ADRESSEN_ID, AKTIV, ANSCHRIFT, BESITZER, EMAIL, FAX, FIRMENID, FIRMENNAME1"& _ 
                ", FIRMENNAME2, FIRMENNAME3, HOMEPAGE, ID, KOSTENSTELLE, KUERZELKONTAKT, LAND, OR"& _ 
                "T, PLZ, SPRACHE, TELEFON, ZIELSYSTEM FROM VW_ADRESSEN_FIRMA_CRM WHERE (FIRMENID "& _ 
                "= @FirmenID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FirmenID"
            param.Size = 64
            param.IsNullable = true
            param.SourceColumn = "FIRMENID"
            Me._commandCollection(1).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable = New dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFirmenID(ByVal dataTable As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable, ByVal FirmenID As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FirmenID Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FirmenID,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFirmenID(ByVal FirmenID As String) As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FirmenID Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FirmenID,String)
            End If
            Dim dataTable As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable = New dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPrinsViews.VW_ADRESSEN_FIRMA_CRMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPrinsViews) As Integer
            Return Me.Adapter.Update(dataSet, "VW_ADRESSEN_FIRMA_CRM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_PROJEKT_CRMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_PROJEKT_CRM"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("FIRMENID", "FIRMENID")
            tableMapping.ColumnMappings.Add("GESCHAEFTSJAHR", "GESCHAEFTSJAHR")
            tableMapping.ColumnMappings.Add("PROJEKTNUMMER", "PROJEKTNUMMER")
            tableMapping.ColumnMappings.Add("PROJEKTID", "PROJEKTID")
            tableMapping.ColumnMappings.Add("BEZEICHNUNG", "BEZEICHNUNG")
            tableMapping.ColumnMappings.Add("BESITZER", "BESITZER")
            tableMapping.ColumnMappings.Add("KOSTENSTELLE", "KOSTENSTELLE")
            tableMapping.ColumnMappings.Add("PROJEKTSTATUS", "PROJEKTSTATUS")
            tableMapping.ColumnMappings.Add("POTRESTUMSATZ", "POTRESTUMSATZ")
            tableMapping.ColumnMappings.Add("AUFTRAGSVOLUMEN", "AUFTRAGSVOLUMEN")
            tableMapping.ColumnMappings.Add("AUFTRAGSVOLUMENGJ", "AUFTRAGSVOLUMENGJ")
            tableMapping.ColumnMappings.Add("LETZTEABRECHNUNGSPERIODE", "LETZTEABRECHNUNGSPERIODE")
            tableMapping.ColumnMappings.Add("UMSATZPERIODE", "UMSATZPERIODE")
            tableMapping.ColumnMappings.Add("OFFENELEISTUNGEN", "OFFENELEISTUNGEN")
            tableMapping.ColumnMappings.Add("UMSATZGESAMT", "UMSATZGESAMT")
            tableMapping.ColumnMappings.Add("FIRMENNUMMER", "FIRMENNUMMER")
            tableMapping.ColumnMappings.Add("PROJEKTLEITER", "PROJEKTLEITER")
            tableMapping.ColumnMappings.Add("UMSATZGJ", "UMSATZGJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM TBL_CRM_STAGEING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ID = @ID)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.PRINSConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""ID"", ""FIRMENID"", ""GESCHAEFTSJAHR"", ""PROJEKTNUMMER"", ""PROJEKTID"", ""BEZEICH"& _ 
                "NUNG"", ""BESITZER"", ""KOSTENSTELLE"", ""PROJEKTSTATUS"", ""POTRESTUMSATZ"", ""AUFTRAGSVO"& _ 
                "LUMEN"", ""AUFTRAGSVOLUMENGJ"", ""LETZTEABRECHNUNGSPERIODE"", ""UMSATZPERIODE"", ""OFFEN"& _ 
                "ELEISTUNGEN"", ""UMSATZGESAMT"", ""FIRMENNUMMER"", ""PROJEKTLEITER"", ""UMSATZGJ"" FROM """& _ 
                "VW_PROJEKT_CRM"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsPrinsViews.VW_PROJEKT_CRMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsPrinsViews.VW_PROJEKT_CRMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsPrinsViews.VW_PROJEKT_CRMDataTable = New dsPrinsViews.VW_PROJEKT_CRMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsPrinsViews.VW_PROJEKT_CRMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsPrinsViews) As Integer
            Return Me.Adapter.Update(dataSet, "VW_PROJEKT_CRM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _vW_KUNDEN_TO_CRMTableAdapter As VW_KUNDEN_TO_CRMTableAdapter
        
        Private _vW_ADRESSEN_FIRMA_CRMTableAdapter As VW_ADRESSEN_FIRMA_CRMTableAdapter
        
        Private _vW_PROJEKT_CRMTableAdapter As VW_PROJEKT_CRMTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property VW_KUNDEN_TO_CRMTableAdapter() As VW_KUNDEN_TO_CRMTableAdapter
            Get
                Return Me._vW_KUNDEN_TO_CRMTableAdapter
            End Get
            Set
                Me._vW_KUNDEN_TO_CRMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property VW_ADRESSEN_FIRMA_CRMTableAdapter() As VW_ADRESSEN_FIRMA_CRMTableAdapter
            Get
                Return Me._vW_ADRESSEN_FIRMA_CRMTableAdapter
            End Get
            Set
                Me._vW_ADRESSEN_FIRMA_CRMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property VW_PROJEKT_CRMTableAdapter() As VW_PROJEKT_CRMTableAdapter
            Get
                Return Me._vW_PROJEKT_CRMTableAdapter
            End Get
            Set
                Me._vW_PROJEKT_CRMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._vW_KUNDEN_TO_CRMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._vW_KUNDEN_TO_CRMTableAdapter.Connection
                End If
                If ((Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection
                End If
                If ((Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._vW_PROJEKT_CRMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._vW_PROJEKT_CRMTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsPrinsViews, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.VW_KUNDEN_TO_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._vW_KUNDEN_TO_CRMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.VW_ADRESSEN_FIRMA_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.VW_PROJEKT_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._vW_PROJEKT_CRMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsPrinsViews, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.VW_KUNDEN_TO_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._vW_KUNDEN_TO_CRMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.VW_ADRESSEN_FIRMA_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.VW_PROJEKT_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._vW_PROJEKT_CRMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsPrinsViews, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.VW_PROJEKT_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._vW_PROJEKT_CRMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.VW_ADRESSEN_FIRMA_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.VW_KUNDEN_TO_CRM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._vW_KUNDEN_TO_CRMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsPrinsViews) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._vW_KUNDEN_TO_CRMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            If ((Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            If ((Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._vW_PROJEKT_CRMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Für alle von einem TableAdapterManager verwalteten Instanzen von TableAdapter mus"& _ 
                        "s die gleiche Verbindungszeichenfolge verwendet werden.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._vW_KUNDEN_TO_CRMTableAdapter, Me._vW_KUNDEN_TO_CRMTableAdapter.Connection)
                    Me._vW_KUNDEN_TO_CRMTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_KUNDEN_TO_CRMTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._vW_KUNDEN_TO_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._vW_KUNDEN_TO_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._vW_KUNDEN_TO_CRMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._vW_ADRESSEN_FIRMA_CRMTableAdapter, Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection)
                    Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._vW_PROJEKT_CRMTableAdapter, Me._vW_PROJEKT_CRMTableAdapter.Connection)
                    Me._vW_PROJEKT_CRMTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_PROJEKT_CRMTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._vW_PROJEKT_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._vW_PROJEKT_CRMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._vW_PROJEKT_CRMTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._vW_KUNDEN_TO_CRMTableAdapter) Is Nothing) Then
                    Me._vW_KUNDEN_TO_CRMTableAdapter.Connection = CType(revertConnections(Me._vW_KUNDEN_TO_CRMTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_KUNDEN_TO_CRMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._vW_ADRESSEN_FIRMA_CRMTableAdapter) Is Nothing) Then
                    Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Connection = CType(revertConnections(Me._vW_ADRESSEN_FIRMA_CRMTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_ADRESSEN_FIRMA_CRMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._vW_PROJEKT_CRMTableAdapter) Is Nothing) Then
                    Me._vW_PROJEKT_CRMTableAdapter.Connection = CType(revertConnections(Me._vW_PROJEKT_CRMTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._vW_PROJEKT_CRMTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
