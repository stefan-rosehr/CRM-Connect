'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsRestruct"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsRestruct
    Inherits Global.System.Data.DataSet
    
    Private tablevProjekt_Kunde As vProjekt_KundeDataTable
    
    Private tableVWOCHENBERICHT As VWOCHENBERICHTDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vProjekt_Kunde")) Is Nothing) Then
                MyBase.Tables.Add(New vProjekt_KundeDataTable(ds.Tables("vProjekt_Kunde")))
            End If
            If (Not (ds.Tables("VWOCHENBERICHT")) Is Nothing) Then
                MyBase.Tables.Add(New VWOCHENBERICHTDataTable(ds.Tables("VWOCHENBERICHT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vProjekt_Kunde() As vProjekt_KundeDataTable
        Get
            Return Me.tablevProjekt_Kunde
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VWOCHENBERICHT() As VWOCHENBERICHTDataTable
        Get
            Return Me.tableVWOCHENBERICHT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsRestruct = CType(MyBase.Clone,dsRestruct)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("vProjekt_Kunde")) Is Nothing) Then
                MyBase.Tables.Add(New vProjekt_KundeDataTable(ds.Tables("vProjekt_Kunde")))
            End If
            If (Not (ds.Tables("VWOCHENBERICHT")) Is Nothing) Then
                MyBase.Tables.Add(New VWOCHENBERICHTDataTable(ds.Tables("VWOCHENBERICHT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevProjekt_Kunde = CType(MyBase.Tables("vProjekt_Kunde"),vProjekt_KundeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevProjekt_Kunde) Is Nothing) Then
                Me.tablevProjekt_Kunde.InitVars
            End If
        End If
        Me.tableVWOCHENBERICHT = CType(MyBase.Tables("VWOCHENBERICHT"),VWOCHENBERICHTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVWOCHENBERICHT) Is Nothing) Then
                Me.tableVWOCHENBERICHT.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsRestruct"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsRestruct.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevProjekt_Kunde = New vProjekt_KundeDataTable()
        MyBase.Tables.Add(Me.tablevProjekt_Kunde)
        Me.tableVWOCHENBERICHT = New VWOCHENBERICHTDataTable()
        MyBase.Tables.Add(Me.tableVWOCHENBERICHT)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializevProjekt_Kunde() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeVWOCHENBERICHT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsRestruct = New dsRestruct()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub vProjekt_KundeRowChangeEventHandler(ByVal sender As Object, ByVal e As vProjekt_KundeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub VWOCHENBERICHTRowChangeEventHandler(ByVal sender As Object, ByVal e As VWOCHENBERICHTRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vProjekt_KundeDataTable
        Inherits Global.System.Data.TypedTableBase(Of vProjekt_KundeRow)
        
        Private columncNr As Global.System.Data.DataColumn
        
        Private columncBeschreibung As Global.System.Data.DataColumn
        
        Private columncVorname As Global.System.Data.DataColumn
        
        Private columncName As Global.System.Data.DataColumn
        
        Private columncInitialien As Global.System.Data.DataColumn
        
        Private columncNrSub As Global.System.Data.DataColumn
        
        Private columncBeschreibungSub As Global.System.Data.DataColumn
        
        Private columncKNr As Global.System.Data.DataColumn
        
        Private columncFirma As Global.System.Data.DataColumn
        
        Private columncStr As Global.System.Data.DataColumn
        
        Private columncPLZ As Global.System.Data.DataColumn
        
        Private columncOrt As Global.System.Data.DataColumn
        
        Private columncTel As Global.System.Data.DataColumn
        
        Private columncEmail As Global.System.Data.DataColumn
        
        Private columnStatus_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vProjekt_Kunde"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cBeschreibungColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncBeschreibung
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cVornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncVorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cInitialienColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncInitialien
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cNrSubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncNrSub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cBeschreibungSubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncBeschreibungSub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cKNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncKNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cFirmaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncFirma
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cStrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncStr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cPLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cOrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncOrt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cTelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncTel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Status_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vProjekt_KundeRow
            Get
                Return CType(Me.Rows(index),vProjekt_KundeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vProjekt_KundeRowChanging As vProjekt_KundeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vProjekt_KundeRowChanged As vProjekt_KundeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vProjekt_KundeRowDeleting As vProjekt_KundeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event vProjekt_KundeRowDeleted As vProjekt_KundeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddvProjekt_KundeRow(ByVal row As vProjekt_KundeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddvProjekt_KundeRow(ByVal cNr As String, ByVal cBeschreibung As String, ByVal cVorname As String, ByVal cName As String, ByVal cInitialien As String, ByVal cNrSub As String, ByVal cBeschreibungSub As String, ByVal cKNr As String, ByVal cFirma As String, ByVal _cStr As String, ByVal cPLZ As String, ByVal cOrt As String, ByVal cTel As String, ByVal cEmail As String, ByVal Status_ID As Long) As vProjekt_KundeRow
            Dim rowvProjekt_KundeRow As vProjekt_KundeRow = CType(Me.NewRow,vProjekt_KundeRow)
            Dim columnValuesArray() As Object = New Object() {cNr, cBeschreibung, cVorname, cName, cInitialien, cNrSub, cBeschreibungSub, cKNr, cFirma, _cStr, cPLZ, cOrt, cTel, cEmail, Status_ID}
            rowvProjekt_KundeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvProjekt_KundeRow)
            Return rowvProjekt_KundeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vProjekt_KundeDataTable = CType(MyBase.Clone,vProjekt_KundeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vProjekt_KundeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncNr = MyBase.Columns("cNr")
            Me.columncBeschreibung = MyBase.Columns("cBeschreibung")
            Me.columncVorname = MyBase.Columns("cVorname")
            Me.columncName = MyBase.Columns("cName")
            Me.columncInitialien = MyBase.Columns("cInitialien")
            Me.columncNrSub = MyBase.Columns("cNrSub")
            Me.columncBeschreibungSub = MyBase.Columns("cBeschreibungSub")
            Me.columncKNr = MyBase.Columns("cKNr")
            Me.columncFirma = MyBase.Columns("cFirma")
            Me.columncStr = MyBase.Columns("cStr")
            Me.columncPLZ = MyBase.Columns("cPLZ")
            Me.columncOrt = MyBase.Columns("cOrt")
            Me.columncTel = MyBase.Columns("cTel")
            Me.columncEmail = MyBase.Columns("cEmail")
            Me.columnStatus_ID = MyBase.Columns("Status_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncNr = New Global.System.Data.DataColumn("cNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncNr)
            Me.columncBeschreibung = New Global.System.Data.DataColumn("cBeschreibung", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncBeschreibung)
            Me.columncVorname = New Global.System.Data.DataColumn("cVorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncVorname)
            Me.columncName = New Global.System.Data.DataColumn("cName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncName)
            Me.columncInitialien = New Global.System.Data.DataColumn("cInitialien", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncInitialien)
            Me.columncNrSub = New Global.System.Data.DataColumn("cNrSub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncNrSub)
            Me.columncBeschreibungSub = New Global.System.Data.DataColumn("cBeschreibungSub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncBeschreibungSub)
            Me.columncKNr = New Global.System.Data.DataColumn("cKNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncKNr)
            Me.columncFirma = New Global.System.Data.DataColumn("cFirma", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncFirma)
            Me.columncStr = New Global.System.Data.DataColumn("cStr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columncStr.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "cStrColumn")
            Me.columncStr.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columncStr")
            Me.columncStr.ExtendedProperties.Add("Generator_UserColumnName", "cStr")
            MyBase.Columns.Add(Me.columncStr)
            Me.columncPLZ = New Global.System.Data.DataColumn("cPLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncPLZ)
            Me.columncOrt = New Global.System.Data.DataColumn("cOrt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncOrt)
            Me.columncTel = New Global.System.Data.DataColumn("cTel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncTel)
            Me.columncEmail = New Global.System.Data.DataColumn("cEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncEmail)
            Me.columnStatus_ID = New Global.System.Data.DataColumn("Status_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus_ID)
            Me.columncNr.MaxLength = 50
            Me.columncBeschreibung.MaxLength = 2500
            Me.columncVorname.MaxLength = 255
            Me.columncName.MaxLength = 255
            Me.columncInitialien.MaxLength = 5
            Me.columncNrSub.MaxLength = 50
            Me.columncBeschreibungSub.MaxLength = 2500
            Me.columncKNr.AllowDBNull = false
            Me.columncKNr.MaxLength = 30
            Me.columncFirma.MaxLength = 250
            Me.columncStr.MaxLength = 250
            Me.columncPLZ.MaxLength = 10
            Me.columncOrt.MaxLength = 150
            Me.columncTel.MaxLength = 100
            Me.columncEmail.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewvProjekt_KundeRow() As vProjekt_KundeRow
            Return CType(Me.NewRow,vProjekt_KundeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vProjekt_KundeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vProjekt_KundeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vProjekt_KundeRowChangedEvent) Is Nothing) Then
                RaiseEvent vProjekt_KundeRowChanged(Me, New vProjekt_KundeRowChangeEvent(CType(e.Row,vProjekt_KundeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vProjekt_KundeRowChangingEvent) Is Nothing) Then
                RaiseEvent vProjekt_KundeRowChanging(Me, New vProjekt_KundeRowChangeEvent(CType(e.Row,vProjekt_KundeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vProjekt_KundeRowDeletedEvent) Is Nothing) Then
                RaiseEvent vProjekt_KundeRowDeleted(Me, New vProjekt_KundeRowChangeEvent(CType(e.Row,vProjekt_KundeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vProjekt_KundeRowDeletingEvent) Is Nothing) Then
                RaiseEvent vProjekt_KundeRowDeleting(Me, New vProjekt_KundeRowChangeEvent(CType(e.Row,vProjekt_KundeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovevProjekt_KundeRow(ByVal row As vProjekt_KundeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRestruct = New dsRestruct()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vProjekt_KundeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VWOCHENBERICHTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VWOCHENBERICHTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnISTATUS As Global.System.Data.DataColumn
        
        Private columnDDATUM As Global.System.Data.DataColumn
        
        Private columnFDAUER As Global.System.Data.DataColumn
        
        Private columnBENUTZER_ID As Global.System.Data.DataColumn
        
        Private columnPROJEKT_ID As Global.System.Data.DataColumn
        
        Private columnHKAT_ID As Global.System.Data.DataColumn
        
        Private columnBABRECHNEN As Global.System.Data.DataColumn
        
        Private columnBAKTIV As Global.System.Data.DataColumn
        
        Private columnFEHLZEITTYP_ID As Global.System.Data.DataColumn
        
        Private columnIBERECHNUNGSTYP As Global.System.Data.DataColumn
        
        Private columnDLASTUPDATE As Global.System.Data.DataColumn
        
        Private columnLASTUPDATE_BENUTZER_ID As Global.System.Data.DataColumn
        
        Private columnTBL_HOMEOFFICE_GRUND_ID As Global.System.Data.DataColumn
        
        Private columnCNAME As Global.System.Data.DataColumn
        
        Private columnCEMAIL As Global.System.Data.DataColumn
        
        Private columnCVORNAME As Global.System.Data.DataColumn
        
        Private columnCINITIALEN As Global.System.Data.DataColumn
        
        Private columnPROJEKTLEITER_ID As Global.System.Data.DataColumn
        
        Private columnCBESCHREIBUNG As Global.System.Data.DataColumn
        
        Private columnSACHBEARBEITER_ID As Global.System.Data.DataColumn
        
        Private columnBOHNEBERECHNUNG As Global.System.Data.DataColumn
        
        Private columnCTYP As Global.System.Data.DataColumn
        
        Private columnCBEZEICHNUNG As Global.System.Data.DataColumn
        
        Private columnCTEXT As Global.System.Data.DataColumn
        
        Private columnCNR As Global.System.Data.DataColumn
        
        Private columnEXPR1 As Global.System.Data.DataColumn
        
        Private columnADRESSE_ID As Global.System.Data.DataColumn
        
        Private columnCFIRMA As Global.System.Data.DataColumn
        
        Private columnCFIRMIERUNG As Global.System.Data.DataColumn
        
        Private columnCZUSATZ As Global.System.Data.DataColumn
        
        Private columnCANREDE As Global.System.Data.DataColumn
        
        Private columnCTITEL As Global.System.Data.DataColumn
        
        Private columnCTEL As Global.System.Data.DataColumn
        
        Private columnCSTR As Global.System.Data.DataColumn
        
        Private columnCPLZ As Global.System.Data.DataColumn
        
        Private columnCORT As Global.System.Data.DataColumn
        
        Private columnCBLAND As Global.System.Data.DataColumn
        
        Private columnCLAND As Global.System.Data.DataColumn
        
        Private columnCFIRMA2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VWOCHENBERICHT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ISTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DDATUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDATUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FDAUERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFDAUER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BENUTZER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENUTZER_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HKAT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHKAT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BABRECHNENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBABRECHNEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BAKTIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAKTIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FEHLZEITTYP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEHLZEITTYP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IBERECHNUNGSTYPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIBERECHNUNGSTYP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DLASTUPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLASTUPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LASTUPDATE_BENUTZER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLASTUPDATE_BENUTZER_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TBL_HOMEOFFICE_GRUND_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTBL_HOMEOFFICE_GRUND_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CVORNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCVORNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CINITIALENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCINITIALEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PROJEKTLEITER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROJEKTLEITER_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CBESCHREIBUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCBESCHREIBUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SACHBEARBEITER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACHBEARBEITER_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BOHNEBERECHNUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOHNEBERECHNUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CTYPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTYP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CBEZEICHNUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCBEZEICHNUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CTEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CNRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXPR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADRESSE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADRESSE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CFIRMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCFIRMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CFIRMIERUNGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCFIRMIERUNG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CZUSATZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCZUSATZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CANREDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANREDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CTITELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTITEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CTELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CSTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CPLZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPLZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CBLANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCBLAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CLANDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CFIRMA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCFIRMA2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VWOCHENBERICHTRow
            Get
                Return CType(Me.Rows(index),VWOCHENBERICHTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VWOCHENBERICHTRowChanging As VWOCHENBERICHTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VWOCHENBERICHTRowChanged As VWOCHENBERICHTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VWOCHENBERICHTRowDeleting As VWOCHENBERICHTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event VWOCHENBERICHTRowDeleted As VWOCHENBERICHTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddVWOCHENBERICHTRow(ByVal row As VWOCHENBERICHTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddVWOCHENBERICHTRow( _
                    ByVal ID As Long,  _
                    ByVal ISTATUS As Integer,  _
                    ByVal DDATUM As Date,  _
                    ByVal FDAUER As Decimal,  _
                    ByVal BENUTZER_ID As Long,  _
                    ByVal PROJEKT_ID As Long,  _
                    ByVal HKAT_ID As Long,  _
                    ByVal BABRECHNEN As Boolean,  _
                    ByVal BAKTIV As Boolean,  _
                    ByVal FEHLZEITTYP_ID As Long,  _
                    ByVal IBERECHNUNGSTYP As Integer,  _
                    ByVal DLASTUPDATE As Date,  _
                    ByVal LASTUPDATE_BENUTZER_ID As Long,  _
                    ByVal TBL_HOMEOFFICE_GRUND_ID As Short,  _
                    ByVal CNAME As String,  _
                    ByVal CEMAIL As String,  _
                    ByVal CVORNAME As String,  _
                    ByVal CINITIALEN As String,  _
                    ByVal PROJEKTLEITER_ID As Long,  _
                    ByVal CBESCHREIBUNG As String,  _
                    ByVal SACHBEARBEITER_ID As Long,  _
                    ByVal BOHNEBERECHNUNG As Boolean,  _
                    ByVal CTYP As String,  _
                    ByVal CBEZEICHNUNG As String,  _
                    ByVal CTEXT As String,  _
                    ByVal CNR As String,  _
                    ByVal EXPR1 As Boolean,  _
                    ByVal ADRESSE_ID As Long,  _
                    ByVal CFIRMA As String,  _
                    ByVal CFIRMIERUNG As String,  _
                    ByVal CZUSATZ As String,  _
                    ByVal CANREDE As String,  _
                    ByVal CTITEL As String,  _
                    ByVal CTEL As String,  _
                    ByVal _CSTR As String,  _
                    ByVal CPLZ As String,  _
                    ByVal CORT As String,  _
                    ByVal CBLAND As String,  _
                    ByVal CLAND As String,  _
                    ByVal CFIRMA2 As String) As VWOCHENBERICHTRow
            Dim rowVWOCHENBERICHTRow As VWOCHENBERICHTRow = CType(Me.NewRow,VWOCHENBERICHTRow)
            Dim columnValuesArray() As Object = New Object() {ID, ISTATUS, DDATUM, FDAUER, BENUTZER_ID, PROJEKT_ID, HKAT_ID, BABRECHNEN, BAKTIV, FEHLZEITTYP_ID, IBERECHNUNGSTYP, DLASTUPDATE, LASTUPDATE_BENUTZER_ID, TBL_HOMEOFFICE_GRUND_ID, CNAME, CEMAIL, CVORNAME, CINITIALEN, PROJEKTLEITER_ID, CBESCHREIBUNG, SACHBEARBEITER_ID, BOHNEBERECHNUNG, CTYP, CBEZEICHNUNG, CTEXT, CNR, EXPR1, ADRESSE_ID, CFIRMA, CFIRMIERUNG, CZUSATZ, CANREDE, CTITEL, CTEL, _CSTR, CPLZ, CORT, CBLAND, CLAND, CFIRMA2}
            rowVWOCHENBERICHTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVWOCHENBERICHTRow)
            Return rowVWOCHENBERICHTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VWOCHENBERICHTDataTable = CType(MyBase.Clone,VWOCHENBERICHTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VWOCHENBERICHTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnISTATUS = MyBase.Columns("ISTATUS")
            Me.columnDDATUM = MyBase.Columns("DDATUM")
            Me.columnFDAUER = MyBase.Columns("FDAUER")
            Me.columnBENUTZER_ID = MyBase.Columns("BENUTZER_ID")
            Me.columnPROJEKT_ID = MyBase.Columns("PROJEKT_ID")
            Me.columnHKAT_ID = MyBase.Columns("HKAT_ID")
            Me.columnBABRECHNEN = MyBase.Columns("BABRECHNEN")
            Me.columnBAKTIV = MyBase.Columns("BAKTIV")
            Me.columnFEHLZEITTYP_ID = MyBase.Columns("FEHLZEITTYP_ID")
            Me.columnIBERECHNUNGSTYP = MyBase.Columns("IBERECHNUNGSTYP")
            Me.columnDLASTUPDATE = MyBase.Columns("DLASTUPDATE")
            Me.columnLASTUPDATE_BENUTZER_ID = MyBase.Columns("LASTUPDATE_BENUTZER_ID")
            Me.columnTBL_HOMEOFFICE_GRUND_ID = MyBase.Columns("TBL_HOMEOFFICE_GRUND_ID")
            Me.columnCNAME = MyBase.Columns("CNAME")
            Me.columnCEMAIL = MyBase.Columns("CEMAIL")
            Me.columnCVORNAME = MyBase.Columns("CVORNAME")
            Me.columnCINITIALEN = MyBase.Columns("CINITIALEN")
            Me.columnPROJEKTLEITER_ID = MyBase.Columns("PROJEKTLEITER_ID")
            Me.columnCBESCHREIBUNG = MyBase.Columns("CBESCHREIBUNG")
            Me.columnSACHBEARBEITER_ID = MyBase.Columns("SACHBEARBEITER_ID")
            Me.columnBOHNEBERECHNUNG = MyBase.Columns("BOHNEBERECHNUNG")
            Me.columnCTYP = MyBase.Columns("CTYP")
            Me.columnCBEZEICHNUNG = MyBase.Columns("CBEZEICHNUNG")
            Me.columnCTEXT = MyBase.Columns("CTEXT")
            Me.columnCNR = MyBase.Columns("CNR")
            Me.columnEXPR1 = MyBase.Columns("EXPR1")
            Me.columnADRESSE_ID = MyBase.Columns("ADRESSE_ID")
            Me.columnCFIRMA = MyBase.Columns("CFIRMA")
            Me.columnCFIRMIERUNG = MyBase.Columns("CFIRMIERUNG")
            Me.columnCZUSATZ = MyBase.Columns("CZUSATZ")
            Me.columnCANREDE = MyBase.Columns("CANREDE")
            Me.columnCTITEL = MyBase.Columns("CTITEL")
            Me.columnCTEL = MyBase.Columns("CTEL")
            Me.columnCSTR = MyBase.Columns("CSTR")
            Me.columnCPLZ = MyBase.Columns("CPLZ")
            Me.columnCORT = MyBase.Columns("CORT")
            Me.columnCBLAND = MyBase.Columns("CBLAND")
            Me.columnCLAND = MyBase.Columns("CLAND")
            Me.columnCFIRMA2 = MyBase.Columns("CFIRMA2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnISTATUS = New Global.System.Data.DataColumn("ISTATUS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISTATUS)
            Me.columnDDATUM = New Global.System.Data.DataColumn("DDATUM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDATUM)
            Me.columnFDAUER = New Global.System.Data.DataColumn("FDAUER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFDAUER)
            Me.columnBENUTZER_ID = New Global.System.Data.DataColumn("BENUTZER_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENUTZER_ID)
            Me.columnPROJEKT_ID = New Global.System.Data.DataColumn("PROJEKT_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKT_ID)
            Me.columnHKAT_ID = New Global.System.Data.DataColumn("HKAT_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHKAT_ID)
            Me.columnBABRECHNEN = New Global.System.Data.DataColumn("BABRECHNEN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBABRECHNEN)
            Me.columnBAKTIV = New Global.System.Data.DataColumn("BAKTIV", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAKTIV)
            Me.columnFEHLZEITTYP_ID = New Global.System.Data.DataColumn("FEHLZEITTYP_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEHLZEITTYP_ID)
            Me.columnIBERECHNUNGSTYP = New Global.System.Data.DataColumn("IBERECHNUNGSTYP", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIBERECHNUNGSTYP)
            Me.columnDLASTUPDATE = New Global.System.Data.DataColumn("DLASTUPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLASTUPDATE)
            Me.columnLASTUPDATE_BENUTZER_ID = New Global.System.Data.DataColumn("LASTUPDATE_BENUTZER_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLASTUPDATE_BENUTZER_ID)
            Me.columnTBL_HOMEOFFICE_GRUND_ID = New Global.System.Data.DataColumn("TBL_HOMEOFFICE_GRUND_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTBL_HOMEOFFICE_GRUND_ID)
            Me.columnCNAME = New Global.System.Data.DataColumn("CNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNAME)
            Me.columnCEMAIL = New Global.System.Data.DataColumn("CEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEMAIL)
            Me.columnCVORNAME = New Global.System.Data.DataColumn("CVORNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCVORNAME)
            Me.columnCINITIALEN = New Global.System.Data.DataColumn("CINITIALEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCINITIALEN)
            Me.columnPROJEKTLEITER_ID = New Global.System.Data.DataColumn("PROJEKTLEITER_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROJEKTLEITER_ID)
            Me.columnCBESCHREIBUNG = New Global.System.Data.DataColumn("CBESCHREIBUNG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCBESCHREIBUNG)
            Me.columnSACHBEARBEITER_ID = New Global.System.Data.DataColumn("SACHBEARBEITER_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACHBEARBEITER_ID)
            Me.columnBOHNEBERECHNUNG = New Global.System.Data.DataColumn("BOHNEBERECHNUNG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOHNEBERECHNUNG)
            Me.columnCTYP = New Global.System.Data.DataColumn("CTYP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTYP)
            Me.columnCBEZEICHNUNG = New Global.System.Data.DataColumn("CBEZEICHNUNG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCBEZEICHNUNG)
            Me.columnCTEXT = New Global.System.Data.DataColumn("CTEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTEXT)
            Me.columnCNR = New Global.System.Data.DataColumn("CNR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNR)
            Me.columnEXPR1 = New Global.System.Data.DataColumn("EXPR1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPR1)
            Me.columnADRESSE_ID = New Global.System.Data.DataColumn("ADRESSE_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADRESSE_ID)
            Me.columnCFIRMA = New Global.System.Data.DataColumn("CFIRMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCFIRMA)
            Me.columnCFIRMIERUNG = New Global.System.Data.DataColumn("CFIRMIERUNG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCFIRMIERUNG)
            Me.columnCZUSATZ = New Global.System.Data.DataColumn("CZUSATZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCZUSATZ)
            Me.columnCANREDE = New Global.System.Data.DataColumn("CANREDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANREDE)
            Me.columnCTITEL = New Global.System.Data.DataColumn("CTITEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTITEL)
            Me.columnCTEL = New Global.System.Data.DataColumn("CTEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTEL)
            Me.columnCSTR = New Global.System.Data.DataColumn("CSTR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnCSTR.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "CSTRColumn")
            Me.columnCSTR.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCSTR")
            Me.columnCSTR.ExtendedProperties.Add("Generator_UserColumnName", "CSTR")
            MyBase.Columns.Add(Me.columnCSTR)
            Me.columnCPLZ = New Global.System.Data.DataColumn("CPLZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPLZ)
            Me.columnCORT = New Global.System.Data.DataColumn("CORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORT)
            Me.columnCBLAND = New Global.System.Data.DataColumn("CBLAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCBLAND)
            Me.columnCLAND = New Global.System.Data.DataColumn("CLAND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAND)
            Me.columnCFIRMA2 = New Global.System.Data.DataColumn("CFIRMA2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCFIRMA2)
            Me.columnCNAME.MaxLength = 255
            Me.columnCEMAIL.MaxLength = 255
            Me.columnCVORNAME.MaxLength = 255
            Me.columnCINITIALEN.MaxLength = 5
            Me.columnCBESCHREIBUNG.MaxLength = 2500
            Me.columnCTYP.MaxLength = 4
            Me.columnCBEZEICHNUNG.MaxLength = 50
            Me.columnCTEXT.MaxLength = 3000
            Me.columnCNR.MaxLength = 50
            Me.columnCFIRMA.MaxLength = 250
            Me.columnCFIRMIERUNG.MaxLength = 250
            Me.columnCZUSATZ.MaxLength = 70
            Me.columnCANREDE.MaxLength = 30
            Me.columnCTITEL.MaxLength = 30
            Me.columnCTEL.MaxLength = 100
            Me.columnCSTR.MaxLength = 250
            Me.columnCPLZ.MaxLength = 10
            Me.columnCORT.MaxLength = 150
            Me.columnCBLAND.MaxLength = 100
            Me.columnCLAND.MaxLength = 150
            Me.columnCFIRMA2.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewVWOCHENBERICHTRow() As VWOCHENBERICHTRow
            Return CType(Me.NewRow,VWOCHENBERICHTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VWOCHENBERICHTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VWOCHENBERICHTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VWOCHENBERICHTRowChangedEvent) Is Nothing) Then
                RaiseEvent VWOCHENBERICHTRowChanged(Me, New VWOCHENBERICHTRowChangeEvent(CType(e.Row,VWOCHENBERICHTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VWOCHENBERICHTRowChangingEvent) Is Nothing) Then
                RaiseEvent VWOCHENBERICHTRowChanging(Me, New VWOCHENBERICHTRowChangeEvent(CType(e.Row,VWOCHENBERICHTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VWOCHENBERICHTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VWOCHENBERICHTRowDeleted(Me, New VWOCHENBERICHTRowChangeEvent(CType(e.Row,VWOCHENBERICHTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VWOCHENBERICHTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VWOCHENBERICHTRowDeleting(Me, New VWOCHENBERICHTRowChangeEvent(CType(e.Row,VWOCHENBERICHTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveVWOCHENBERICHTRow(ByVal row As VWOCHENBERICHTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRestruct = New dsRestruct()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VWOCHENBERICHTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vProjekt_KundeRow
        Inherits Global.System.Data.DataRow
        
        Private tablevProjekt_Kunde As vProjekt_KundeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevProjekt_Kunde = CType(Me.Table,vProjekt_KundeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cNr() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cNrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cNr in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cBeschreibung() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cBeschreibungColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cBeschreibung in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cBeschreibungColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cVorname() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cVornameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cVorname in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cVornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cName() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cName in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cInitialien() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cInitialienColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cInitialien in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cInitialienColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cNrSub() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cNrSubColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cNrSub in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cNrSubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cBeschreibungSub() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cBeschreibungSubColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cBeschreibungSub in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cBeschreibungSubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cKNr() As String
            Get
                Return CType(Me(Me.tablevProjekt_Kunde.cKNrColumn),String)
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cKNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cFirma() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cFirmaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cFirma in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cFirmaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _cStr() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cStrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cStr in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cStrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cPLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cPLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cPLZ in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cPLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cOrt() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cOrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cOrt in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cOrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cTel() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cTelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cTel in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cTelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.cEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte cEmail in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.cEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevProjekt_Kunde.Status_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte Status_ID in Tabelle vProjekt_Kunde ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevProjekt_Kunde.Status_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscNrNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cNrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcNrNull()
            Me(Me.tablevProjekt_Kunde.cNrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscBeschreibungNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cBeschreibungColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcBeschreibungNull()
            Me(Me.tablevProjekt_Kunde.cBeschreibungColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscVornameNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cVornameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcVornameNull()
            Me(Me.tablevProjekt_Kunde.cVornameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscNameNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcNameNull()
            Me(Me.tablevProjekt_Kunde.cNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscInitialienNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cInitialienColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcInitialienNull()
            Me(Me.tablevProjekt_Kunde.cInitialienColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscNrSubNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cNrSubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcNrSubNull()
            Me(Me.tablevProjekt_Kunde.cNrSubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscBeschreibungSubNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cBeschreibungSubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcBeschreibungSubNull()
            Me(Me.tablevProjekt_Kunde.cBeschreibungSubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscFirmaNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cFirmaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcFirmaNull()
            Me(Me.tablevProjekt_Kunde.cFirmaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_cStrNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cStrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_cStrNull()
            Me(Me.tablevProjekt_Kunde.cStrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscPLZNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cPLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcPLZNull()
            Me(Me.tablevProjekt_Kunde.cPLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscOrtNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cOrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcOrtNull()
            Me(Me.tablevProjekt_Kunde.cOrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscTelNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cTelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcTelNull()
            Me(Me.tablevProjekt_Kunde.cTelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscEmailNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.cEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcEmailNull()
            Me(Me.tablevProjekt_Kunde.cEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatus_IDNull() As Boolean
            Return Me.IsNull(Me.tablevProjekt_Kunde.Status_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatus_IDNull()
            Me(Me.tablevProjekt_Kunde.Status_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VWOCHENBERICHTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVWOCHENBERICHT As VWOCHENBERICHTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVWOCHENBERICHT = CType(Me.Table,VWOCHENBERICHTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ISTATUS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.ISTATUSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ISTATUS in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.ISTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DDATUM() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.DDATUMColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DDATUM in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.DDATUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FDAUER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.FDAUERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FDAUER in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.FDAUERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BENUTZER_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.BENUTZER_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BENUTZER_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.BENUTZER_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKT_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.PROJEKT_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKT_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.PROJEKT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HKAT_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.HKAT_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte HKAT_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.HKAT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BABRECHNEN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.BABRECHNENColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BABRECHNEN in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.BABRECHNENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BAKTIV() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.BAKTIVColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BAKTIV in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.BAKTIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FEHLZEITTYP_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.FEHLZEITTYP_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte FEHLZEITTYP_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.FEHLZEITTYP_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IBERECHNUNGSTYP() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.IBERECHNUNGSTYPColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte IBERECHNUNGSTYP in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.IBERECHNUNGSTYPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DLASTUPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.DLASTUPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte DLASTUPDATE in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.DLASTUPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LASTUPDATE_BENUTZER_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.LASTUPDATE_BENUTZER_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte LASTUPDATE_BENUTZER_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.LASTUPDATE_BENUTZER_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TBL_HOMEOFFICE_GRUND_ID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.TBL_HOMEOFFICE_GRUND_IDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte TBL_HOMEOFFICE_GRUND_ID in Tabelle VWOCHENBERICHT ist DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.TBL_HOMEOFFICE_GRUND_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CNAME in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CEMAIL in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CVORNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CVORNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CVORNAME in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CVORNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CINITIALEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CINITIALENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CINITIALEN in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CINITIALENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PROJEKTLEITER_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.PROJEKTLEITER_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte PROJEKTLEITER_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.PROJEKTLEITER_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CBESCHREIBUNG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CBESCHREIBUNGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CBESCHREIBUNG in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CBESCHREIBUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SACHBEARBEITER_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.SACHBEARBEITER_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte SACHBEARBEITER_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.SACHBEARBEITER_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BOHNEBERECHNUNG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.BOHNEBERECHNUNGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte BOHNEBERECHNUNG in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.BOHNEBERECHNUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CTYP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CTYPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CTYP in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CTYPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CBEZEICHNUNG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CBEZEICHNUNGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CBEZEICHNUNG in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CBEZEICHNUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CTEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CTEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CTEXT in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CTEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CNR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CNRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CNR in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CNRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXPR1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.EXPR1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte EXPR1 in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.EXPR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADRESSE_ID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.ADRESSE_IDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte ADRESSE_ID in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.ADRESSE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CFIRMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CFIRMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CFIRMA in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CFIRMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CFIRMIERUNG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CFIRMIERUNGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CFIRMIERUNG in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CFIRMIERUNGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CZUSATZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CZUSATZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CZUSATZ in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CZUSATZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CANREDE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CANREDEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CANREDE in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CANREDEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CTITEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CTITELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CTITEL in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CTITELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CTEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CTELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CTEL in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CTELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _CSTR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CSTRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CSTR in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CSTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CPLZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CPLZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CPLZ in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CPLZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CORT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CORT in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CBLAND() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CBLANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CBLAND in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CBLANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CLAND() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CLANDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CLAND in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CLANDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CFIRMA2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVWOCHENBERICHT.CFIRMA2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Der Wert für Spalte CFIRMA2 in Tabelle VWOCHENBERICHT ist DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVWOCHENBERICHT.CFIRMA2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableVWOCHENBERICHT.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsISTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.ISTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetISTATUSNull()
            Me(Me.tableVWOCHENBERICHT.ISTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDDATUMNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.DDATUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDDATUMNull()
            Me(Me.tableVWOCHENBERICHT.DDATUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFDAUERNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.FDAUERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFDAUERNull()
            Me(Me.tableVWOCHENBERICHT.FDAUERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBENUTZER_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.BENUTZER_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBENUTZER_IDNull()
            Me(Me.tableVWOCHENBERICHT.BENUTZER_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKT_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.PROJEKT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKT_IDNull()
            Me(Me.tableVWOCHENBERICHT.PROJEKT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHKAT_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.HKAT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHKAT_IDNull()
            Me(Me.tableVWOCHENBERICHT.HKAT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBABRECHNENNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.BABRECHNENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBABRECHNENNull()
            Me(Me.tableVWOCHENBERICHT.BABRECHNENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBAKTIVNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.BAKTIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBAKTIVNull()
            Me(Me.tableVWOCHENBERICHT.BAKTIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFEHLZEITTYP_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.FEHLZEITTYP_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFEHLZEITTYP_IDNull()
            Me(Me.tableVWOCHENBERICHT.FEHLZEITTYP_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIBERECHNUNGSTYPNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.IBERECHNUNGSTYPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIBERECHNUNGSTYPNull()
            Me(Me.tableVWOCHENBERICHT.IBERECHNUNGSTYPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDLASTUPDATENull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.DLASTUPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDLASTUPDATENull()
            Me(Me.tableVWOCHENBERICHT.DLASTUPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLASTUPDATE_BENUTZER_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.LASTUPDATE_BENUTZER_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLASTUPDATE_BENUTZER_IDNull()
            Me(Me.tableVWOCHENBERICHT.LASTUPDATE_BENUTZER_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTBL_HOMEOFFICE_GRUND_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.TBL_HOMEOFFICE_GRUND_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTBL_HOMEOFFICE_GRUND_IDNull()
            Me(Me.tableVWOCHENBERICHT.TBL_HOMEOFFICE_GRUND_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCNAMENull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCNAMENull()
            Me(Me.tableVWOCHENBERICHT.CNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCEMAILNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCEMAILNull()
            Me(Me.tableVWOCHENBERICHT.CEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCVORNAMENull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CVORNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCVORNAMENull()
            Me(Me.tableVWOCHENBERICHT.CVORNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCINITIALENNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CINITIALENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCINITIALENNull()
            Me(Me.tableVWOCHENBERICHT.CINITIALENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPROJEKTLEITER_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.PROJEKTLEITER_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPROJEKTLEITER_IDNull()
            Me(Me.tableVWOCHENBERICHT.PROJEKTLEITER_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCBESCHREIBUNGNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CBESCHREIBUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCBESCHREIBUNGNull()
            Me(Me.tableVWOCHENBERICHT.CBESCHREIBUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSACHBEARBEITER_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.SACHBEARBEITER_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSACHBEARBEITER_IDNull()
            Me(Me.tableVWOCHENBERICHT.SACHBEARBEITER_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBOHNEBERECHNUNGNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.BOHNEBERECHNUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBOHNEBERECHNUNGNull()
            Me(Me.tableVWOCHENBERICHT.BOHNEBERECHNUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCTYPNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CTYPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCTYPNull()
            Me(Me.tableVWOCHENBERICHT.CTYPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCBEZEICHNUNGNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CBEZEICHNUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCBEZEICHNUNGNull()
            Me(Me.tableVWOCHENBERICHT.CBEZEICHNUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCTEXTNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CTEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCTEXTNull()
            Me(Me.tableVWOCHENBERICHT.CTEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCNRNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CNRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCNRNull()
            Me(Me.tableVWOCHENBERICHT.CNRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXPR1Null() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.EXPR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXPR1Null()
            Me(Me.tableVWOCHENBERICHT.EXPR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADRESSE_IDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.ADRESSE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADRESSE_IDNull()
            Me(Me.tableVWOCHENBERICHT.ADRESSE_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCFIRMANull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CFIRMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCFIRMANull()
            Me(Me.tableVWOCHENBERICHT.CFIRMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCFIRMIERUNGNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CFIRMIERUNGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCFIRMIERUNGNull()
            Me(Me.tableVWOCHENBERICHT.CFIRMIERUNGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCZUSATZNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CZUSATZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCZUSATZNull()
            Me(Me.tableVWOCHENBERICHT.CZUSATZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCANREDENull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CANREDEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCANREDENull()
            Me(Me.tableVWOCHENBERICHT.CANREDEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCTITELNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CTITELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCTITELNull()
            Me(Me.tableVWOCHENBERICHT.CTITELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCTELNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CTELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCTELNull()
            Me(Me.tableVWOCHENBERICHT.CTELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_CSTRNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CSTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_CSTRNull()
            Me(Me.tableVWOCHENBERICHT.CSTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCPLZNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CPLZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCPLZNull()
            Me(Me.tableVWOCHENBERICHT.CPLZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCORTNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCORTNull()
            Me(Me.tableVWOCHENBERICHT.CORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCBLANDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CBLANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCBLANDNull()
            Me(Me.tableVWOCHENBERICHT.CBLANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCLANDNull() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CLANDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCLANDNull()
            Me(Me.tableVWOCHENBERICHT.CLANDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCFIRMA2Null() As Boolean
            Return Me.IsNull(Me.tableVWOCHENBERICHT.CFIRMA2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCFIRMA2Null()
            Me(Me.tableVWOCHENBERICHT.CFIRMA2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class vProjekt_KundeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vProjekt_KundeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As vProjekt_KundeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As vProjekt_KundeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class VWOCHENBERICHTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VWOCHENBERICHTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As VWOCHENBERICHTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As VWOCHENBERICHTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsRestructTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vProjekt_KundeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vProjekt_Kunde"
            tableMapping.ColumnMappings.Add("cNr", "cNr")
            tableMapping.ColumnMappings.Add("cBeschreibung", "cBeschreibung")
            tableMapping.ColumnMappings.Add("cVorname", "cVorname")
            tableMapping.ColumnMappings.Add("cName", "cName")
            tableMapping.ColumnMappings.Add("cInitialien", "cInitialien")
            tableMapping.ColumnMappings.Add("cNrSub", "cNrSub")
            tableMapping.ColumnMappings.Add("cBeschreibungSub", "cBeschreibungSub")
            tableMapping.ColumnMappings.Add("cKNr", "cKNr")
            tableMapping.ColumnMappings.Add("cFirma", "cFirma")
            tableMapping.ColumnMappings.Add("cStr", "cStr")
            tableMapping.ColumnMappings.Add("cPLZ", "cPLZ")
            tableMapping.ColumnMappings.Add("cOrt", "cOrt")
            tableMapping.ColumnMappings.Add("cTel", "cTel")
            tableMapping.ColumnMappings.Add("cEmail", "cEmail")
            tableMapping.ColumnMappings.Add("Status_ID", "Status_ID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.PrinsReConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(2) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        cNr, cBeschreibung, cVorname, cName, cInitialien, cNrSub, cBeschrei"& _ 
                "bungSub, cKNr, cFirma, cStr, cPLZ, cOrt, cTel, cEmail, Status_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  vProjekt_Kunde"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        cNr, cBeschreibung, cVorname, cName, cInitialien, cNrSub, cBeschrei"& _ 
                "bungSub, cKNr, cFirma, cStr, cPLZ, cOrt, cTel, cEmail, Status_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  vProjekt_Kunde"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (cNr = @CNr)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CNr"
            param.Size = 50
            param.IsNullable = true
            param.SourceColumn = "cNr"
            Me._commandCollection(1).Parameters.Add(param)
            Me._commandCollection(2) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        cNr, cBeschreibung, cVorname, cName, cInitialien, cNrSub, cBeschrei"& _ 
                "bungSub, cKNr, cFirma, cStr, cPLZ, cOrt, cTel, cEmail, Status_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  vProjekt_Kunde"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Status_ID = @Status)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Status"
            param.DbType = Global.System.Data.DbType.Int64
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "Status_ID"
            Me._commandCollection(2).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRestruct.vProjekt_KundeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRestruct.vProjekt_KundeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRestruct.vProjekt_KundeDataTable = New dsRestruct.vProjekt_KundeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCNr(ByVal dataTable As dsRestruct.vProjekt_KundeDataTable, ByVal CNr As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CNr Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CNr,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCNr(ByVal CNr As String) As dsRestruct.vProjekt_KundeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CNr Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CNr,String)
            End If
            Dim dataTable As dsRestruct.vProjekt_KundeDataTable = New dsRestruct.vProjekt_KundeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByStatus(ByVal dataTable As dsRestruct.vProjekt_KundeDataTable, ByVal Status As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Status.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Status.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByStatus(ByVal Status As Global.System.Nullable(Of Long)) As dsRestruct.vProjekt_KundeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Status.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Status.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsRestruct.vProjekt_KundeDataTable = New dsRestruct.vProjekt_KundeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VWOCHENBERICHTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VWOCHENBERICHT"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ISTATUS", "ISTATUS")
            tableMapping.ColumnMappings.Add("DDATUM", "DDATUM")
            tableMapping.ColumnMappings.Add("FDAUER", "FDAUER")
            tableMapping.ColumnMappings.Add("BENUTZER_ID", "BENUTZER_ID")
            tableMapping.ColumnMappings.Add("PROJEKT_ID", "PROJEKT_ID")
            tableMapping.ColumnMappings.Add("HKAT_ID", "HKAT_ID")
            tableMapping.ColumnMappings.Add("BABRECHNEN", "BABRECHNEN")
            tableMapping.ColumnMappings.Add("BAKTIV", "BAKTIV")
            tableMapping.ColumnMappings.Add("FEHLZEITTYP_ID", "FEHLZEITTYP_ID")
            tableMapping.ColumnMappings.Add("IBERECHNUNGSTYP", "IBERECHNUNGSTYP")
            tableMapping.ColumnMappings.Add("DLASTUPDATE", "DLASTUPDATE")
            tableMapping.ColumnMappings.Add("LASTUPDATE_BENUTZER_ID", "LASTUPDATE_BENUTZER_ID")
            tableMapping.ColumnMappings.Add("TBL_HOMEOFFICE_GRUND_ID", "TBL_HOMEOFFICE_GRUND_ID")
            tableMapping.ColumnMappings.Add("CNAME", "CNAME")
            tableMapping.ColumnMappings.Add("CEMAIL", "CEMAIL")
            tableMapping.ColumnMappings.Add("CVORNAME", "CVORNAME")
            tableMapping.ColumnMappings.Add("CINITIALEN", "CINITIALEN")
            tableMapping.ColumnMappings.Add("PROJEKTLEITER_ID", "PROJEKTLEITER_ID")
            tableMapping.ColumnMappings.Add("CBESCHREIBUNG", "CBESCHREIBUNG")
            tableMapping.ColumnMappings.Add("SACHBEARBEITER_ID", "SACHBEARBEITER_ID")
            tableMapping.ColumnMappings.Add("BOHNEBERECHNUNG", "BOHNEBERECHNUNG")
            tableMapping.ColumnMappings.Add("CTYP", "CTYP")
            tableMapping.ColumnMappings.Add("CBEZEICHNUNG", "CBEZEICHNUNG")
            tableMapping.ColumnMappings.Add("CTEXT", "CTEXT")
            tableMapping.ColumnMappings.Add("CNR", "CNR")
            tableMapping.ColumnMappings.Add("EXPR1", "EXPR1")
            tableMapping.ColumnMappings.Add("ADRESSE_ID", "ADRESSE_ID")
            tableMapping.ColumnMappings.Add("CFIRMA", "CFIRMA")
            tableMapping.ColumnMappings.Add("CFIRMIERUNG", "CFIRMIERUNG")
            tableMapping.ColumnMappings.Add("CZUSATZ", "CZUSATZ")
            tableMapping.ColumnMappings.Add("CANREDE", "CANREDE")
            tableMapping.ColumnMappings.Add("CTITEL", "CTITEL")
            tableMapping.ColumnMappings.Add("CTEL", "CTEL")
            tableMapping.ColumnMappings.Add("CSTR", "CSTR")
            tableMapping.ColumnMappings.Add("CPLZ", "CPLZ")
            tableMapping.ColumnMappings.Add("CORT", "CORT")
            tableMapping.ColumnMappings.Add("CBLAND", "CBLAND")
            tableMapping.ColumnMappings.Add("CLAND", "CLAND")
            tableMapping.ColumnMappings.Add("CFIRMA2", "CFIRMA2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.CRM_Connect.My.MySettings.Default.ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(2) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""ID"", ""ISTATUS"", ""DDATUM"", ""FDAUER"", ""BENUTZER_ID"", ""PROJEKT_ID"", ""HKAT_ID"& _ 
                """, ""BABRECHNEN"", ""BAKTIV"", ""FEHLZEITTYP_ID"", ""IBERECHNUNGSTYP"", ""DLASTUPDATE"", """& _ 
                "LASTUPDATE_BENUTZER_ID"", ""TBL_HOMEOFFICE_GRUND_ID"", ""CNAME"", ""CEMAIL"", ""CVORNAME"& _ 
                """, ""CINITIALEN"", ""PROJEKTLEITER_ID"", ""CBESCHREIBUNG"", ""SACHBEARBEITER_ID"", ""BOHN"& _ 
                "EBERECHNUNG"", ""CTYP"", ""CBEZEICHNUNG"", ""CTEXT"", ""CNR"", ""EXPR1"", ""ADRESSE_ID"", ""CF"& _ 
                "IRMA"", ""CFIRMIERUNG"", ""CZUSATZ"", ""CANREDE"", ""CTITEL"", ""CTEL"", ""CSTR"", ""CPLZ"", ""C"& _ 
                "ORT"", ""CBLAND"", ""CLAND"", ""CFIRMA2"" FROM ""VWOCHENBERICHT"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ID, ISTATUS, DDATUM, FDAUER, BENUTZER_ID, PROJEKT_ID, HKAT_ID, BABR"& _ 
                "ECHNEN, BAKTIV, FEHLZEITTYP_ID, IBERECHNUNGSTYP, DLASTUPDATE, LASTUPDATE_BENUTZE"& _ 
                "R_ID, TBL_HOMEOFFICE_GRUND_ID, CNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CEMAIL, CVORNAM"& _ 
                "E, CINITIALEN, PROJEKTLEITER_ID, CBESCHREIBUNG, SACHBEARBEITER_ID, BOHNEBERECHNU"& _ 
                "NG, CTYP, CBEZEICHNUNG, CTEXT, CNR, EXPR1, ADRESSE_ID, CFIRMA, CFIRMIERUNG, CZUS"& _ 
                "ATZ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CANREDE, CTITEL, CTEL, CSTR, CPLZ, CORT, CBLAND,"& _ 
                " CLAND, CFIRMA2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VWOCHENBERICHT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (DDATUM >= @VonDat"& _ 
                "um AND DDATUM <= @BisDatum)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@VonDatum"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "DDATUM"
            Me._commandCollection(1).Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@BisDatum"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "DDATUM"
            Me._commandCollection(1).Parameters.Add(param)
            Me._commandCollection(2) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        ID, ISTATUS, DDATUM, FDAUER, BENUTZER_ID, PROJEKT_ID, HKAT_ID, BABR"& _ 
                "ECHNEN, BAKTIV, FEHLZEITTYP_ID, IBERECHNUNGSTYP, DLASTUPDATE, LASTUPDATE_BENUTZE"& _ 
                "R_ID, TBL_HOMEOFFICE_GRUND_ID, CNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CEMAIL, CVORNAM"& _ 
                "E, CINITIALEN, PROJEKTLEITER_ID, CBESCHREIBUNG, SACHBEARBEITER_ID, BOHNEBERECHNU"& _ 
                "NG, CTYP, CBEZEICHNUNG, CTEXT, CNR, EXPR1, ADRESSE_ID, CFIRMA, CFIRMIERUNG, CZUS"& _ 
                "ATZ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CANREDE, CTITEL, CTEL, CSTR, CPLZ, CORT, CBLAND,"& _ 
                " CLAND, CFIRMA2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VWOCHENBERICHT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (DDATUM >= @VonDat"& _ 
                "um AND DDATUM <= @BisDatum) AND (CNR like @CNr)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@VonDatum"
            param.DbType = Global.System.Data.DbType.[Date]
            param.Size = 1024
            param.IsNullable = true
            param.SourceColumn = "DDATUM"
            Me._commandCollection(2).Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@BisDatum"
            param.DbType = Global.System.Data.DbType.[Date]
            param.Size = 1024
            param.IsNullable = true
            param.SourceColumn = "DDATUM"
            Me._commandCollection(2).Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CNr"
            param.Size = 1024
            param.IsNullable = true
            param.SourceColumn = "CNR"
            Me._commandCollection(2).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRestruct.VWOCHENBERICHTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRestruct.VWOCHENBERICHTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRestruct.VWOCHENBERICHTDataTable = New dsRestruct.VWOCHENBERICHTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDatum(ByVal dataTable As dsRestruct.VWOCHENBERICHTDataTable, ByVal VonDatum As Global.System.Nullable(Of Date), ByVal BisDatum As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (VonDatum.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VonDatum.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BisDatum.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BisDatum.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDatum(ByVal VonDatum As Global.System.Nullable(Of Date), ByVal BisDatum As Global.System.Nullable(Of Date)) As dsRestruct.VWOCHENBERICHTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (VonDatum.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VonDatum.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BisDatum.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(BisDatum.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsRestruct.VWOCHENBERICHTDataTable = New dsRestruct.VWOCHENBERICHTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDatumPrj(ByVal dataTable As dsRestruct.VWOCHENBERICHTDataTable, ByVal VonDatum As Date, ByVal BisDatum As Date, ByVal CNr As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(VonDatum,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(BisDatum,Date)
            If (CNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CNr")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CNr,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDatumPrj(ByVal VonDatum As Date, ByVal BisDatum As Date, ByVal CNr As String) As dsRestruct.VWOCHENBERICHTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(VonDatum,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(BisDatum,Date)
            If (CNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CNr")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CNr,String)
            End If
            Dim dataTable As dsRestruct.VWOCHENBERICHTDataTable = New dsRestruct.VWOCHENBERICHTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsRestruct, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsRestruct, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsRestruct, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsRestruct) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager enthält keine Verbindungsinformationen. Legen Sie jede TableA"& _ 
                        "dapterManager TableAdapter-Eigenschaft auf eine gültige TableAdapter-Instanz fes"& _ 
                        "t.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Die Transaktion kann nicht gestartet werden. Die aktuelle Datenverbindung unterst"& _ 
                        "ützt keine Transaktionen, oder der aktuelle Zustand lässt den Start der Transakt"& _ 
                        "ion nicht zu.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
